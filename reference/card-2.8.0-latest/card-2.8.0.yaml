---
openapi: 3.0.0
info:
  title: Card
  description: Card API provides the ability to manage a card, digitally display card details, activate cards online through various channels, search for transactions, and search for basic cardholder information using details other than a card number. All times expressed in UTC standard time.
  version: 1.5.3
servers:
- url: https://card.api.fiservapps.com/cs/cards
  description: Production url
- url: https://card-sandbox.api.fiservapps.com/cs/cards
  description: Sandbox url
security:
- BearerAuth: []
tags:
- name: Activation
  x-group-name: Activation
  x-proxy-name: Activation
  x-child-product-name: Card
  description: Activate a card instantly, and retrieve current activation status for Debit and Credit cards.
- name: Details
  description: Retrieve details about cardholders. 
- name: Digital Card Display
  description: Display card activation date and CVV, enabling immediate use after issuance."
- name: Limits
  description: Set, search and update card limits for any specified Primary Account Number (PAN).
- name: PIN
  description: Set a pin and reset pin attempts.
- name: Replacement
  description: Order replacements for cards.
- name: Transaction
  description: Search for transactions on a card, retrieving summary or detailed information.
- name: Update Status
  description:  Update status of card.
paths:
  /v1/cards/status:
    put:
      tags:
      - Update Status
      x-group-name: Update Status
      x-proxy-name: CardStatusUpdate
      x-child-product-name: Card
      summary: Update the status of a card, including deactivation.
      operationId: CardStatusUpdate
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.m the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardStatusRequest'
            examples:
              cardStatusUpdate: {$ref: '#/components/examples/getUpdateCardStatusRequest'}
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              examples:
                cardStatusUpdate: {$ref: '#/components/examples/getUpdateCardStatusResponse'}
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/transactions/search:
    post:
      tags:
      - Transaction
      x-group-name: Transaction
      x-proxy-name: getTransactions
      x-child-product-name: Card
      summary: Retrieve transaction details of a given card based on the filter criteria passed.  Select summary or detailed responses.
      operationId: getTransactions
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      - name: filter
        in: query
        description: "Choose summary or detail response to transaction search. Defaults to summary.\nSummary includes these fields.\n  \nacquirerRefNum  \namtCharged  \nauthorizationCode  \ncardNumber  \neciMastercard   \neciVisa  \nexpirationDateMismatch  \nmemberNumber  \nmerchantCategoryCode  \nmerchantCity   \nmerchantName  \nmerchantState  \nmessageType  \nnetworkID  \npreAuthAmt  \npinTransaction  \nposDataInputCapability  \nposDataInputMode  \nresponseCode  \nresponseCodeDescription   \nsequenceNumber  \nsubResponseCode  \nsubResponseCodeDescription  \nsystemRecordId  \nterminalId   \ntransactionAmount  \ntransactedCardNumber  \ntransactioncode  \ntransactionDateTime  \ntransactionStatus   \ntransactionType  \nunmatchedCompletionFlag    \n\nDetail includes all the transaction fields.\n"
        required: true
        style: form
        explode: true
        schema:
          type: boolean
        example: summary
      requestBody:
        description: searchTransactionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransactionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/activations/search:
    post:
      tags:
      - Activation
      x-group-name: Activation
      x-proxy-name: getCardActivationInfo
      x-child-product-name: Card
      summary: Retrieves the activation details of a given card.
      operationId: getCardActivationInfo
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: ActivationSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationSearchRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardActivationResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/activations:
    put:
      tags:
      - Activation
      x-group-name: Activation
      x-proxy-name: activateCard
      x-child-product-name: Card
      summary: Force activate a given card.
      operationId: activateCard
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardActivationUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardActivationUpdateRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "409":
          description: Conflict
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/authDetails:
    post:
      tags:
      - Digital Card Display
      x-group-name: Digital Card Display
      x-proxy-name: getCardAuthDetails
      x-child-product-name: Card
      summary: Retrieve card expiration date and CVV for the card number.
      operationId: getCardAuthDetails
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: getCardAuthDetailsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDetailsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/token:
    post:
      tags:
      - PIN
      x-group-name: PIN
      x-proxy-name: getCardToken
      x-child-product-name: Card
      summary: Setting the PIN is a two step process. This operation returns a JWT which is valid for 15 minutes.
      operationId: getCardToken
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenRequest'
      responses:
        "200":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pin:
    post:
      tags:
      - PIN
      x-group-name: PIN
      x-proxy-name: setPin
      x-child-product-name: Card
      summary: Sets a PIN for a given card. Setting the PIN is a two step process. It requires a JWT from the cardsToken operation for the card for which PIN is to be set. The JWT must be used within 15 minutes.
      operationId: setPin
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pinAttempts:
    put:
      tags:
      - PIN
      x-group-name: PIN
      x-proxy-name: resetPinAttempts
      x-child-product-name: Card
      summary: Resets the pinAttempts count to zero for a given card.
      operationId: resetPinAttempts
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinAttemptUpdateRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/pinOffset:
    put:
      tags:
      - PIN
      x-group-name: PIN
      x-proxy-name: pinOffset
      x-child-product-name: Card
      summary: Sets the PIN offset.
      operationId: pinOffset
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinOffsetRequest'
        required: true
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/search:
    post:
      tags:
      - Limits
      x-group-name: Limits
      x-proxy-name: cardLimitSearch
      x-child-product-name: Card
      summary: Returns the limit values for a given card.
      operationId: cardLimitSearch
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: searchCardLimitsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardLimitsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/daily:
    put:
      tags:
      - Limits
      x-group-name: Limits
      x-proxy-name: updateDailyLimits
      x-child-product-name: Card
      summary: Override the daily limit values for a specific card. Applies to debit cards only.
      operationId: updateDailyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateDailyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDailyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/openToBuy:
    put:
      tags:
      - Limits
      x-group-name: Limits
      x-proxy-name: updateOpenToBuyLimits
      x-child-product-name: Card
      summary: Update the open to buy limit values for a specific card. Applies to debit cards only.
      operationId: updateOpenToBuyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateOpenToBuyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenToBuyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/velocity:
    put:
      tags:
      - Limits
      x-group-name: Limits
      x-proxy-name: updateVelocityLimits
      x-child-product-name: Card
      summary: Updates the velocity limit values for a specific card.
      operationId: updateVelocityLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateVelocityLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVelocityLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/default:
    put:
      tags:
      - Limits
      x-group-name: Limits
      x-proxy-name: defaultCardholderLimits
      x-child-product-name: Card
      summary: Sets the cardholder limits to default values per Card class.
      operationId: defaultCardholderLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: defaultCardholderLimits
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultCardholderLimitsRequest'
        required: true
      responses:
        "200":
          description: Ok
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCardholderLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/orderReplacement:
    post:
      tags:
      - Replacement
      x-group-name: Replacement
      x-proxy-name: replaceCard
      x-child-product-name: Card
      summary: Creates an Order to replace a Card.
      operationId: replaceCard
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardReplacementRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardReplacementRequest'
        required: true
      responses:
        "204":
          description: Order is placed successfully.
          headers:
            x-fapi-interaction-id:
              style: simple
              explode: false
              schema:
                type: string
                description: unique transaction ID created for each request for tracking purposes
        "400":
          description: Bad Request
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Resource Not Found
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/search:
    post:
      tags:
      - Details
      x-group-name: Details
      x-proxy-name: searchCardholder
      x-child-product-name: Card
      summary: Search cardholder records based on one or more search parameters.
      operationId: searchCardholder
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: Search Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardholderSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
components:
  schemas:
    CustomDailylimits:
      type: object
      properties:
        noneExpiring:
          maxLength: 3
          type: string
          description: Indicates if limits tend to expire.
          example: "true"
        expirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "3000"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: Combined total, Online and offline withdrawal limits at ATM and POS. | Daily Limit Combined number of transaction attempts allowed at the ATM and POS. | Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN)
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Total daily amount available for deposit
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
    CardsAddress:
      required:
      - addressType
      type: object
      properties:
        addressType:
          type: string
          description: "Types 'PRIMARY' and 'ALTERNATE' apply only to debit.  \nType 'BILLING' is applicable for any credit cardholders.  \nTypes 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary credit cardholder.\n"
          example: PRIMARY
          enum:
          - PRIMARY
          - ALTERNATE
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTER
        addressLine1:
          type: string
          description: Line1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line3 for Address.  Applies only to credit.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line4 for Address. Applies only to credit.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city, per the ISO 3166 standards.
          example: New Jersey
        stateCode:
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: Postal code of the state.
          example: "12345"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        isCardMailer:
          type: boolean
          description: Indicates that given address is used for Card Mailer on all future Card Orders. Applies to debit cards only.
        isPinMailer:
          type: boolean
          description: Indicates that given address is used for PIN Mailer on all future Card Orders. Applies to debit cards only.
        addressCategoryCode:
          type: string
          description: Indicates the category of an address like PERMANENT, REPEATING, and TEMPORARY. REPEATING is used for recurring within specific time periods. Applies to credit cards only.
          example: PERMANENT
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
    DefaultCardholderLimitsResponse:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Masked Cardnumber. First 6 and last 4 digits visible.
          example: 400020XXXXXX4000
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    DefaultCardholderLimitsRequest:
      title: DefaultCardholderLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
    CardsAddressUpdateRequest:
      title: CardsAddressUpdateRequest
      required:
      - address
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits. Required for debit and credit.
          example: "4000100020003000"
        address:
          type: array
          items:
            $ref: '#/components/schemas/CardsAddress'
    CustomVelocityLimits:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
    UpdateVelocityLimitRequest:
      title: UpdateVelocityLimitRequest
      required:
      - cardNumber
      - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    CustomOpenToBuyLimits:
      type: object
      properties:
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
    UpdateOpenToBuyLimitRequest:
      title: UpdateOpenToBuyLimitRequest
      required:
      - cardNumber
      - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
    UpdateDailyLimitRequest:
      title: UpdateDailyLimitRequest
      required:
      - cardNumber
      - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
    CardReplacementRequest:
      required:
      - cardNumber
      - rushType
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. Applies to debit cards only.
          example: "1"
        rushType:
          type: string
          description: Indicates how quickly to send a plastic card to the cardholder. Applies to credit and debit cards.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
        waiveReplacementFeeInd:
          type: string
          description: Indicates if a replacement fee will be charged to the customer. Possible values are Y or N. Default value is Y.  Optional. Applies to credit cards only.
          example: "Y"
        personalizedEmbossingText:
          type: string
          description: Personalized text embossed on the plaastic card. Optional. Applies to credit cards only.
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card. Applies to credit cards only.
        plasticsCount:
          type: string
          description: Indicates the number of cards issued. Required. Applies to credit cards only.
        transactionCode:
          type: string
          description: Optional. Applies to credit cards only.
        photoId:
          type: string
          description: Optional. Applies to credit cards only.
    PinAttemptUpdateRequest:
      title: PinattemptUpdateRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0. Applies to debit cards only.
          example: "0"
    SearchCardLimitsRequest:
      title: SearchCardLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
    SearchCardLimitsResponse:
      type: object
      properties:
        cardLimits:
          $ref: '#/components/schemas/CardLimitsSearch'
      description: Elements with null values in the response are not displayed.
    CardLimitsSearch:
      type: object
      properties:
        noneExpiring:
          maxLength: 3
          type: string
          description: Indicates if the limits will expire or not. Valid values YES, NO.
          example: "false"
        expirationDate:
          type: string
          description: The expiration date of the limits if the limits tend to expire. Not applicable if they have no expiration date.  Applies to daily limits only.
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
          - OVERRIDE
          - CARD_CLASS
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "2"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: "Combined total, Online and offline withdrawal limits at ATM and POS.  \nDaily Limit Combined number of transaction attempts allowed at the ATM and POS.\nVelocity Support (Maximum number of transactions allowed during the lifespan of the PAN)\n"
          example: "2500"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time.
          example: "0"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.
          example: "0"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        retail:
          type: string
          description: Minimum retail authorization amount. The system approves any retail transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        travel:
          type: string
          description: Minimum travel and entertainment authorization amount. The system approves any travel and entertainment transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
    CardActivationUpdateResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: The activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateResponseWarning:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: Actvation status of the card. NOT_ACTIVATED and ACTIVATED statuses apply to both debit and credit cards, remaining statuses apply to debit only.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Elements with null values in the response are not displayed.
    SearchCardActivationResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000100020003001"
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0. Applies to debit cards only.
          example: "0"
    PinOffsetRequest:
      required:
      - cardNumber
      - pinOffset
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the card.
        cardType:
          type: string
          description: Card Type. Possible values Debit or Credit. If no value is passed, system determines value.
          example: DEBIT
          default: ""
          enum:
          - DEBIT
          - CREDIT
          - ""
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Required.
          example: "1234"
    AuthDetailsRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
    AuthDetailsResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020XXXXXX4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        cardExpirationDate:
          type: string
          description: Card Expiration Date.
          format: MMYY
          example: "0228"
    ActivationSearchRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000100020003001"
    CardDetailsUpdateRequest:
      title: CardDetailsUpdateRequest
      required:
      - op
      - updateCardDetails
      type: object
      properties:
        op:
          type: array
          items:
            type: string
            description: Updates the card status.
            enum:
            - UPDATE_CARD_STATUS
        updateCardDetails:
          $ref: '#/components/schemas/UpdateCardDetails'
    CardholderDemographics_contact_stepUpVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect stepup user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect stepup user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect stepup user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to connect stepup user phone number to receive text messages/announcements. This is optional
    CardholderDemographics_contact_stepUpText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to text stepup user home phone address. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to text stepup user work phone address. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to text stepup user mobile phone address. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to text stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to text stepup user mobile number. This is optional.
    CardholderDemographics_contact_enfactText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number for receiving text address/announcements. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number for receiving text address/announcements. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect enfact user address for receiving text address/announcements. This is optional
        mobileText:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
    CardholderDemographics_contact_enfactVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        textAddress:
          type: boolean
          description: Indicates whether to connect enfact user phone number for receiving text address/announcements. This is optional.
    CardholderDemographics_contact_enfact:
      type: object
      properties:
        enfactLanguagePreference:
          type: string
          description: Indicates the preferred language that can be used for communicating with the enfact system.
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographics_contact_text:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character.
          example: 000-555-0000
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character.
          example: 000-555-0000
    CardholderDemographics_contact_email:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. Optional. Applies to debit and credit cards. Max length 50.
          example: jessedoe@example.com
    CardholderDemographics_contact_voice:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 000-555-0000
    CardholderDemographics_contact:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographics_contact_voice'
        email:
          $ref: '#/components/schemas/CardholderDemographics_contact_email'
        text:
          $ref: '#/components/schemas/CardholderDemographics_contact_text'
        enfact:
          $ref: '#/components/schemas/CardholderDemographics_contact_enfact'
        enfactVoice:
          $ref: '#/components/schemas/CardholderDemographics_contact_enfactVoice'
        enfactText:
          $ref: '#/components/schemas/CardholderDemographics_contact_enfactText'
        stepUpText:
          $ref: '#/components/schemas/CardholderDemographics_contact_stepUpText'
        stepUpVoice:
          $ref: '#/components/schemas/CardholderDemographics_contact_stepUpVoice'
    Tcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: "Indicates the Telephone Consumer Protection Act (TCPA) type. Possible values  \nEnfact: fraud monitoring system which used for identifying suspicious activities on the credit and debit cards.  \nStepup: authentication system where an OTP is sent to the cardholder's available contact information. \n"
          enum:
          - ENFACT
          - STEPUP
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
        lastUpdatedDate:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date
        lastUpdatedBy:
          type: string
          description: Last updated by. Max length 25. Optional. Applies to debit and credit cards.
          example: Jesse Doe
    SearchTransactionRequest:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the card. If not passed, defaults to ALL. Transaction summary ia returned as an array for all member numbers when defaulted to All.
          example: "0"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    SearchTransactionsResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 50
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    FilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: "Filter applied to transactions search. One or many filter combinations are allowed. Applies to debit and credit cards.  \nMERCHANT_NAME - Merchant Name  \nAMOUNT_FROM - Minimum amount. Valid format is 0.00. \nAMOUNT_TO - Maximum amount. Valid format is 0.00. \nFROM_DATE - Start date. Valid Format is YYYY-MM-DD. \nTO_DATE - End date. Valid format is YYYY-MM-DD. \nSTATUS - For debit transactions valid status are APPROVED and REVERSED. For credit transactions valid status are  POSTED/DECLINED/PENDING/APPROVED/REVERSED. \nTRANSACTION_CODE - Describes the type of transaction done on card. For values refer field transactionType.  \nMESSAGE_TYPE - Message based on activity done on the transaction. For values refer field MessageType.  Applies only to debit cards.\n"
          enum:
          - MERCHANT_NAME
          - AMOUNT_FROM
          - AMOUNT_TO
          - FROM_DATE
          - TO_DATE
          - STATUS
          - TRANSACTION_CODE
          - MESSAGE_TYPE
        filterValue:
          type: string
          description: Values for selected filters. If the filterBy field is set to MERCHANT_NAME, this field contains the name of the merchant, such as 'ExampleCo'. See filterBy field for more information.
    Transaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: life cycle key. Applies to debit cards only.
        cardNumber:
          type: string
          description: Card  number used in transaction, identified in request. Masked in the response. Applies to debit and credit cards.
        memberNumber:
          type: string
          description: Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only.
          example: "1"
        cardType:
          type: string
          description: Possible values DEBIT, CREDIT_GATEWAY or CREDIT. Applies to debit and credit cards.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000009"
        subResponseCode:
          type: string
          description: Optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination. Applies to debit cards only.
        subResponseCodeDescription:
          type: string
          description: Description for sub response code. Applies to debit cards only.
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed. Applies to debit cards only.
          example: "1299.00"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction, this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1. Applies to debit cards only.
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code, generated for approved transactions only. Applies to debit and credit cards.
          example: "050821"
        terminalId:
          type: string
          description: Identifier indicating the terminal where the transaction was performed. Applies to debit cards only.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service. Applies to debit and credit cards.
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City & State where terminal is located. Applies to debit and credit cards.
          example: City
        merchantState:
          type: string
          description: "Merchant State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI  Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey\nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming \n"
          example: IL
        eciMastercard:
          type: string
          description: "Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction. Applies to debit cards only.  \n  \nPossible Positions 1 and 2 values  \n  \n• 21 = Channel encryption; cardholder certificate not used  \n• 22 = Masterpass-generated transaction  \n• 24 = Digital Secure Remote Payment (DSRP) transaction  \n• 91 = No security protocol; cardholder certificate not used.  \n  \nPossible Position 3 values  \n  \n• 0 = Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant an Identity Check merchant has chosen not to undertake Identity Check on this transaction or identity Check failed authentication and merchant desires to proceed with transaction  \n• 1 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV  \n• 2 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  \n• 3 = UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  \n• 4 = Merchant has chosen to share authentication data within authorization; UCAF collection not supported  \n• 5 = Reserved for future use  \n• 6 = Merchant Risk-Based Decisioning  \n• 7 = Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction\n"
          example: "21"
        eciVisa:
          type: string
          description: "Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  Applies to debit cards only.  \n  \nPosition 4: Mail/Phone/Electronic Commerce and Payment Indicator:  \n  \n• Space = POS Customer Present (POS Check Service Only)  \n• 1 = Single transaction of a mail/phone order  \n• 2 = Recurring transaction  \n• 3 = Installment payment  \n• 4 = Unknown classification/Other mail order  \n• 5 = Secure electronic commerce transaction  \n• 6 = Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  \n• 7 = Non-authenticated security transaction • 8=Non-secure transaction'\n"
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction. Valid values Yes or No. Applies to debit cards only.
          example: 1 - Yes
        networkID:
          type: string
          description: Specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. Applies to debit cards only.
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections. Applies to debit cards only.
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system. Applies to debit cards only.
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Applies to debit cards only.
        unmatchedCompletionFlag:
          type: string
          description: Indicates unmatched completion flag. Applies to debit cards only.
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if an expiration date mismatch exists. Applies to debit cards only.
          example: "N"
        effectiveDate:
          type: string
          description: Date when the transaction came into effect. Applies to credit cards only.
          format: date
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created. Applies to debit and credit cards.
          format: date-time
        transactedCardNumber:
          type: string
          description: CardNumber given for monetary(posted) transactions if available, otherwise blank. Applies to credit cards only.
          example: 4443115KUCWPZF7831
        statusDescription:
          type: string
          description: Combination of status code and description for transaction status. Applies to debit and credit cards.
          example: 64-PI LOST
        merchantName:
          type: string
          description: Merchant Name. Applies to debit and credit cards.
          example: Abc
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00. Applies to debit and credit cards.
          example: "1299.00"
        transactionType:
          type: string
          description: "Indicates the type of transaction made on the card. This contains the transactionCode description of status Posted transactions.  \n  \nValid values for DEBIT   \n  \nAccount Inquiry           \nBalance Inquiry  \nCheck Cashing  \nCredit  \nDebit  \nDeposit  \nDeposit Cash Back  \nLoan to Prepaid  \nMember Verification  \nMessage  \nMoney Transfer Credit  \nMoney Transfer Dispense  \nMoney Transfer Funding  \nMoney Transfer Initiate  \nMoney Transfer Refund  \nPayment  \nPayment Enclosed  \nPayment to Merchant  \nPIN Select  \nRefund from Merchant  \nSpecial Purchase  \nStatement Print  \nThird Party Bill Payment Return  \nTransfer  \nWithdrawal  \n  \nValid Values for CREDIT when transaction status is Posted.  \n           \nAccount Balance Details for MULTRAN Accounts  \nAccount Level Processing Strategy Change Message  \nAccount Transfer  \nAirline Itinerary  \nBackdated Cash Advance Finance Charge  \nBackdated Cash Advance and Sales Adjustment  \nBackdated Payment Adjustment  \nBackdated Payment or Cash Advance Adjustment  \nBackdated Payment Interest Adjustment  \nCash Advance  \nCash Advance Amount Adjustment  \nCash Advance Finance Charge\nCash Advance Finance Charge Refund  \nCash Advance Item Charge  \nCash Advance Item Charge Refund  \nCash Advance Reversal  \nCharge Off All Finance Charges  \nCharge Off Billed Cash Advance Item Charges  \nCharge Off Billed Merchandise Item Charges  \nCharge Off Billed Late Charges  \nCharge Off Billed Overlimit Fees  \nCharge Off Cash Advance Interest  \nCharge Off Credit Life Insurance  \nCharge Off All Current Cash Advance Interest  \nCharge Off All Current Merchandise Interest  \nCharge Off Cycle-to-Date Cash Advance Item Charges\nCharge Off Cycle-to-Date Late Charges  \nCharge Off Cycle-to-Date Merchandise Item Charges\nCharge Off Cycle-to-Date Overlimit Fees\nCharge Off Merchandise Interest and Service Charges\nCharge Off Total Account  \nCredit Life Insurance Fee Refund  \nCredit Life Insurance Charge  \nFee or Finance Charge Rebate  \nFinance Charge (item charge)  \nInterest Earned or Credit Interest  \nLate Charge  \nLate Charge Refund  \nMerchandise Finance Charge  \nMerchandise Finance Charge Refund  \nMerchandise Item Charge  \nMerchandise Item Charge Refund  \nMerchandise Sale Amount Adjustment  \nMerchandise Sale Reversal  \nOverlimit Account Message  \nOverlimit Charge  \nOverlimit Charge Refund  \nPayment  \nPayment Amount Adjustment  \nPayment Reversal  \nRetail Special Details  \nReturn  \nReturn Amount Adjustment  \nReturn Reversal  \nReserved for restricted use  \nSale  \nSkip Payment Certificate Message  \nService Charge or Statement Charge  \nSmall Balance Charge-off  \nSpecial Details  \nSpecific Credit Amount Adjustment  \n  \nTransaction status Pending or Declined for CREDIT  \n  \nAccount status inquiry service or payment account status inquiry  \nAccount status check via a token provisioning request resulted in an approved response  \nAccount status inquiry service or payment account status inquiry  \nActivation code notification message for token provisioning via step-up authentication processing  \nAuthorization adjustment  \nBalance inquiry approved  \nCash advance authorization approved  \nCash advance authorization approved by expansion  \nCash advance authorization approved by name  \nCash advance authorization approved by positive identification  \nCash advance authorization declined  \nCash advance authorization manually declined  \nCash authorization approved without issuer contact  \nCash referral  \nCheck authorization approved  \nCheck authorization declined  \nCheck system error - declined  \nDuplicate authorization  \nIn-store return  \nIssuer’s adjustment  \nManual override cash advance authorization  \nManual override merchandise authorization  \nMerchandise authorization approved  \nMerchandise authorization approved by expansion  \nMerchandise authorization approved by name  \nMerchandise authorization approved by positive identification  \nMerchandise authorization approved without issuer contact  \nMerchandise authorization declined  \nMerchandise authorization manually declined  \nMerchandise referral  \nMerchandise return adjustment  \nMerchandise return adjustment declined  \nMerchandise return approved  \nMerchandise return declined  \nOverride declined cash advance  \nOverride declined merchandise authorization  \nPay unposted check  \nPermanent authorization adjustment  \nPermanent authorization request  \nPreauthorization request approved  \nPreauthorization request denied  \nPrivate label ETC return posted at the time of return  \nReserved for restricted use  \nReturn posted check  \nReturn unposted check  \nRight-time payment  \nRight-time pay/reversal  \nToken has been granted linked to the cardholder account and provisioned  \nToken maintenance such as activation, deactivation, suspension, exception, or replacement  \nToken provision decision  \nVisa and Mastercard person-to-person payment transaction reversal  \nVisa and Mastercard person-to-person payment transaction decline  \n"
          example: WITHDRAWAL
        messageType:
          type: string
          description: "The combination of message type code and description for transaction message. Applies to debit cards only.  \n100- Pre-Auth Request  \n102- Pre-Auth Reversal  \n110- Preauthorization  \n120- Pre-Auth Stand In  \n121- Pre-Auth Adv Repeat  \n130- Auth Advice Resp  \n200- Request  \n202- Auth Reversal  \n210- Auth/Completion  \n220- Forced Completion  \n221- Advice Repeat  \n230- Advice Response  \n320- Batch Upload  \n330- Batch Upload Resp  \n420- Reversal  \n421- Advice Rev Repeat  \n430- Reversal Response  \n500- Batch Settl Request  \n510- Batch Settl Resp  \n800- Network Mgmt Req  \n810- Network Mgmt Resp  \n820- Network Mgmt Advice\n"
          example: 420- Reversal
        transactionStatus:
          type: string
          description: Status of the transaction. Possible values for debit APPROVED and REVERSED.  Valid values for credit POSTED - PENDING - DECLINED - APPROVED - REVERSED
          example: APPROVED
        responseCode:
          type: string
          description: Authorization response approval or denial code.  Applies to debit and credit cards.
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code. Applies to debit and credit cards.
          example: APPROVED - WITH BALANCES
        transactionCode:
          type: string
          description: "Code assigned to particular transaction.  This field is not populated in response when transaction status is Posted, instead description is populated in transaction type field. Applies to credit cards only.  \n253- Sale   \n254- Cash Advance  \n255- Return  \n256- Merchandise Sale Reversal  \n257- Cash Advance Reversal  \n258- ReturnReversal  \n259- Merchandise Sale Amount Adjustment  \n260- Cash Advance Amount Adjustment  \n261- Return Amount Adjustment  \n271- Payment  \n272- Payment Reversal  \n273- Payment Amount Adjustment \n280- Specific Credit Amount Adjustment  \n281- Cash Advance Item Charge Refund  \n282  Late Charge Refund  \n283  Merchandise Finance Charge Refund  \n284  Cash Advance Finance Charge Refund  \n285  Backdated Payment Adjustment  \n286  Merchandise Item Charge Refund  \n287  Overlimit Charge Refund  \n288  Credit Life Insurance Fee Refund  \n290  Backdate Cash Advance and Sales Adjustment  \n370  Small Balance Charge-off  \n371  Charge Off Total Account   \n372  Charge Off Cash Advance Interest  \n373  Charge Off Billed Late Charges  \n374  Charge Off Merchandise Interest and Service Charges  \n375  Charge Off Credit Life Insurance  \n376  Charge Off All Finance Charges  \n377  Charge Off All Current Cash Advance Interest  \n378  Charge Off All Current Merchandise Interest  \n379  Charge Off Cycle-to-Date Late Charges  \n380  Charge Off Billed Cash Advance Item Charges  \n381  Charge Off Billed Merchandise Item Charges  \n382  Charge Off Billed Overlimit Fees  \n383  Charge Off Cycle-to-Date Cash Advance Item Charges  \n384  Charge Off Cycle-to-Date Merchandise Item Charges  \n385  Charge Off Cycle-to-Date Overlimit Fees  \n400  Account Transfer  \n900  Finance Charge (item charge)  \n959  Reserved for restricted use  \n960  Reserved for restricted use   \n961  Late Charge  \n962  Credit Life Insurance Charge  \n963  Cash Advance Finance Charge  \n964  Merchandise Finance Charge  \n965  Overlimit Account Message  \n966  Reserved for restricted use  \n967  Account Level Processing Strategy Change Message  \n976  Reserved for restricted use  \n978  Reserved for restricted use   \n979  Reserved for restricted use   \n981  Account Balance Details for MULTRAN Accounts  \n984  Backdated Cash Advance Finance Charge  \n985  Backdated Payment Interest Adjustment  \n986  Cash Advance Item Charge  \n987  Merchandise Item Charge  \n988  Overlimit Charge  \n989  Interest Earned or Credit Interest  \n990  Service Charge or Statement Charge  \n991  Cash Advance Item Charge  \n992  Fee or Finance Charge Rebate  \n993  Backdated Payment or Cash Advance Adjustment  \n994  Skip Payment Certificate Message  \n997  Retail Special Details  \n998  Airline Itinerary Special Details\n999  First Data use only.  \n             \nBelow transaction codes and description are for the transaction status Pending or Declined. \n  \nAA  Authorization adjustment  \nAC  Activation code notification message for token provisioning via step-up authentication processing  \nAK  Check authorization approved.  \nAP  Preauthorization request approved  \nAS  Account status inquiry service or payment account status inquiry  \nCA  Cash advance authorization approved  \nCD  Cash advance authorization declined  \nCE  Cash advance authorization approved by expansion  \nCO  Override declined cash advance  \nCP  Cash advance authorization approved by positive identification  \nCS  Cash referral  \nCT  Cash advance authorization approved by name  \nCX  Cash advance authorization manually declined  \nDA  Duplicate authorization  \nDC  Cash authorization approved without issuer contact  \nDK  Check authorization declined  \nDM  Merchandise authorization approved without issuer contact  \nDP  Preauthorization request denied  \nEC  Balance inquiry approved  \nIA  Issuer’s adjustment  \nIV  Reserved for restricted use  \nKE  Check system error - declined  \nKR  Return posted check  \nMA  Merchandise authorization approved  \nMC  In-store return  \nMD  Merchandise authorization declined  \nME  Merchandise authorization approved by expansion  \nMI  Right-time payment  \nMO  Override declined merchandise authorization  \nMP  Merchandise authorization approved by positive identification  \nMR  Right-time pay/reversal  \nMS  Merchandise referral  \nMT  Merchandise authorization approved by name  \nMX  Merchandise authorization manually declined  \nPA  Permanent authorization request  \nPK  Pay unposted check  \nPR  Visa and Mastercard person-to-person payment transaction reversal  \nPX  Visa and Mastercard person-to-person payment transaction decline  \nPZ  Permanent authorization adjustment  \nQA  Merchandise return adjustment  \nQD  Merchandise return declined  \nQQ  Reserved for restricted use  \nQR  Merchandise return approved  \nQZ  Merchandise return adjustment declined  \nRK  Return unposted check  \nTA  Account status check via a token provisioning request resulted in an approved response  \nTD  Token provision decision  \nTM  Token maintenance, such as activation, deactivation, suspension, exception, or replacement  \nTN  Token has been granted, linked to the cardholder account, and provisioned  \nVA  Private label ETC return posted at the time of return  \nXC  Manual override cash advance authorization  \nXM  Manual override merchandise authorization.\n"
          example: "961"
        declinedTransactionDetails:
          $ref: '#/components/schemas/DeclinedTransactionDetails'
        pendingTransactionDetails:
          $ref: '#/components/schemas/PendingTransactionDetails'
        postedTransactionDetails:
          $ref: '#/components/schemas/PostedTransactionDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
    DeclinedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Description of the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
          example: ME
        declinedReasonCode:
          type: string
          description: Reason code and description for declined transactions.
          example: 64-PI LOST
        expandedReasonCode:
          type: string
          description: Code for expanded reason.
        authorizationResponseDescription:
          type: string
          description: Description of the authorization response.
      description: Tag applies to credit cards only.
    PendingTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Describes the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        posEntryModeCode:
          type: string
          description: posentry mode code
        enteredExpirationDate:
          type: string
          description: Entered expiration date.
        authorizationCode:
          type: string
          description: Authorization code associated with the approved transaction.
        transactionCode:
          type: string
          description: Code associated with particular transaction.
        declinedReasonCode:
          type: string
          description: Reason code for declined transaction.
        expandedReasonCode:
          type: string
          description: The expanded reason code.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example, if authorized amount is 100 and transaction amount is 60, 40 is the adjustment amount.
      description: Tag applies to credit cards only.
    PostedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        cardholderAccountNumber:
          type: string
          description: The cardholderAccountNumber is used as control account number in case of consolidated billing on subordinate account transaction.
        transactionDescription:
          type: string
          description: Description of transaction
        promotionId:
          type: string
          description: Identifies the promotion to which the transaction was posted.
        authorizationCode:
          type: string
          description: 5- or 6-digit code provided by the issuer or its agent to indicate approval of the transaction.
        postingDate:
          type: string
          description: Posting date of the transaction.
          format: date
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction id
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example if authorized amount is 100 and transaction is 60, 40 is the adjustment amount.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
      description: Tag applies to credit cards only.
    TransactionDetails:
      type: object
      properties:
        entryMode:
          type: string
          description: Method used to input the information from the card to the terminal.
          example: 2 - Swipe
        enteredExpirationDate:
          type: string
          description: Expiration date entered for the transaction.
          format: MMYY
          example: "1122"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.
          example: 1 - Yes
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        international:
          type: string
          description: Indicates if the transaction was international.
          example: "No"
        eCommerce:
          type: string
          description: Indicates if the transaction was eCommerce.
        avsResult:
          type: string
          description: Address verification service result.
        avsAddress:
          type: string
          description: Address provided for address verification.
        settlementAmount:
          type: string
          description: Amount paid to merchant.
          example: "1100.00"
          x-encrypted: "N"
        transactionfeeAmount:
          type: string
          description: Fee amount charged on transaction.
          example: "20.00"
        transactionCurrencyCode:
          type: string
          description: Currency code for transaction amount.
        settlementCurrencyCode:
          type: string
          description: Currency Code for the settlement amount.
        settlementConversionRate:
          type: string
          description: Conversion Rate applied on settlement amount.
        reversalreason:
          type: string
          description: Reason for reversal transaction.
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        cardSequenceNumber:
          type: string
          description: Card Sequence Number distinguishes among separate cards having the same PAN.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction identifier of particular transactions.
        pinVerified:
          type: string
          description: Indicates if PINverification took place on the client platform.
        availableUsage:
          type: string
          description: Amount of available credit on the account.
        transactionAmtoriginal:
          type: string
          description: Original amount of funds requested by the cardholder in the transaction currency (US Dollars). This amount includes cashback and surcharge fees and is exclusive of ISA and CCA fees.
        systemAudit:
          type: string
          description: Number a message initiator assigns to uniquely identify a transaction.
        messageId:
          type: string
          description: Identifier for the ISO message type used for this transaction.
        fraudDecision:
          type: string
          description: Decision returned by the third-party fraud interface.
        falconScore:
          type: string
          description: Score assigned by third-party fraud interface for authorization sent online.
        merchantCode:
          type: string
          description: Indicates the merchant category code associated with the transaction.
        acquiringCountryCode:
          type: string
          description: Code of the country where the acquiring institution is located.
        posMode:
          type: string
          description: Numeric codes to indicate the method by which the PAN was entered into the interchange system and to indicate the POS terminal PIN entry capabilities.
        posCode:
          type: string
          description: Identifies the Point of Service condition code. It describes the condition under which the transaction took place at POS.
        acquiringId:
          type: string
          description: Acquiring Institution ID code identifies the Acquiring Institution Or Merchant Bank for this transaction. MC - 5 to 11 digits. VISA - 6 to 11 digits.
        cardAcceptorTermId:
          type: string
          description: Identifies a terminal at the card acceptor location of acquiring institutions or merchant POS systems. The terminal ID should be printed on all transaction receipts in ATM and POS transactions where the terminal is capable of generating customer receipts.
        cardAcceptorIdCode:
          type: string
          description: Identification number assigned to the establishment where the transaction was acquired.
        cardAcceptorName:
          type: string
          description: Indicates the name of the establishment where the transaction was acquired.
        cardAcceptorCity:
          type: string
          description: Indicates the city where the call originated.
        cavvResult:
          type: string
          description: Indicates the Cardholder Authentication Verification Value (CAVV) results code that identifies the outcome of CAVV validation. The value in field also indicates who performed the authentication, either Visa or the issuer, and the classification of the transaction.
        cvvResult:
          type: string
          description: Defines outcome of CVV validation.
        originalResponseCode:
          type: string
          description: Original response code from the original tramsaction. For an instance, when V.I.P. encounters a duplicate transaction, this field contains the field 39 response code from the original transaction.
        additionalData1:
          type: string
          description: Any optional data received on the response.
        additionalData2:
          type: string
          description: Any optional data received on the response.
        avsOptionCode:
          type: string
          description: Address Verification Service (AVS) Request indicates that verification of the cardholder billing address is requested in the authorization message.
        cvcResultCode:
          type: string
          description: The result code of CVC (Card Verification Code).
        tagData:
          type: string
          description: Identifies the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
        tagCode:
          type: string
          description: Indicates whether the merchant terminal supports a specific program or service.
        tagSvcRsn:
          type: string
          description: Notifies the issuer of the On-behalf Service performed on the transaction and the results. Sub element,71 will support up to ten services for a transaction.
        terminalIndicator:
          type: string
          description: This field maps to Field 55 Tag 95— Terminal Verification Results.This Tag maps to Field 131—Terminal Verification Results (TVR).Field 131 is carried in VSDC transactions and contains indicators from a terminal perspective.  The terminal records the results of offline and online processing by setting a series of indicators in this field.   These indicators are available to clients in the online message and clearing transaction.
        riskCodeOne:
          type: string
          description: Field 62.22, positions 1-2 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Account Risk Condition Code (CARCC) related to a high-risk even in the Compromised Account Management System (CAMS).
        riskCodeTwo:
          type: string
          description: Field 62.22, positions 3-4 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Event Reference (CER) ID related to a high-risk CAMS event.
        riskCodeThree:
          type: string
          description: Field 62.22, positions 5-6 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.
        riskReasonCodeOne:
          type: string
          description: Field 62.21, position 3 is.an alphanumeric combination that will act as a key to explain the risk score model.
        riskReasonCodeTwo:
          type: string
          description: Field 62.21, positon 4 is an alphanumeric combination that will act as a key to explain the risk score model.
        riskScore:
          type: string
          description: Field 62.21, positions 1-2 is a Visa private-use field that contains online risk assessment information from Advanced Authorization. This information assists issuers in the authorization decision-making process.This value indicates the degree of risk associated with a transaction. This two-byte transaction risk score is represented by a numeric value from 01–99.
        messageReasonCode:
          type: string
          description: Code explaining the reason for an online acquirer advice, reversal, or partial reversal.
        networkID:
          type: string
          description: Code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction.
        mcOriginalTypeId:
          type: string
          description: Original type id
        mcOriginalRef:
          type: string
          description: Original reference with the merchant.
        avsPostalCode:
          type: string
          description: Identifies the cardholder postal code and street address that is used for certain types of verification.
        cvvCVVtwo:
          type: string
          description: The CVV2/CVC2 value that is printed on the signature panel of Visa and Mastercard plastics. This value is made available for issuers that want to validate the CVV2/CVC2 value themselves. The value will only be passed to an issuer if provided by the acquirer.  Provided transactions in which the debit card is not present.
        applicationTranCounter:
          type: string
          description: Count of the transactions performed within the card application. The count is incremented by one each time a transaction is initiated. Multiple authorization requests for the same transaction will have the same ATC; for example, when online PIN fails and the next authorization represents a different PIN try for the same transaction, the ATC will be the same. For reversals and advices, the ATC is the value from the original message.
        appInterchangeProfile:
          type: string
          description: Field 138 is carried in VSDC transactions and provides a series of indicators that reflect the specific functions supported by the chip card account, for example, whether cardholder verification is supported.This field maps to Field 55, Tag 82—Application Interchange Profile.
        terminalCountryCode:
          type: string
          description: This field is carried in VISA SMART DEBIT SMART CREDIT (VSDC) transactions and identifies the country where the merchant terminal is located. A leading zero is required to pad the first unused half-byte of this field. The zero is filler and is not part of the code.This field maps to Field 55, Tag 9F1A—Terminal Country Code.
        stateCode:
          type: string
          description: Originating Center State Postal Code
        generalDetails:
          $ref: '#/components/schemas/GeneralDetails'
        amountDetails:
          $ref: '#/components/schemas/AmountDetails'
        networkInfo:
          $ref: '#/components/schemas/NetworkInfo'
        tokenAndEmvInfo:
          $ref: '#/components/schemas/TokenAndEmvInfo'
        riskInfo:
          $ref: '#/components/schemas/RiskInfo'
        acquirerInfo:
          $ref: '#/components/schemas/AcquirerInfo'
      description: Applies to debit cards only.
    AcquirerInfo:
      type: object
      properties:
        merchantName:
          type: string
          description: Merchant that acquired the POS transaction.
        merchantId:
          type: string
          description: Merchant identification number where the transaction originated.
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
        terminalStreet:
          type: string
          description: Street address where the terminal is located.
        terminalCityAndState:
          type: string
          description: "Merchant State  \nAL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  \nCA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  \nFM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  \nFL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI  Hawaii  \nID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  \nLA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  \nMD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  \nMO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey\nNM New Mexico | NY New York | NC North Carolina | ND North Dakota  \nMP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  \nOH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  \nPA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  \nSC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  \nVT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming \nWA Washington | WV West Virginia | WI Wisconsin | WY Wyoming \n"
          example: 5533 0472, NY
        merchantCountry:
          type: string
          description: Country where the merchant is located.
          example: USA
          x-applicable(Credit/Debit): Debit
          x-mandatory(Credit/Debit): Debit
          x-encrypted: "N"
        merchantCategoryCode:
          type: string
          description: Type of merchant acquiring a transaction.
          example: "6011"
          x-applicable(Credit/Debit): Debit
          x-mandatory(Credit/Debit): Debit
          x-encrypted: "N"
        pointOfService:
          type: string
          description: "Indicates the type of device used to acquire the transaction or the purpose of the transaction.  \n002  ON-PREMISE  \n004  ELECTRONIC CASH REGISTER  \n006  PRE-AUTHORIZED REQUEST  \n007  PRE-AUTHORIZED REQUEST-NO PIN  \n014  GENERIC  \n051  VERIFICATION OF FUNDS  \n054  GAS PUMP  \n062  OFF-PREMISE  \n064  SCRIP DISPENSE  \n072  RETAIL  \n074  ADMINISTRATIVE  \n081  PAYIT OR BANKIT TRANSACTION (ITP)  \n086  PIN, NO TRACK2  \n087  MERCHANT AUTHORIZED TRANSACTION  \n088  PAPER CAPTURE  \n089  TRACK READ (PAN AND EXP), NO PIN  \n090  NO PIN, NO TRACK2  \n091  NO PIN, TRACK2  \n092  INTERNATIONAL  \n094  SHARED BRANCH STAND ALONE  \n096  SHARED BRANCH FRANCHISE  \n097  SHARED BRANCH OUTLET\n"
      example: 002 - ON-PREMISE
    RiskInfo:
      type: object
      properties:
        enfactRealTimeScore:
          type: string
          description: The real time score associated with a transaction during authorization.
        enfactRealTimeDecision:
          type: string
          description: "EnFact authorization recommendation based on an EnFact fraud rule assigned during authorization.  \nA - Approve  \nD - Deny  \nT - Timed Out  \nE - Error  \nU - Falcon Server Unavailable  \nR - Deny - Retain Card  \nX - Engin to Falcon Timeout  \nS - Stop Sending to Falcon \n"
        enfactNearTimeScore:
          type: string
          description: EnFact Near Time/Case Management Score. EnFact predictive model score assigned to the transaction after authorization.
        enfactRecommendation:
          type: string
          description: Identifies if the EnFact rules denied the transaction.
        networkScore:
          type: string
          description: ' - Visa - Mastercard - Pulse - star '
        transactionBlockerResult:
          type: string
          description: "Identifies how the transaction was handled by TranBlocker.  \n0 Not Checked  \n1 Timeout  \n2 Successful  \n3 Denote and Continue  \n4 Deny  \n5 Retain \n"
        ruleManagerRecommendation:
          type: string
          description: "RuleManager transaction recommendation sent back to the authorization platform.  \nC - Continue  \nD - Deny  \nE - Error  \nO - Offline for Maintenance  \nP - Pass  \nR - Deny and Retain  \nT - Timeout\n"
    TokenAndEmvInfo:
      type: object
      properties:
        tokenTransaction:
          type: string
          description: Token Transaction. A tokenized payment transaction uses a token PAN that is an alternate 13- to 19-digit value provisioned for the real or true PAN. The real PAN is the card number assigned by the FI. For token provisioning transactions, this field is not applicable and the value is always N.
        wallet:
          type: string
          description: Wallet details. Possible values Apple pay - Google Pay - Samsung pay - Fitbit Pay - Garmin pay.
        emvTransaction:
          type: string
          description: Indicates if it is an EMV transaction. Possible values Yes or No.
        emvCard:
          type: string
          description: Indicates if the card used in the transactation is EMV. Possible values Yes or No.
        emvTerminal:
          type: string
          description: Indicates if the terminal is EMV capable. Possible values Yes or No.
        emvFallback:
          type: string
          description: Indicates if the transaction is EMV fallback. Possible values Yes or No.
    NetworkInfo:
      type: object
      properties:
        network:
          type: string
          description: Identifies the network that routed the transaction.
        secureEci:
          type: string
          description: Electronic commerce indicator (ECI) provides network information regarding the security level and authentication method used for an electronic commerce transaction.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal.
    AmountDetails:
      type: object
      properties:
        transactionNetAmount:
          type: string
          description: Requested amount presented to the FI, or the amount approved if partially approved, regardless of the.
        cashbackAmount:
          type: string
          description: Amount of cash returned to a cardholder during a transaction.
        surchargeAmount:
          type: string
          description: Amount of the ATM-level surcharge assessed by the terminal owner for the transaction.
        surchargeReservalAmount:
          type: string
          description: Surcharge amount to settlement of the original nonreversal transaction.
    GeneralDetails:
      type: object
      properties:
        journalDateTime:
          type: string
          description: System assigned timestamp in Eastern Time.
          format: date-time
        responseDetails:
          type: string
          description: Details about response received for transaction.
        reversalCode:
          type: string
          description: The reason for a reversal.
        transactionProcessingCode:
          type: string
          description: Indicates the specific transaction (action taken), the From account, and the To account.
        toAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Savings
        toAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        fromAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Checking
        fromAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        productType:
          type: string
          description: Product Type - ATM or POS.
        depositType:
          type: string
          description: Indicates if the deposit is a check, cash, or mixed deposit.
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.
        transactionStatus:
          type: string
          description: Indicates status of transactions.
        transactionType:
          type: string
          description: Indicates the type of transaction.
    UpdateCardStatusRequest:
      title: CardStatusUpdateRequest
      required:
      - cardNumber
      - cardStatus
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the card. If not specified, defaults to 0.
          example: "0"
        cardStatus:
          type: string
          description: Status of card.  Valid values for Debit -  ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATION, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL.  Refer to statusReasonCode field description for updating the status.
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values for Debit - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit - STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
          - NONE_SUSPECTED
          - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
    UpdateCardDetails:
      required:
      - cardNumber
      - cardStatus
      - memberNumber
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000300020004000"
        memberNumber:
          type: string
          description: Member number associated with the card. If not specified, defaults to 0. Applies to debit cards only.
          example: "0"
        cardStatus:
          type: string
          description: Card status. Valid values for Debit - ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATION, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL. Refer to statusReasonCode field description for updating the status.
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated with the card status. Valid values for Debit - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit - STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI
          example: NONE
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
    CardTokenRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000100020003000"
    PinRequest:
      required:
      - jwt
      - pin
      type: object
      properties:
        pin:
          maxLength: 4
          minLength: 4
          type: string
          description: PIN to be set for a given card number. Only numerics are allowed. No repetitive characters 3 times in a row like 111X, X333, 1111, 2222. No sequential characters (even backwards) 0123, 1234, 2345, 6543. 3210.
          example: "2938"
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardTokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardholderSearchRequest:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, 16 to 19 digits.
          example: "4000200030004000"
        ssnOrTaxid:
          type: string
          description: Full SSN or Tax ID of a cardholder, masked. Pass exactly 9 digits for this field.
          example: xxxxx1234
        accNumber:
          type: string
          description: Account Number
          example: "123456789"
        phone:
          type: string
          description: Cell phone number or home phone number or work phone number.
          example: "1495041"
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example:.com
        dateOfBirth:
          type: string
          description: Date of Birth.
          example: 10/1/52
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastName:
          type: string
          description: Last name of the customer.
          example: Smith
        lastFourSsnOrTaxid:
          type: string
          description: The last four digits of the ssn/taxid number. Applies to debit cards only.
          example: "1234"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, accountNumber, ssnOrTaxid, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchResponse:
      title: CardholderSearchResponse
      type: object
      description: Any elements with null values in the response are not be displayed in the response.
      properties:
        id:
          type: integer
          format: int64
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
    CardholderSearchResponseWarning:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderCardsDetails:
      title: CardholderCardsDetails
      required:
      - cardholderCardsDetails
      - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholder'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCard'
    CHCardholder:
      type: object
      properties:
        cardholderName:
          type: string
          description: Cardholder name
          example: Alex Smith
    CHCard:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number, 16 to 19 digits.
          example: "4000200030004000"
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '[123456789,987654321]'
          items:
            type: string
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. Valid values 0-9.
          example: "1"
        cardStatus:
          type: string
          description: Card Status
          example: NORMAL
          enum:
          - BLOCK_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
          - OPEN
          - DIGITAL
          - ISSUED
          - RESTRICTED
          - CAPTURE
          - DEACTIVATED
        cardType:
          type: string
          description: Card type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association party. This applies only for Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        phone:
          type: string
          description: Cell phone number, work phone number, or home number.
          example: "1495041"
        dateOfBirth:
          type: string
          description: Date of Birth.
          example: 10/1/52
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example.com
    Warning:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetail'
    WarningDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    "4xxError":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
  parameters:
    userIdParam:
      name: userId
      in: header
      description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
      required: false
      style: simple
      explode: false
      schema:
        type: string
      example: johndoe
    authorizationParam:
      name: Authorization
      in: header
      description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
    clientIdParam:
      name: x-fapi-financial-id
      in: header
      description: Required. Provide 8 digit client id
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 12345678
  headers:
    interactionId:
      description: unique transaction ID created for each request for tracking purposes
      style: simple
      explode: false
      schema:
        type: string
        example: 95ad42fb-afd1-2121-b794-3ed29342ks42
  securitySchemes:
    BearerAuth:
      type: http
      description: Enter 'Bearer ' followed by the access token.
      scheme: bearer
  examples:
    getUpdateCardStatusRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    getUpdateCardStatusResponse:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardTokenRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardInfoRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019'}
