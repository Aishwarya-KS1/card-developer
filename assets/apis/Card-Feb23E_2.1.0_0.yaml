---
openapi: 3.0.0
info:
  title: Card
  description: Card API provides the ability to manage a card, digitally display card details, activate cards online through various channels, search for transactions, and search for basic cardholder information using details other than a card number. All times expressed in UTC standard time.
  version: 2.1.0
servers:
  - url: https://card.api.fiservapps.com/cs/cards
    description: Production url
  - url: https://card-sandbox.api.fiservapps.com/cs/cards
    description: Sandbox url
security:
  - BearerAuth: []
tags:
  - name: Activation
    description: Activate a card instantly, and retrieve current activation status for Debit and Credit cards.
  - name: Add
    description: Generate a template to add card, and add card
  - name: Audit
    description: Search for audit details on a card.
  - name: Demographics
    description: Search or set demographic information about cardholders.
  - name: Details
    description: Retrieves basic cardholder information using full card number or other details such as email address, last name and phone.
  - name: Digital Card Display
    description: Display card activation date and CVV, enabling immediate use after issuance.
  - name: Limits
    description: Set, search and update card limits for any specified Primary Account Number (PAN).
  - name: Order
    description: Search, update or cancel an order for a card.
  - name: PIN
    description: Set a pin and reset pin attempts.
  - name: Related Account
    description: Search for account details on a card.
  - name: Replacement
    description: Order replacements for cards.
  - name: Transaction
    description: Search for transactions on a card, retrieving summary or detailed information.
  - name: Update Status
    description: Update the status of a card, including deactivating the card.
paths:
  /cards/v1/accounts/search:
    post:
      tags:
        - Related Account
      summary: Retrieves the account details of a given debit card.
      operationId: searchCardholderAccountDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSearchResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415Error'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /cards/v1/accounts/associations/add:
    post:
      tags:
        - Related Account
      summary: Maintains the account details of a given debit card. This API adds the account associations.
      operationId: addCardholderAccountDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAddRequest'
        required: true
      responses:
        "201":
          description: Account association has been added successfully.
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /cards/v1/accounts/associations/update:
    patch:
      tags:
        - Related Account
      summary: Maintains the account details of a given debit card. This API updates the account associations.
      operationId: updateCardholderAccountDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415Error'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /cards/v1/accounts/associations/delete:
    post:
      tags:
        - Related Account
      summary: Deletes the account association of a given debit card.
      operationId: deleteCardholderAccountDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDeleteRequest'
        required: true
      responses:
        "204":
          description: Account association has been deleted successfully
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415Error'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /cards/v1/audit/search:
    post:
      tags:
        - Audit
      summary: Retrieves the audit details of a given debit card. Enables you to investigate cardholder maintainance data and provides six months of cardholder audit history data.
      operationId: searchCardholderAuditDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditSearchResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415Error'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /cards/v1/audit/details:
    post:
      tags:
        - Audit
      summary: Retrieves the details of audit log records.
      operationId: cardholderAuditDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/415Error'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/card:
    post:
      tags:
        - Add
      summary: Adds a new credit or debit card.
      operationId: addCard
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: newCardRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCardRequest'
        required: true
      responses:
        "201":
          description: Created
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCardResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCardResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/template:
    post:
      tags:
        - Add
      summary: Retrieve a template to add a card.
      operationId: addCardTemplate
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCardTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCardTemplateResponse'
        "400":
          description: Bad Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Not Allowed The HTTP verb used in the request is not supported on the resource
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Service Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/status:
    put:
      tags:
        - Update Status
      summary: Update the status of a card, including deactivation.
      operationId: CardStatusUpdate
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.m the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardStatusRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cards/status:
    put:
      tags:
        - Update Status
      summary: Update the status of a card, including deactivation.
      operationId: CardStatusUpdateV2
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.m the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardStatusRequestV2'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardStatusResponseV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/status/search:
    post:
      tags:
        - Update Status
      summary: Get the status of the card.
      operationId: cardStatusSearch
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.m the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardDetailsSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardStatusRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardStatusResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/replacement:
    post:
      tags:
        - Replacement
      summary: Creates an order to replace a card.
      operationId: replaceCard
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: Replacement Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplacementRequest'
        required: true
      responses:
        "204":
          description: Order is placed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cards/replacement:
    post:
      tags:
        - Replacement
      summary: Creates an order to replace a card.
      operationId: replaceCardV2
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: Replacement Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplacementRequestV2'
        required: true
      responses:
        "200":
          description: Order is placed successfully.
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponseV2'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponseV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/order/search:
    post:
      tags:
        - Order
      summary: Retrieves the orders for the particular card.
      operationId: getOrdersV1
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: CardOrderSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardOrderSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardOrdersSearchResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cards/order/search:
    post:
      tags:
        - Order
      summary: Retrieves the orders for the particular card.
      operationId: getOrdersV2
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: CardOrderSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardOrderSearchRequestV2'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardOrdersSearchResponseV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/order:
    patch:
      tags:
        - Order
      summary: Update or cancel an order for a card.
      operationId: orderInfo
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "204":
          description: Order Updated/Cancelled Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cards/order:
    patch:
      tags:
        - Order
      summary: Update or cancel an order for a card.
      operationId: orderInfoV2
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestV2'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/transactions/search:
    post:
      tags:
        - Transaction
      summary: Retrieve transaction details of a given card based on the filter criteria passed.  Select summary or detailed responses.
      operationId: getTransactions
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: filter
          in: query
          description: |
            Choose summary or detail response to transaction search. Defaults to summary.  
            Summary includes these fields.  
            - acquirerRefNum  
            - amtCharged  
            - authorizationCode  
            - cardNumber  
            - eciMastercard  
            - eciVisa  
            - expirationDateMismatch  
            - memberNumber  
            - merchantCategoryCode  
            - merchantCity  
            - merchantName  
            - merchantState  
            - messageType  
            - networkID  
            - preAuthAmt   
            - pinTransaction  
            - posDataInputCapability  
            - posDataInputMode  
            - responseCode  
            - responseCodeDescription  
            - sequenceNumber  
            - subResponseCode  
            - subResponseCodeDescription  
            - systemRecordId  
            - terminalId  
            - transactionAmount  
            - transactedCardNumber  
            - transactioncode  
            - transactionDateTime  
            - transactionStatus  
            - transactionType  
            - unmatchedCompletionFlag  
            
            Detail includes all the transaction fields.
          required: true
          style: form
          explode: true
          schema:
            type: boolean
          example: summary
      requestBody:
        description: searchTransactionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransactionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/terminalTransactions/search:
    post:
      tags:
        - Transaction
      summary: This API returns a list of Transactions for the terminal ID based on the filter criteria they passed,This API is applicable only for Debit.
      operationId: getTerminalTransactions
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalTransactionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTransactionsResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTransactionsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/activations/search:
    post:
      tags:
        - Activation
      summary: Retrieves the activation details of a given card.
      operationId: getCardActivationInfo
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: ActivationSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationSearchRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardActivationResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/activations:
    put:
      tags:
        - Activation
      summary: Force activate a given card.
      operationId: activateCard
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardActivationUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardActivationUpdateRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "409":
          description: Conflict
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/authDetails:
    post:
      tags:
        - Digital Card Display
      summary: Retrieve card expiration date and CVV for the card number.
      operationId: getCardAuthDetails
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: getCardAuthDetailsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDetailsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/token:
    post:
      tags:
        - PIN
      summary: Setting the PIN is a two step process. This operation returns a JWT which is valid for 15 minutes.
      operationId: getCardToken
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenRequest'
      responses:
        "200":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pin:
    post:
      tags:
        - PIN
      summary: Sets a PIN for a given card. Setting the PIN is a two step process. It requires a JWT from the cardsToken operation for the card for which PIN is to be set. The JWT must be used within 15 minutes.
      operationId: setPin
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/atmPreferences:
    patch:
      tags:
        - Demographics
      summary: Updates information related to ATM Preferences for one specific card. Applies to debit cards only.
      operationId: updateAtmPreferences
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtmPreferencesUpdateRequest'
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/additionalInfo:
    patch:
      tags:
        - Demographics
      summary: Updates additional information of a Cardholder.
      operationId: updateAdditionalInfo
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      requestBody:
        description: Update Cardholder Additional Info Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsAdditionalInfoUpdateRequest'
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/address:
    patch:
      tags:
        - Demographics
      summary: Updates the address information of a cardholder.
      operationId: updateAddress
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: Update Address Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsAddressUpdateRequest'
        required: true
      responses:
        "204":
          description: updated
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/demographics/search:
    post:
      tags:
        - Demographics
      summary: Retrieves address, contact, and additional information for a cardholder based on CardNumber, Card MemberNumber/ID, and Card Type.
      operationId: getCardholderDemographicsV2
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: filter
          in: query
          description: used to fetch the info for the OTP verification. The filter is  For API client media address fields and cardnumber  would be in masked format. The fields are as follows -Masked cardnumber -Masked Voice (home, work, cell, text address) -Masked email -masked text (Home, work, cell, text address). For fraud domain enfact flags are applicable which includes all voice and text. For cardholder domain provide the stepup fields which includes all voice, text, and email whereas TCPA fields both voice and test is applicable for both Fraud and Cardholder domain.
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: verification
      requestBody:
        description: demographicSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cardholders/demographics/search:
    post:
      tags:
        - Demographics
      summary: Retrieves address, contact, and additional information for a cardholder based on CardNumber and MemberNumber.
      operationId: getCardholderDemographics
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      requestBody:
        description: demographicSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicSearchRequestV2'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicSearchResponseV2'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/contact:
    patch:
      tags:
        - Demographics
      summary: Updates contact and TCPA information for a cardholder record.  Applies to debit and credit cards.
      operationId: updateContact
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      requestBody:
        description: Update Contact Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsContactUpdateRequest'
        required: true
      responses:
        "204":
          description: updated
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cardholders/contact:
    patch:
      tags:
        - Demographics
      summary: Updates contact and TCPA information for a cardholder record.  Applies to debit and credit cards.
      operationId: updateContactV2
      parameters:
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      requestBody:
        description: Update Contact Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsContactUpdateRequest'
        required: true
      responses:
        "204":
          description: updated
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/pinAttempts:
    put:
      tags:
        - PIN
      summary: Resets the pinAttempts count to zero for a given card.
      operationId: resetPinAttempts
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinAttemptUpdateRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/pinOffset:
    put:
      tags:
        - PIN
      summary: Sets the PIN offset.
      operationId: pinOffset
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinOffsetRequest'
        required: true
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/search:
    post:
      tags:
        - Limits
      summary: Returns the limit values for a given card.
      operationId: cardLimitSearch
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: searchCardLimitsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardLimitsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/daily:
    put:
      tags:
        - Limits
      summary: Override the daily limit values for a specific card. Applies to debit cards only.
      operationId: updateDailyLimits
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: updateDailyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDailyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/openToBuy:
    put:
      tags:
        - Limits
      summary: Update the open to buy limit values for a specific card. Applies to debit cards only.
      operationId: updateOpenToBuyLimits
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: updateOpenToBuyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenToBuyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/velocity:
    put:
      tags:
        - Limits
      summary: Updates the velocity limit values for a specific card.
      operationId: updateVelocityLimits
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: updateVelocityLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVelocityLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/default:
    put:
      tags:
        - Limits
      summary: Sets the cardholder limits to default values per Card class.
      operationId: defaultCardholderLimits
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: defaultCardholderLimits
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultCardholderLimitsRequest'
        required: true
      responses:
        "200":
          description: Ok
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCardholderLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/search:
    post:
      tags:
        - Details
      summary: Search cardholder records based on one or more search parameters.
      operationId: searchCardholder
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: Search Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardholderSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v2/cardholders/search:
    post:
      tags:
        - Details
      summary: Search cardholder records based on one or more search parameters.
      operationId: searchCardholderV2
      parameters:
        - name: Authorization
          in: header
          description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
        - name: userId
          in: header
          description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: johndoe
        - name: x-fapi-financial-id
          in: header
          description: Required. Provide 8 digit client id
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: 12345678
      requestBody:
        description: Search Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardholderSearchRequestV2'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseV2'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseWarningV2'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxErrorV2'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
components:
  schemas:
    AccountSearchRequest:
      title: AccountSearchRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
    AccountSearchResponse:
      title: AccountSearchResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        associations:
          type: array
          items:
            $ref: '#/components/schemas/Associations'
    Associations:
      title: AccountSearchDetails
      type: object
      properties:
        accountNumber:
          type: string
          description: Identifies account of the cardholder.
          example: 123456789
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
            - CHECKING
            - SAVINGS
            - CREDIT_CARD
            - MONEY_MARKET
            - NOW
            - IRA
            - CREDIT_LINE
            - INSTALLMENT_LOAN
            - MORTGAGE_LOAN
        accountDescription:
          type: string
          description: Description of the account.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - INACTIVE
        primaryAccount:
          type: string
          description: Identifies if the account is primary or not. At least one primary account is required for each cardholder record.You can establish a primary account for each of the following account types—Checking, Savings, Credit Card, NOW, Money Market, and Credit Line.
          example: YES
          enum:
            - YES
            - NO
            - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: 'Indicates if the account is restricted to transactions that change the account to a positive balance.Possible values are: No Restrictions—All transactions allowed,  Bal Inq. Dep and Transfer to (account)—Transactions allowed include balance inquiries, deposits and transfers to the account.'
          example: NO_RESTRICTIONS
          enum:
            - NO_RESTRICTIONS
            - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
            - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowed'
    TransactionsAllowed:
      title: TransactionsAllowed
      type: object
      properties:
        balanceInquiries:
          type: boolean
          description: Transactions allowed for balance inquiries.
          example: true
        deposits:
          type: boolean
          description: Transactions allowed for deposits.
          example: true
        paymentFrom:
          type: boolean
          description: Transactions allowed for outgoing payment.
          example: true
        paymentTo:
          type: boolean
          description: Transactions allowed for incoming payment.
          example: true
        posPurchasesReturns:
          type: boolean
          description: Transactions allowed for POS purchases returns.
          example: true
        transferFrom:
          type: boolean
          description: Transactions allowed for Transfer From.
          example: true
        transferTo:
          type: boolean
          description: Transactions allowed for Transfer To.
          example: true
        withdrawalsCashAdvance:
          type: boolean
          description: Transactions allowed for Withdrawals and Cash Advance.
          example: true
      description: Allowed transactions a cardholder can perform for the selected account.
    AccountAddRequest:
      title: AccountAddRequest
      required:
        - association
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        association:
          $ref: '#/components/schemas/Association'
    AccountUpdateRequest:
      title: AccountUpdateRequest
      required:
        - association
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        association:
          $ref: '#/components/schemas/Association'
    Association:
      title: Association
      type: object
      properties:
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
            - CHECKING
            - SAVINGS
            - CREDIT_CARD
            - MONEY_MARKET
            - NOW
            - IRA
            - CREDIT_LINE
            - INSTALLMENT_LOAN
            - MORTGAGE_LOAN
        accountDescription:
          type: string
          description: Description of the account.
          example: Main
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - INACTIVE
        primaryAccount:
          type: string
          description: Identifies if the account is Primary or not. At least one primary account is required for each cardholder record.You can establish a primary account for each of the following account types—Checking, Savings, Credit Card, NOW, Money Market, and Credit Line.
          example: YES
          enum:
            - YES
            - NO
            - NOT_APPLICABLE
        restrictedTransactions:
          type: string
          description: ' Indicates if the account is restricted to transactions that change the account to a positive balance.Possible values are: No Restrictions—All transactions allowed,  Bal Inq. Dep and Transfer to (account)—Transactions allowed include balance inquiries, deposits and transfers to the account'
          example: NO_RESTRICTIONS
          enum:
            - NO_RESTRICTIONS
            - BALANCE_INQUIRY_DEPOSIT_AND_TRANSFER_TO
            - NOT_APPLICABLE
        transactionsAllowed:
          $ref: '#/components/schemas/TransactionsAllowed'
    AccountDeleteRequest:
      title: AccountDeleteRequest
      required:
        - accountNumber
        - accountType
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        accountNumber:
          maxLength: 20
          minLength: 1
          type: string
          description: Identifies account of the cardholder.
          example: "123456789"
        accountType:
          type: string
          description: Identifies the account type of the account number.
          example: CHECKING
          enum:
            - CHECKING
            - SAVINGS
            - CREDIT_CARD
            - MONEY_MARKET
            - NOW
            - IRA
            - CREDIT_LINE
            - INSTALLMENT_LOAN
            - MORTGAGE_LOAN
    AuditSearchRequest:
      title: AuditSearchRequest
      required:
        - cardNumber
        - fromDateTime
        - toDateTime
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          maxLength: 1
          type: string
          description: Member number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        fromDateTime:
          type: string
          description: Refines the search based on the start date and time.
          format: date-time
          example: "2021-07-20T07:00:00Z"
        toDateTime:
          type: string
          description: Refines the search based on the end date and time. Cannot be more than six month duration from 'fromDateTime'.
          format: date-time
          example: "2021-08-20T07:00:00Z"
    AuditSearchResponse:
      title: AuditSearchResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        auditLogSearch:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogSearch'
    AuditLogSearch:
      title: AuditLogSearch
      type: object
      properties:
        auditLogDateTime:
          type: string
          description: Date and time of the audit log record.
          format: date-time
          example: "2021-07-20T08:00:00Z"
        auditLogSource:
          type: string
          description: Source of the audit log record.
          example: ATM
        auditLogAction:
          type: string
          description: Action performed on the cardholder record.
          example: UPDATE
          enum:
            - ADD
            - UPDATE
            - DELETE
        recordType:
          type: string
          description: Displays the modified record name, followed by the internal file type. Possible values could be- Card Details (MLAI), Card Details (DAF), Card Details (MLCM), Activation/PIN IVR (MLAC), Card/PIN Orders (MLCO), Names (MLNA) and RuleManager (EXM)
          example: Card Details (DAF), STEP UP (STUP).
        auditLogId:
          type: string
          description: ' Indicates the Portal User ID (when available). It is the Secure client website user ID of person who completed the action.'
          example: Alex
    AuditDetailsRequest:
      title: AuditDetailsRequest
      required:
        - auditLogAction
        - auditLogDateTime
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          maxLength: 1
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
        auditLogDateTime:
          type: string
          description: Date and time of the audit log record.
          format: date-time
          example: "2021-07-20T08:00:00Z"
        auditLogAction:
          type: string
          description: Source of the audit log record.
          example: UPDATE
          enum:
            - ADD
            - UPDATE
            - DELETE
    AuditDetailsResponse:
      title: AuditDetailsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          example: "0"
        auditRecordDetails:
          type: array
          items:
            $ref: '#/components/schemas/AuditRecordDetails'
    AuditRecordDetails:
      title: AuditRecordDetails
      type: object
      properties:
        fieldName:
          type: string
          description: Name of the field modified as a result of the selected update action.
          example: Account Type
        before:
          type: string
          description: The value of the field before the action.
          example: Checking
        after:
          type: string
          description: The value of the field after the action.
          example: Savings
    CustomDailylimits:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if limits tend to expire.
          example: "Yes"
        expirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
          example: "2023-08-04"
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "3000"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: Combined total, Online and offline withdrawal limits at ATM and POS. | Daily Limit Combined number of transaction attempts allowed at the ATM and POS. | Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN)
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Total daily amount available for deposit
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
    AddPriorCardInfoResponse:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: Populated only when the current card number is replacing one that is no longer used, this needs to be decrypted.
          example: 400010xxxxxx4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transactional token generated and associated to each card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: Member number associated with the prior card number, after entering a prior card number.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: Expiration date of the prior card number
          format: MM/YY
          example: "10/23"
    DebitPriorCardInfo:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: Populated only when the current card number is replacing one that is no longer used,this needs to be decrypted.
          example: "4000100020004000"
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transactional token generated and associated to each card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: Member number associated with the prior card number, after entering a prior card number.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: Expiration date of the prior card number
          format: MM/YY
          example: "10/23"
    DebitPriorCardInfoTemplateResponse:
      type: object
      properties:
        priorCardNumber:
          maxLength: 19
          type: string
          description: Populated only when the current card number is replacing one that is no longer used,this needs to be decrypted.
          example: 400010xxxxxx4000
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-transactional token generated and associated to each card number
          example: WUPIL5DQTZGM4000
        priorMemberNumber:
          type: string
          description: Member number associated with the prior card number, after entering a prior card number.
          example: "0"
        priorCardExpirationDate:
          type: string
          description: Expiration date of the prior card number
          format: MM/YY
          example: "10/23"
    DemographicSearchRequest:
      title: demographicSearchRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits. Required for debit and credit.
          example: "4000100020003000"
        memberNumber:
          type: string
          description: The member number associated with the card. Required for debit.
          example: "0"
    DemographicSearchRequestV2:
      title: demographicSearchRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to 0.
          format: numeric
          example: "0"
    DemographicSearchResponse:
      type: object
      properties:
        cardholderDemographics:
          $ref: '#/components/schemas/CardholderDemographics'
    DemographicSearchResponseV2:
      type: object
      properties:
        cardholderDemographics:
          type: array
          items:
            $ref: '#/components/schemas/CardholderDemographicsV2'
    CardsAdditionalInfoUpdateRequest:
      title: CardsAdditionalInfoUpdateRequest
      required:
        - additionalInfo
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number identifier. Applies and required for debit and credit cards.
          example: "4000100020003000"
        additionalInfo:
          $ref: '#/components/schemas/UpdateAdditionalInfo'
    CardsContactUpdateRequest:
      title: CardsContactUpdateRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier. Applies and required for debit and credit cards.
          example: "4000200030004000"
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV2'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV2Preferences'
    CardholderDemographics:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: 400010xxxxxx3000
        accountNumber:
          type: string
          description: Account identifier on the system of record. The account number is masked.
          example: 123456789
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        address:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCardsAddress'
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/Tcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContact'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferences'
    CardholderDemographicsV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder.
          example: 400010xxxxxx4000
        accountNumber:
          type: string
          description: Account identifier on the system of record. The account number is masked.
          example: 123456789
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        address:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCardsAddress'
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/Tcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContactV2'
        preferences:
          $ref: '#/components/schemas/CardholderDemographicsV2Preferences'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferences'
    UpdateTcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: This indicates the Telephone Consumer Protection Act(TCPA). This has two enumeration values are 'Enfact' and 'Stepup.' Enfact is a a type of fraud monitoring system which is used for identifying suspicious activities on the credit and debit cards. Step up is an authentication system where and OTP is sent to the cardholder's available contact information. This information is stored on Tandem. Applies to debit and credit cards.
          enum:
            - ENFACT
            - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contact.
          example: VOICE
          enum:
            - VOICE
            - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
    CardsAddress:
      required:
        - addressType
      type: object
      properties:
        addressType:
          type: string
          description: Type of address. TYPES PRIMARY and ALTERNATE applies and required for debit cards. TYPE PLASTIC applies to debit cards. TYPE BILLING applies to any credit cardholder. TYPES ALTERNATE, PLASTIC, STATEMENT, and LETTERS applies only to the primary credit cardholder.
          enum:
            - PRIMARY
            - ALTERNATE
            - BILLING
            - PLASTIC
            - STATEMENT
            - LETTERS
        addressLine1:
          maxLength: 34
          type: string
          description: Line1 of address. Applies  for debit and credit cards.
          example: 123 Any Street
        addressLine2:
          maxLength: 34
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          maxLength: 34
          type: string
          description: Line 3 for Address. Applies to credit cards only.
          example: 123 Any Lane
        addressLine4:
          maxLength: 34
          type: string
          description: Line 4 for Address. Applies to credit cards only.
          example: 123 Any Lane
        city:
          maxLength: 26
          type: string
          description: Name of city, per the ISO 3166 standards.
          example: New Jersey
        stateCode:
          maxLength: 2
          type: string
          description: Indicates the state code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          maxLength: 10
          minLength: 5
          type: string
          description: "Postal code of the state. Enter either 5 digits or 9 digits with or without hyphens. Format examples- 12345, 123451234, 12345-1234"
          example: "12345"
        countryCode:
          maxLength: 3
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        isCardMailer:
          type: boolean
          description: Indicate if a given address will be used for Card Mailer on all future Card Orders. Applies to debit cards only.
        isPinMailer:
          type: boolean
          description: Indicate if the given address will be used for Pin Mailer on all future Card Orders. Applies to debit cards only.
        addressCategoryCode:
          type: string
          description: Indicate the category of an address PERMANENT, REPEATING, and TEMPORARY. REPEATING address used for recurring and specific time periods Temporary address used for a single, short period of time. Applies to credit cards only.
          enum:
            - PERMANENT
            - REPEATING
            - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
          example: "2021-08-03"
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastics. Applies to credit cards only.
          format: date
          example: "2022-08-03"
    UpdateAdditionalInfo:
      type: object
      properties:
        prefix:
          maxLength: 5
          type: string
          description: Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces. Applies to credit cards only.
          example: Dr.
        cardholderName:
          maxLength: 26
          type: string
          description: Cardholder Name. This field is mandatory. The 'prefix' and the 'cardholder name' together cannot exceed the max length of 26 for credit cards only.  The 'cardholder name' and the 'suffix' together cannot exceed the max length of 26 for debit cards.
          example: Doe, John H
        priorCardholderName:
          maxLength: 26
          type: string
          description: Prior Cardholder Name. Required if value was entered in the cardholderName. Applies to Debit cards only.
          example: Doe, Jessie H
        association:
          type: string
          description: Type of association of the account.
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
            - GUARANTOR_OR_CO-SIGNER
          example: PRIMARY
        vip:
          type: boolean
          description: Indicate if the primary customer is a very important person. Applies to credit cards only.
        gender:
          type: string
          description: Gender of the cardholder. Applies to credit cards only
          enum:
            - NOT_SPECIFIED
            - FEMALE
            - MALE
            - COMPANY
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        employeeCode:
          type: boolean
          description: Indicate if the customer is an employee. Applies to credit cards only.
        motherMaidenName:
          maxLength: 40
          type: string
          description: Mother's maiden name.
          example: Smith
        ssnOrTaxId:
          maxLength: 11
          minLength: 4
          type: string
          description: Indicates the social security number or tax id number. Formats listed in example.
          example: 123005678
        ein:
          maxLength: 10
          minLength: 9
          type: string
          description: Indicates the employer identification number. Formats listed in example. Applies to credit cards only.
          example: 123005678
        dnaPersonId:
          maxLength: 9
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased. Applies to credit cards only.
        memoLine1:
          maxLength: 250
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This customer is hard of hearing.
        memoLine2:
          maxLength: 250
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer called wife is deceased sending information to remove wife from account.
        verificationText:
          maxLength: 30
          type: string
          description: Free-form field to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        employerName:
          maxLength: 26
          type: string
          description: Employer Name. Applies to credit cards only.
          example: Fiserv
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Personalized Embossing/My Card Creation ID. Applies to credit cards only.
          example: Jesse Doe
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for secondary user. Applies to credit cards only.
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for secondary user. Applies to credit cards only.
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.  NONE - No specific options selected, INSTANT_ISSUANCE - Instant (digital) delivery, or RUSH_PLASTIC - Mail delivery normal or overnight. Applies to credit cards only.
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        updateNameDetails:
          type: array
          items:
            $ref: '#/components/schemas/UpdateNameDetails'
    AdditionalInfo:
      type: object
      properties:
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allows a period and spaces. Applies to debit and credit cards.
          example: Dr.
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        association:
          type: string
          description: Type of association.  Applies to credit cards only.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
            - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicates if the primary customer is a very important person.  Applies to credit cards only.
        gender:
          type: string
          description: Gender of the primary card/account holder.  Applies to credit cards only.
          example: NOT_SPECIFIED
          enum:
            - NOT_SPECIFIED
            - FEMALE
            - MALE
            - COMPANY
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        employeeCode:
          type: boolean
          description: Indicates if the customer is an employee. Max length 9. Applies to credit cards only.
          example: false
        motherMaidenName:
          type: string
          description: Mother's maiden name. Max length 40. Applies to debit and credit cards.
          example: Smith
        empId:
          type: string
          description: Indicates the employer identification number for the primary account owner. Applies to credit cards only.
          example: 1230045678
        ssnOrTaxid:
          type: string
          description: Indicates the Social Security Number or the tax identification number. This field is masked.
          example: xxxxx5678
        ein:
          type: string
          description: Indicates IRS federal EIN number. This field is masked.
          example: xxxxx5678
        dnaPersonId:
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased. Applies to credit cards only.
        memoLine1:
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This customer is hard of hearing.
        memoLine2:
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer called wife is deceased sending information to remove wife from account.
        verificationText:
          type: string
          description: Free-form field used to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        verificationZipCode:
          type: string
          description: Zip Code used for verification of the caller as cardholder. The max length is 9.
          example: "12345"
        callerId:
          type: string
          description: Phone number to verify caller as the cardholder. Used for verification. The max is 10 numeric.
          example: 000-555-0000
        employerName:
          type: string
          description: Employer Name. Applies to credit cards only.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Personalized Embossing/My Card Creation ID. Applies to credit cards only.
          example: Jesse Doe
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for Secondary user. Applies to credit cards only.
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for Secondary user. Applies to credit cards only.
        specialHandling:
          type: string
          description: |
            Sets delivery options for the plastic card.  
            - NONE - No specific options selected.  
            - INSTANT_ISSUANCE - Instant (digital) delivery.  
            - RUSH_PLASTIC - Mail delivery normal or overnight.  
          example: NONE
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        nameDetails:
          type: array
          items:
            $ref: '#/components/schemas/NameDetails'
    UpdateNameDetails:
      type: object
      properties:
        nameSuffix:
          type: string
          description: Indicates the cardholder suffix associated with the name.
          example: Sr.
        priorCardholderName:
          maxLength: 26
          type: string
          description: Prior Cardholder Name. Required if value  was entered in the  cardholderName. Applies to Debit cards only.
          example: Doe, Jessie H
        photoId:
          type: string
          description: Indicates the photo identifier.
          example: EFGH
        plasticId:
          type: string
          description: Indicates the plastic identifier used in card collection plastics in place of custom stock.
          example: PM001
    NameDetails:
      type: object
      properties:
        nameSuffix:
          type: string
          description: Indicates the cardholder suffix associated with the name.
          example: Sr.
        priorCardholderName:
          maxLength: 26
          type: string
          description: Prior cardholder name. Required if value was entered in the cardholderName. Applies to Debit cards only.
          example: Doe, Jessie H
        photoId:
          type: string
          description: Indicates the photo identifier.
          example: EFGH
        plasticId:
          type: string
          description: Indicates the plastic identifier used in card collection plastics in place of custom stock.
          example: PM001
    DemographicsCardsAddress:
      type: object
      properties:
        addressType:
          type: string
          description: Address type 'PRIMARY', 'ALTERNATE' and PRIOR are applicable for debit. Adderss type ALTERNATE, BILLING, PLASTIC, STATEMENT, LETTER, PRIOR, REFERENCE, PRIOR_LETTERS, PRIOR_PLASTICS, PRIOR _STATEMENT, PRIOR_BILLING AND PRIOR_ REFERENCE apply to credit.
          enum:
            - PRIMARY
            - ALTERNATE
            - BILLING
            - PLASTIC
            - STATEMENT
            - LETTER
            - PRIOR
            - REFERENCE
            - PRIOR_LETTERS
            - PRIOR_PLASTICS
            - PRIOR_STATEMENTS
            - PRIOR_BILLING
            - PRIOR_REFERENCE
        addressLine1:
          type: string
          description: Line1 of address.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line3 for Address. Applies only to credit cards.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line4 for Address. Applies only to credit cards.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city, per the ISO 3166 standards.
          example: Newark
        stateCode:
          type: string
          description: State code, per the ISO 3166 standards.
          example: NJ
        zipCode:
          type: string
          description: Postal code. US codes can be 5 or 9 alphanumeric and a dash.
          example: "12345"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards.
          example: USA
        isCardMailer:
          type: boolean
          description: Indicates that given address is used for Card Mailer on all future Card Orders. Applies to debit cards only.
        isPinMailer:
          type: boolean
          description: Indicates that given address is used for PIN Mailer on all future Card Orders. Applies to debit cards only.
        addressCategoryCode:
          type: string
          description: Indicates the category of an address. REPEATING address means this address is used for recurring with specific time periods. Applies to credit cards only.
          enum:
            - PERMANENT
            - REPEATING
            - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
          example: "2021-08-03"
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
          example: "2022-08-03"
    AtmPreferences:
      type: object
      properties:
        preferredLanguageCode:
          type: string
          description: Displays the ATM Language preference.
          enum:
            - NONE
            - ENGLISH
            - SPANISH
        preferredAmount:
          type: number
          description: Preferred ATM fast cash amount.
          example: 240
        preferredAccount:
          type: string
          description: ATM fast cash withdrawal account preference.
          enum:
            - NONE
            - CHECKING
            - SAVINGS
        preferredReceiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option.
          enum:
            - NONE
            - ALWAYS
            - ASK_ME
            - NEVER
        terminalOwnerId:
          type: string
          description: Indicates the ATM Terminal ID or UserID that updated the ATM preferences.
          example: USER01
        sourceType:
          type: string
          description: An "A" indicates updated at ATM; "C" indicates update by user.
          enum:
            - A
            - C
        action:
          type: string
          description: Action taken to add or update the ATM preferences. ATM preferences can only be added at the ATM.
          enum:
            - ADD
            - UPDATE
        actionDateTime:
          type: string
          description: Date and time the cardholder ATM preferences were added or updated.
          format: date-time
          example: "2014-10-02T15:01:23.045Z"
        updatedBy:
          type: string
          description: ATM Terminal ID or UserID that last added or updated the ATM preferences.
          example: USER01
    AtmPreferencesUpdateRequest:
      title: AtmPreferenceUpdateRequest
      required:
        - atmPreferences
        - cardNumber
        - cardType
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier. Applies and required for debit cards only.
          example: "4000100020003000"
        atmPreferences:
          $ref: '#/components/schemas/UpdateAtmPreferences'
    UpdateAtmPreferences:
      type: object
      properties:
        preferredLanguageCode:
          type: string
          description: ATM language preference to be updated.
          default: NONE
          enum:
            - NONE
            - ENGLISH
            - SPANISH
        preferredAmount:
          maximum: 980
          minimum: 0
          type: number
          description: ATM preferred fast cash amount to be updated.
          example: 240
        preferredAccount:
          type: string
          description: ATM fast cash withdrawal account to be updated.
          default: NONE
          enum:
            - NONE
            - CHECKING
            - SAVINGS
        preferredReceiptOption:
          type: string
          description: ATM fast cash withdrawal receipt preference option to be updated.
          default: NONE
          enum:
            - NONE
            - ALWAYS
            - ASK_ME
            - NEVER
      description: A user can update the current ATM preferences for a cardholder.
    DefaultCardholderLimitsResponse:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Masked card number. First 6 and last 4 digits visible.
          example: 400020xxxxxx4000
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    DefaultCardholderLimitsRequest:
      title: DefaultCardholderLimitsRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
    CardsAddressUpdateRequest:
      title: CardsAddressUpdateRequest
      required:
        - address
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: 'Card number identifier. Applies and required for debit and credit cards. '
          example: "4000100020003000"
        address:
          type: array
          items:
            $ref: '#/components/schemas/CardsAddress'
    CustomVelocityLimits:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
    UpdateVelocityLimitRequest:
      title: UpdateVelocityLimitRequest
      required:
        - cardNumber
        - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    CustomOpenToBuyLimits:
      type: object
      properties:
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
    UpdateOpenToBuyLimitRequest:
      title: UpdateOpenToBuyLimitRequest
      required:
        - cardNumber
        - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
    UpdateDailyLimitRequest:
      title: UpdateDailyLimitRequest
      required:
        - cardNumber
        - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
    ReplacementRequest:
      required:
        - cardNumber
        - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number identifier.
          example: "4000100020003000"
        cardholderName:
          type: string
          description: Name of Cardholder.  Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Personalized text embossed on the plastic card.
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequest'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequest'
    ReplacementDebitRequest:
      required:
        - cardAddressIdentifier
      type: object
      properties:
        cardAddressIdentifier:
          type: string
          description: This identifier will identify which address to be used for Card. If Alternate value is entered , but no alternate address is present, then an error is displayed.
          example: PRIMARY
          enum:
            - PRIMARY
            - ALTERNATE
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: "01/23"
        nameSuffix:
          type: string
          description: Cardholder name suffix.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0.
          example: "0"
        photoId:
          type: string
          description: Photo identifier of the image to use on the card.
        plasticId:
          type: string
          description: The plastic identifier.
          example: PM001
        rushType:
          type: string
          description: Indicates how quickly to send a plastic card to the cardholder.
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
    ReplacementCreditRequest:
      required:
        - customerRoleTypeCode
        - specialHandling
      type: object
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        waiveReplacementFee:
          type: string
          description: The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        customerRoleTypeCode:
          type: string
          description: The Role type code of a customer.primary - 01, Secondary-02, Auth user-03
    ReplacementResponse:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/ReplacementCardResponse'
        cardholderName:
          $ref: '#/components/schemas/ReplacementCardholderNameResponse'
    ReplacementCardResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of the cardholder.
          example: 400020xxxxxx4000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non Transactional token associated to a card.
          format: numeric
          example: WUPIL5DQTZGM3000
    ReplacementCardholderNameResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    ReplacementRequestV2:
      required:
        - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.  
            Possible validations are  
            
            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: "4000100020003000"
        nonTransToken:
          type: string
          description: |
            ### Non Transactional token associated to a card.
            Possible Validations are

            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: piUVBJKZGfks4000
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text, example-a corporation name, that appears on the card below the name.Based on your institution’s setup, this field may or may not display
          example: Home Team
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequestV2'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequestV2'
    ReplacementDebitRequestV2:
      required:
        - cardAddressIdentifier
      type: object
      properties:
        cardAddressIdentifier:
          type: string
          description: Specifies which address to be used for Card. Displays error if requested with ALTERNATE address and ALTERNATE adderss in not present
          example: PRIMARY
          enum:
            - PRIMARY
            - ALTERNATE
        expirationDate:
          maxLength: 5
          type: string
          description: Date on which the card expires. For Replacement Order it indicates the new expirationDate of the ordered card
          format: MM/YY
          example: "01/23"
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: MD
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        photoId:
          type: string
          description: enables financial institutions to place cardholder photographs on their cards.This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product,which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceeded by PM
          example: PM001
        rushType:
          type: string
          description: This field indicates the delivery type to send plastic to the cardholder. This field is for debit only
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          default: CARD_AND_PIN
          enum:
            - CARD
            - PIN
            - CARD_AND_PIN
    ReplacementCreditRequestV2:
      required:
        - customerRoleTypeCode
        - specialHandling
      type: object
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        waiveReplacementFee:
          type: string
          description: The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        customerRoleTypeCode:
          type: string
          description: The Role type code of a customer.primary - 01, Secondary-02, Auth user-03
    ReplacementResponseV2:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/ReplacementCardResponseV2'
        cardholderName:
          $ref: '#/components/schemas/ReplacementCardholderNameResponseV2'
        warningInfo:
          $ref: '#/components/schemas/WarningV2'
    ReplacementCardResponseV2:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of the cardholder.
          example: 400010xxxxxx3000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non Transactional token associated to a card.
          format: numeric
          example: piUVBJKZGfks4000
    ReplacementCardholderNameResponseV2:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, John H
    PinAttemptUpdateRequest:
      title: PinattemptUpdateRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0. Applies to debit cards only.
          example: "0"
    SearchCardLimitsRequest:
      title: SearchCardLimitsRequest
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
    SearchCardLimitsResponse:
      type: object
      properties:
        cardLimits:
          $ref: '#/components/schemas/CardLimitsSearch'
      description: Elements with null values in the response are not displayed.
    CardLimitsSearch:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if the limits will expire or not. Valid values YES, NO.
          example: "No"
        expirationDate:
          type: string
          description: The expiration date of the limits if the limits tend to expire. Not applicable if they have no expiration date.  Applies to daily limits only.
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
            - OVERRIDE
            - CARD_CLASS
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "2"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: |
            Combined total, Online and offline withdrawal limits at ATM and POS.  
            Daily Limit Combined number of transaction attempts allowed at the ATM and POS.  
            Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN)  
          example: "2500"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing.
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time.
          example: "0"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.
          example: "0"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        retail:
          type: string
          description: Minimum retail authorization amount. The system approves any retail transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        travel:
          type: string
          description: Minimum travel and entertainment authorization amount. The system approves any travel and entertainment transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
    CardActivationUpdateResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: Encrypted Card number of the cardholder
          example: 400010xxxxxx3000
        nonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transaction token generated and linked for each encrypted card number
          example: WUPIL5DQTZGM7686
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: DEBIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: The activation status of a given card.
          example: NOT_ACTIVATED
          enum:
            - NOT_ACTIVATED
            - ACTIVATED
            - ACTVN_BEFORE_AVAILABLE_DATE
            - CARD_RECORD_NOT_FOUND
            - CARD_LOST_OR_STOLEN
            - CARD_CLOSED
            - NO_ACTIVATION_REQUIRED
            - ACTIVATION_REQUIRED
            - EXP_DATE_NOT_MATCH
            - ALREADY_ACTIVATED
            - ATTEMPT_AFTER_DEADLINE
            - MAX_ATTEMPTS_EXCEEDED
            - CALLER_ID_INVALID
            - ACTIVATION_CODE_INVALID
            - PIN_CHECK_NOT_PERFORMED
            - INVALID_ACTIVATION_METHOD
            - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
            - FIRST_PIN_ID
            - VRU_ACTIVATION
            - VRU_CALLER_ID
            - VRU_CODE_AND_CALLER_ID
            - OPERATOR_ACTIVATE
            - VRI_ATTEM
            - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateResponseWarning:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: Actvation status of the card. NOT_ACTIVATED and ACTIVATED statuses apply to both debit and credit cards, remaining statuses apply to debit only.
          example: NOT_ACTIVATED
          enum:
            - NOT_ACTIVATED
            - ACTIVATED
            - ACTVN_BEFORE_AVAILABLE_DATE
            - CARD_RECORD_NOT_FOUND
            - CARD_LOST_OR_STOLEN
            - CARD_CLOSED
            - NO_ACTIVATION_REQUIRED
            - ACTIVATION_REQUIRED
            - EXP_DATE_NOT_MATCH
            - ALREADY_ACTIVATED
            - ATTEMPT_AFTER_DEADLINE
            - MAX_ATTEMPTS_EXCEEDED
            - CALLER_ID_INVALID
            - ACTIVATION_CODE_INVALID
            - PIN_CHECK_NOT_PERFORMED
            - INVALID_ACTIVATION_METHOD
            - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
            - FIRST_PIN_ID
            - VRU_ACTIVATION
            - VRU_CALLER_ID
            - VRU_CODE_AND_CALLER_ID
            - OPERATOR_ACTIVATE
            - VRI_ATTEM
            - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Elements with null values in the response are not displayed.
    SearchCardActivationResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: Encrypted Card number of the cardholder
          example: 400010xxxxxx3000
        nonTransToken:
          type: string
          description: A 16-digit Non-Transaction token generated and linked for each encrypted card number
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: DEBIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
            - NOT_ACTIVATED
            - ACTIVATED
            - ACTVN_BEFORE_AVAILABLE_DATE
            - CARD_RECORD_NOT_FOUND
            - CARD_LOST_OR_STOLEN
            - CARD_CLOSED
            - NO_ACTIVATION_REQUIRED
            - ACTIVATION_REQUIRED
            - EXP_DATE_NOT_MATCH
            - ALREADY_ACTIVATED
            - ATTEMPT_AFTER_DEADLINE
            - MAX_ATTEMPTS_EXCEEDED
            - CALLER_ID_INVALID
            - ACTIVATION_CODE_INVALID
            - PIN_CHECK_NOT_PERFORMED
            - INVALID_ACTIVATION_METHOD
            - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
            - FIRST_PIN_ID
            - VRU_ACTIVATION
            - VRU_CALLER_ID
            - VRU_CODE_AND_CALLER_ID
            - OPERATOR_ACTIVATE
            - VRI_ATTEM
            - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.  
            Possible Validations are  
            
            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: "4000100020003000"
        memberNumber:
          type: string
          description: Member number associated with the card. If the member number is not passed, defaults to default memberNumber. Applies to debit cards only.
          example: "0"
        nonTransToken:
          type: string
          description: |
            ### Non Transactional token associated to a card.
            Possible Validations are

            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: WUPIL5DQTZGM7686
    PinOffsetRequest:
      required:
        - cardNumber
        - pinOffset
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier.
          example: 400028xxxxxx0012
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.
        cardType:
          type: string
          description: Card Type. Possible values Debit or Credit. If no value is passed, system determines value.
          example: DEBIT
          default: ""
          enum:
            - DEBIT
            - CREDIT
            - ""
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Required.
          example: "1234"
    AuthDetailsRequest:
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
    AuthDetailsResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020XXXXXX4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        cardExpirationDate:
          type: string
          description: Card Expiration Date.
          format: MMYY
          example: "0228"
    ActivationSearchRequest:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.  
            Possible Validations are  
            
            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: "4000100020003000"
        nonTransToken:
          type: string
          description: |
            ### Non-transactional token associated to a card.
            Possible Validations are

            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: WUPIL5DQTZGM7686
    CardholderDemographicsContactStepUpVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect stepup user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect stepup user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect stepup user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to connect stepup user phone number to receive text messages/announcements. This is optional
    CardholderDemographicsContactStepUpText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to text stepup user home phone address. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to text stepup user work phone address. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to text stepup user mobile phone address. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to text stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to text stepup user mobile number. This is optional.
    CardholderDemographicsContactEnfactText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number for receiving text address/announcements. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number for receiving text address/announcements. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect enfact user address for receiving text address/announcements. This is optional
        mobileText:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfactVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        textAddress:
          type: boolean
          description: Indicates whether to connect enfact user phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfact:
      type: object
      properties:
        enfactLanguagePreference:
          type: string
          description: Indicates the preferred language that can be used for communicating with the enfact system.
          example: ENGLISH
          enum:
            - ENGLISH
            - SPANISH
            - NONE
    CardholderDemographicsContactText:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character.
          example: "7406520178"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character.
          example: "7406520178"
    CardholderDemographicsContactEmail:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. Optional. Applies to debit and credit cards. Max length 50.
          example: jessedoe@example.com
    CardholderDemographicsContactVoice:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: "7406520178"
    CardholderDemographicsContact:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographicsContactVoice'
        email:
          $ref: '#/components/schemas/CardholderDemographicsContactEmail'
        text:
          $ref: '#/components/schemas/CardholderDemographicsContactText'
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfact'
        enfactVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactVoice'
        enfactText:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactText'
        stepUpText:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpText'
        stepUpVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpVoice'
    CardholderDemographicsContactV2:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographicsV2Voice'
        email:
          $ref: '#/components/schemas/CardholderDemographicsV2Email'
        text:
          $ref: '#/components/schemas/CardholderDemographicsV2Text'
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV2ContactEnfact'
    CardholderDemographicsV2Preferences:
      type: object
      properties:
        homePhone:
          $ref: '#/components/schemas/CardholderDemographicsV2HomePhone'
        workPhone:
          $ref: '#/components/schemas/CardholderDemographicsV2WorkPhone'
        cellPhone:
          $ref: '#/components/schemas/CardholderDemographicsV2CellPhone'
        textAddress:
          $ref: '#/components/schemas/CardholderDemographicsV2TextAddress'
        emailAddress:
          $ref: '#/components/schemas/CardholderDemographicsV2EmailAddress'
    CardholderDemographicsV2Voice:
      type: object
      properties:
        homePhone:
          type: string
          description: 'Home telephone number of the primary cardholder. 15 digit numeric.  Applies to debit and credit cards. '
          example: "1005550001"
        workPhone:
          type: string
          description: 'Work telephone number of the primary cardholder. 15 digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          type: string
          description: Cell Phone number of the primary cardholder. 15 digit numeric. Applies to debit and credit cards.
          example: "1005550001"
    CardholderDemographicsV2Email:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. This fields is for both debit and credit, it is optional. The max length is 50.
          example: jessedoe@example.com
    CardholderDemographicsV2Text:
      type: object
      properties:
        homePhone:
          maxLength: 15
          type: string
          description: Home telephone number of the primary cardholder. 15 digit numeric. Applies to debit and credit cards.
          example: "1005550001"
        workPhone:
          maxLength: 15
          type: string
          description: 'Work telephone number of the primary cardholder. 15 digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        cellPhone:
          maxLength: 15
          type: string
          description: 'Cell Phone number of the primary cardholder. 15 digit numeric. Applies to debit and credit cards. '
          example: "1005550001"
        textAddress:
          maxLength: 15
          type: string
          description: 'Cardholder''s phone number to receive text messages/announcements. 15 digit numeric. '
          example: "1005550001"
    CardholderDemographicsV2ContactEnfact:
      type: object
      properties:
        languagePreference:
          type: string
          example: ENGLISH
          enum:
            - ENGLISH
            - SPANISH
            - NONE
    CardholderDemographicsV2HomePhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV2Enfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV2StepUp'
    CardholderDemographicsV2WorkPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3WorkPhoneStepUp'
    CardholderDemographicsV2CellPhone:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3CellPhoneStepUp'
    CardholderDemographicsV2TextAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3TextAddressStepUp'
    CardholderDemographicsV2EmailAddress:
      type: object
      properties:
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressEnfact'
        stepUp:
          $ref: '#/components/schemas/CardholderDemographicsV3EmailAddressStepUp'
    CardholderDemographicsV2Enfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. This is for debit and credit, this is optional.
        consentForText:
          type: boolean
          description: EnFact consent for text. This is for debit and credit, this is optional.
    CardholderDemographicsV2StepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. This is for debit and credit, this is optional.
        consentForText:
          type: boolean
          description: EnFact consent for text. This is for debit and credit, this is optional.
    CardholderDemographicsV3WorkPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3WorkPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3CellPhoneEnfact:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3CellPhoneStepUp:
      type: object
      properties:
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
          example: true
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3TextAddressEnfact:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3TextAddressStepUp:
      type: object
      properties:
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3EmailAddressEnfact:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    CardholderDemographicsV3EmailAddressStepUp:
      type: object
      properties:
        consentForEmail:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
          example: true
    Tcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: |
            Indicates the Telephone Consumer Protection Act (TCPA) type.  
            
            - ENFACT - Fraud monitoring system which is used for identifying suspicious activities on credit and debit cards.  
            - STEPUP - Authentication system in which an OTP is sent to the cardholder's available contact information.  
          enum:
            - ENFACT
            - STEPUP
        mediaType:
          type: string
          description: Media through which user can be contacted.
          example: VOICE
          enum:
            - VOICE
            - TEXT
        revoked:
          type: boolean
          description: Status of TCPA media type.
          example: true
        lastUpdatedDateTime:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date-time
          example: "2022-09-26T15:50:45Z"
        lastUpdatedBy:
          maxLength: 25
          type: string
          description: Last updated by. Optional. Applies to debit and credit cards.
          example: Jesse Doe
    SearchTransactionRequest:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: The Member number is associated with the card. If not passed, defaults to ALL. Transaction summary ia returned as an array for all member numbers when defaulted to All.
          example: "0"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    SearchTransactionsResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 50
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    FilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: |
            ### Filter applied to transactions search. One or many filter combinations are allowed. Applies to debit and credit cards.  

            **MERCHANT_NAME** - Merchant Name.  

            **AMOUNT_FROM** - Minimum amount. Valid format is 0.00.  

            **AMOUNT_TO** - Maximum amount. Valid format is 0.00.  

            **FROM_DATE** - Start date. Valid Format is YYYY-MM-DD.  

            **TO_DATE** - End date. Valid format is YYYY-MM-DD.  

            **STATUS** - For debit transactions valid status are APPROVED, REVERSED and DECLINED. For credit transactions valid status are  POSTED/DECLINED/PENDING/APPROVED/REVERSED.  

            **TRANSACTION_CODE** - Describes the type of transaction done on card. For values refer field transactionType.  

            **MESSAGE_TYPE** - Message based on activity done on the transaction. For values refer field MessageType.  Applies only to debit cards.  

            **SYSTEM_RECORD_ID** - The ID that uniquely identifies the transaction. Mapped to the lifecycle key.  

            **SEQUENCE_NUMBER** - Chronological numeric identifier for the transaction.  

            **RETRIEVAL_REF_NUMBER** - Transaction identifier typically assigned by the acquirer or transaction originator.  
          example: MERCHANT_NAME
          enum:
            - MERCHANT_NAME
            - AMOUNT_FROM
            - AMOUNT_TO
            - FROM_DATE
            - TO_DATE
            - STATUS
            - TRANSACTION_CODE
            - MESSAGE_TYPE
            - SYSTEM_RECORD_ID
            - SEQUENCE_NUMBER
            - RETRIEVAL_REF_NUMBER
        filterValue:
          type: string
          description: Values for selected filters. If the filterBy field is set to MERCHANT_NAME, this field contains the name of the merchant, such as 'ExampleCo'. See filterBy field for more information.
          example: Store1
    Transaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: life cycle key. Applies to debit cards only.
        cardNumber:
          type: string
          description: Card  number used in transaction, identified in request. Masked in the response. Applies to debit and credit cards.
        memberNumber:
          type: string
          description: Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only.
          example: "0"
        cardType:
          type: string
          description: Possible values DEBIT, CREDIT_GATEWAY or CREDIT. Applies to debit and credit cards.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000009"
        retrievalRefNumber:
          type: string
          description: Reference Number supplied and retained by the message originator.Max length 12.Applies to debit cards only.
          example: "080000100003"
        subResponseCode:
          type: string
          description: Optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination. Applies to debit cards only.
        subResponseCodeDescription:
          type: string
          description: Description for sub response code. Applies to debit cards only.
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed. Applies to debit cards only.
          example: "1299.00"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction, this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1. Applies to debit cards only.
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code, generated for approved transactions only. Applies to debit and credit cards.
          example: "050821"
        terminalId:
          type: string
          description: Identifier indicating the terminal where the transaction was performed. Applies to debit cards only.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service. Applies to debit and credit cards.
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City and State where terminal is located. Applies to debit and credit cards.
          example: Newark
        merchantState:
          type: string
          description: |
            Merchant State  
            AL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  
            CA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  
            FM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  
            FL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  
            ID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  
            LA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  
            MD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  
            MO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  
            NM New Mexico | NY New York | NC North Carolina | ND North Dakota  
            MP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  
            OH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  
            PA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  
            SC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  
            VT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  
            WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  
          example: NJ
        eciMastercard:
          type: string
          description: |
            Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction. Applies to debit cards only.  

            Possible Positions 1 and 2 values  

            * 21 = Channel encryption; cardholder certificate not used  
            * 22 = Masterpass-generated transaction  
            * 24 = Digital Secure Remote Payment (DSRP) transaction  
            * 91 = No security protocol; cardholder certificate not used.  

            Possible Position 3 values  

            * 0 = Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant an Identity Check merchant has chosen not to undertake Identity Check on this transaction or identity Check failed authentication and merchant desires to proceed with transaction  
            * 1 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV  
            * 2 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  
            * 3 = UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  
            * 4 = Merchant has chosen to share authentication data within authorization; UCAF collection not supported  
            * 5 = Reserved for future use  
            * 6 = Merchant Risk-Based Decisioning  
            * 7 = Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction  
          example: "21"
        eciVisa:
          type: string
          description: |
            Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  Applies to debit cards only.  

            Position 4 - Mail/Phone/Electronic Commerce and Payment Indicator  

            * Space = POS Customer Present (POS Check Service Only)  
            * 1 = Single transaction of a mail/phone order  
            * 2 = Recurring transaction  
            * 3 = Installment payment  
            * 4 = Unknown classification/Other mail order  
            * 5 = Secure electronic commerce transaction  
            * 6 = Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  
            * 7 = Non-authenticated security transaction  
            * 8 = Non-secure transaction  
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction. Valid values Yes or No. Applies to debit cards only.
          example: 1 - Yes
        networkID:
          type: string
          description: Specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. Applies to debit cards only.
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections. Applies to debit cards only.
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system. Applies to debit cards only.
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Applies to debit cards only.
        unmatchedCompletionFlag:
          type: string
          description: Indicates unmatched completion flag. Applies to debit cards only.
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if an expiration date mismatch exists. Applies to debit cards only.
          example: "N"
        effectiveDate:
          type: string
          description: Date when the transaction came into effect. Applies to credit cards only.
          format: date
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created. Applies to debit and credit cards.
          format: date-time
        transactedCardNumber:
          type: string
          description: CardNumber given for monetary(posted) transactions if available, otherwise blank. Applies to credit cards only.
          example: 4443115KUCWPZF7831
        statusDescription:
          type: string
          description: Combination of status code and description for transaction status. Applies to debit and credit cards.
          example: 64-PI LOST
        merchantName:
          type: string
          description: Merchant Name. Applies to debit and credit cards.
          example: Store1
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00. Applies to debit and credit cards.
          example: "1299.00"
        transactionType:
          type: string
          description: |
            Indicates the type of transaction made on the card. This contains the transactionCode description of status Posted transactions.  

            Valid values for DEBIT  

            - Account Inquiry  
            - Balance Inquiry  
            - Check Cashing  
            - Credit  
            - Debit  
            - Deposit  
            - Deposit Cash Back  
            - Loan to Prepaid  
            - Member Verification  
            - Message  
            - Money Transfer Credit  
            - Money Transfer Dispense  
            - Money Transfer Funding  
            - Money Transfer Initiate  
            - Money Transfer Refund  
            - Payment  
            - Payment Enclosed  
            - Payment to Merchant  
            - PIN Select  
            - Refund from Merchant  
            - Special Purchase  
            - Statement Print  
            - Third Party Bill Payment Return  
            - Transfer  
            - Withdrawal  
            
            Valid Values for CREDIT when transaction status is Posted.  

            - Account Balance Details for MULTRAN Accounts  
            - Account Level Processing Strategy Change Message  
            - Account Transfer  
            - Airline Itinerary  
            - Backdated Cash Advance Finance Charge  
            - Backdated Cash Advance and Sales Adjustment  
            - Backdated Payment Adjustment  
            - Backdated Payment or Cash Advance Adjustment  
            - Backdated Payment Interest Adjustment  
            - Cash Advance  
            - Cash Advance Amount Adjustment  
            - Cash Advance Finance Charge  
            - Cash Advance Finance Charge Refund  
            - Cash Advance Item Charge  
            - Cash Advance Item Charge Refund  
            - Cash Advance Reversal  
            - Charge Off All Finance Charges  
            - Charge Off Billed Cash Advance Item Charges  
            - Charge Off Billed Merchandise Item Charges  
            - Charge Off Billed Late Charges 
            - Charge Off Billed Overlimit Fees  
            - Charge Off Cash Advance Interest  
            - Charge Off Credit Life Insurance  
            - Charge Off All Current Cash Advance Interest  
            - Charge Off All Current Merchandise Interest  
            - Charge Off Cycle-to-Date Cash Advance Item Charges  
            - Charge Off Cycle-to-Date Late Charges  
            - Charge Off Cycle-to-Date Merchandise Item Charges  
            - Charge Off Cycle-to-Date Overlimit Fees  
            - Charge Off Merchandise Interest and Service Charges  
            - Charge Off Total Account  
            - Credit Life Insurance Fee Refund  
            - Credit Life Insurance Charge  
            - Fee or Finance Charge Rebate  
            - Finance Charge (item charge)  
            - Interest Earned or Credit Interest  
            - Late Charge  
            - Late Charge Refund  
            - Merchandise Finance Charge  
            - Merchandise Finance Charge Refund  
            - Merchandise Item Charge  
            - Merchandise Item Charge Refund  
            - Merchandise Sale Amount Adjustment  
            - Merchandise Sale Reversal  
            - Overlimit Account Message  
            - Overlimit Charge  
            - Overlimit Charge Refund  
            - Payment  
            - Payment Amount Adjustment  
            - Payment Reversal  
            - Retail Special Details  
            - Return  
            - Return Amount Adjustment  
            - Return Reversal  
            - Reserved for restricted use  
            - Sale  
            - Skip Payment Certificate Message  
            - Service Charge or Statement Charge  
            - Small Balance Charge-off  
            - Special Details  
            - Specific Credit Amount Adjustment  
            
            Transaction status Pending or Declined for CREDIT  
            
            - Account status inquiry service or payment account status inquiry  
            - Account status check via a token provisioning request resulted in an approved response  
            - Account status inquiry service or payment account status inquiry  
            - Activation code notification message for token provisioning via step-up authentication processing  
            - Authorization adjustment  
            - Balance inquiry approved  
            - Cash advance authorization approved  
            - Cash advance authorization approved by expansion  
            - Cash advance authorization approved by name  
            - Cash advance authorization approved by positive identification  
            - Cash advance authorization declined  
            - Cash advance authorization manually declined  
            - Cash authorization approved without issuer contact  
            - Cash referral  
            - Check authorization approved  
            - Check authorization declined  
            - Check system error - declined  
            - Duplicate authorization  
            - In-store return  
            - Issuer’s adjustment  
            - Manual override cash advance authorization  
            - Manual override merchandise authorization  
            - Merchandise authorization approved  
            - Merchandise authorization approved by expansion  
            - Merchandise authorization approved by name  
            - Merchandise authorization approved by positive identification  
            - Merchandise authorization approved without issuer contact  
            - Merchandise authorization declined  
            - Merchandise authorization manually declined  
            - Merchandise referral  
            - Merchandise return adjustment  
            - Merchandise return adjustment declined  
            - Merchandise return approved  
            - Merchandise return declined  
            - Override declined cash advance  
            - Override declined merchandise authorization  
            - Pay unposted check  
            - Permanent authorization adjustment  
            - Permanent authorization request  
            - Preauthorization request approved  
            - Preauthorization request denied  
            - Private label ETC return posted at the time of return  
            - Reserved for restricted use  
            - Return posted check  
            - Return unposted check  
            - Right-time payment  
            - Right-time pay/reversal  
            - Token has been granted, linked to the cardholder account and provisioned  
            - Token maintenance such as activation, deactivation, suspension, exception, or replacement  
            - Token provision decision  
            - Visa and Mastercard person-to-person payment transaction reversal  
            - Visa and Mastercard person-to-person payment transaction decline  
          example: WITHDRAWAL
        messageType:
          type: string
          description: |
            The combination of message type code and description for transaction message. Applies to debit cards only.  
            - 100- Pre-Auth Request  
            - 102- Pre-Auth Reversal  
            - 110- Preauthorization  
            - 120- Pre-Auth Stand In  
            - 121- Pre-Auth Adv Repeat  
            - 130- Auth Advice Resp  
            - 200- Request  
            - 202- Auth Reversal  
            - 210- Auth/Completion  
            - 220- Forced Completion  
            - 221- Advice Repeat  
            - 230- Advice Response  
            - 320- Batch Upload  
            - 330- Batch Upload Resp  
            - 420- Reversal  
            - 421- Advice Rev Repeat  
            - 430- Reversal Response  
            - 500- Batch Settl Request  
            - 510- Batch Settl Resp  
            - 800- Network Mgmt Req  
            - 810- Network Mgmt Resp  
            - 820- Network Mgmt Advice  
          example: 420- Reversal
        transactionStatus:
          type: string
          description: Status of the transaction. Possible values for debit are APPROVED, REVERSED and DECLINED.  Valid values for credit POSTED - PENDING - DECLINED - APPROVED - REVERSED
          example: APPROVED
        responseCode:
          type: string
          description: Authorization response approval or denial code.  Applies to debit and credit cards.
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code. Applies to debit and credit cards.
          example: APPROVED - WITH BALANCES
        transactionCode:
          type: string
          description: |
            Code assigned to particular transaction.  This field is not populated in response when transaction status is Posted, instead description is populated in transaction type field. Applies to credit cards only.  
            253- Sale  
            254- Cash Advance  
            255- Return  
            256- Merchandise Sale Reversal  
            257- Cash Advance Reversal  
            258- ReturnReversal  
            259- Merchandise Sale Amount Adjustment  
            260- Cash Advance Amount Adjustment  
            261- Return Amount Adjustment  
            271- Payment  
            272- Payment Reversal  
            273- Payment Amount Adjustment  
            280- Specific Credit Amount Adjustment  
            281- Cash Advance Item Charge Refund  
            282  Late Charge Refund  
            283  Merchandise Finance Charge Refund  
            284  Cash Advance Finance Charge Refund  
            285  Backdated Payment Adjustment  
            286  Merchandise Item Charge Refund  
            287  Overlimit Charge Refund  
            288  Credit Life Insurance Fee Refund  
            290  Backdate Cash Advance and Sales Adjustment  
            370  Small Balance Charge-off  
            371  Charge Off Total Account  
            372  Charge Off Cash Advance Interest  
            373  Charge Off Billed Late Charges  
            374  Charge Off Merchandise Interest and Service Charges  
            375  Charge Off Credit Life Insurance  
            376  Charge Off All Finance Charges  
            377  Charge Off All Current Cash Advance Interest  
            378  Charge Off All Current Merchandise Interest  
            379  Charge Off Cycle-to-Date Late Charges  
            380  Charge Off Billed Cash Advance Item Charges  
            381  Charge Off Billed Merchandise Item Charges  
            382  Charge Off Billed Overlimit Fees  
            383  Charge Off Cycle-to-Date Cash Advance Item Charges  
            384  Charge Off Cycle-to-Date Merchandise Item Charges  
            385  Charge Off Cycle-to-Date Overlimit Fees  
            400  Account Transfer  
            900  Finance Charge (item charge)  
            959  Reserved for restricted use  
            960  Reserved for restricted use  
            961  Late Charge  
            962  Credit Life Insurance Charge  
            963  Cash Advance Finance Charge  
            964  Merchandise Finance Charge  
            965  Overlimit Account Message  
            966  Reserved for restricted use  
            967  Account Level Processing Strategy Change Message  
            976  Reserved for restricted use  
            978  Reserved for restricted use  
            979  Reserved for restricted use  
            981  Account Balance Details for MULTRAN Accounts  
            984  Backdated Cash Advance Finance Charge  
            985  Backdated Payment Interest Adjustment  
            986  Cash Advance Item Charge  
            987  Merchandise Item Charge  
            988  Overlimit Charge  
            989  Interest Earned or Credit Interest  
            990  Service Charge or Statement Charge  
            991  Cash Advance Item Charge  
            992  Fee or Finance Charge Rebate  
            993  Backdated Payment or Cash Advance Adjustment  
            994  Skip Payment Certificate Message  
            997  Retail Special Details  
            998  Airline Itinerary Special Details  
            999  First Data use only.  
            
            Below transaction codes and description are for the transaction status Pending or Declined.  
            
            AA  Authorization adjustment  
            AC  Activation code notification message for token provisioning via step-up authentication processing  
            AK  Check authorization approved.  
            AP  Preauthorization request approved  
            AS  Account status inquiry service or payment account status inquiry  
            CA  Cash advance authorization approved  
            CD  Cash advance authorization declined  
            CE  Cash advance authorization approved by expansion  
            CO  Override declined cash advance  
            CP  Cash advance authorization approved by positive identification  
            CS  Cash referral  
            CT  Cash advance authorization approved by name  
            CX  Cash advance authorization manually declined  
            DA  Duplicate authorization  
            DC  Cash authorization approved without issuer contact  
            DK  Check authorization declined  
            DM  Merchandise authorization approved without issuer contact  
            DP  Preauthorization request denied  
            EC  Balance inquiry approved  
            IA  Issuer’s adjustment  
            IV  Reserved for restricted use  
            KE  Check system error - declined  
            KR  Return posted check  
            MA  Merchandise authorization approved  
            MC  In-store return  
            MD  Merchandise authorization declined  
            ME  Merchandise authorization approved by expansion  
            MI  Right-time payment  
            MO  Override declined merchandise authorization  
            MP  Merchandise authorization approved by positive identification  
            MR  Right-time pay/reversal  
            MS  Merchandise referral  
            MT  Merchandise authorization approved by name  
            MX  Merchandise authorization manually declined  
            PA  Permanent authorization request  
            PK  Pay unposted check  
            PR  Visa and Mastercard person-to-person payment transaction reversal  
            PX  Visa and Mastercard person-to-person payment transaction decline  
            PZ  Permanent authorization adjustment  
            QA  Merchandise return adjustment  
            QD  Merchandise return declined  
            QQ  Reserved for restricted use  
            QR  Merchandise return approved  
            QZ  Merchandise return adjustment declined  
            RK  Return unposted check  
            TA  Account status check via a token provisioning request resulted in an approved response  
            TD  Token provision decision  
            TM  Token maintenance, such as activation, deactivation, suspension, exception, or replacement  
            TN  Token has been granted, linked to the cardholder account, and provisioned  
            VA  Private label ETC return posted at the time of return  
            XC  Manual override cash advance authorization  
            XM  Manual override merchandise authorization.  
          example: "961"
        declinedTransactionDetails:
          $ref: '#/components/schemas/DeclinedTransactionDetails'
        pendingTransactionDetails:
          $ref: '#/components/schemas/PendingTransactionDetails'
        postedTransactionDetails:
          $ref: '#/components/schemas/PostedTransactionDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
    DeclinedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Description of the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
          example: ME
        declinedReasonCode:
          type: string
          description: Reason code and description for declined transactions.
          example: 64-PI LOST
        expandedReasonCode:
          type: string
          description: Code for expanded reason.
        authorizationResponseDescription:
          type: string
          description: Description of the authorization response.
      description: Tag applies to credit cards only.
    PendingTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Describes the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        posEntryModeCode:
          type: string
          description: posentry mode code
        enteredExpirationDate:
          type: string
          description: Entered expiration date.
        authorizationCode:
          type: string
          description: Authorization code associated with the approved transaction.
        transactionCode:
          type: string
          description: Code associated with particular transaction.
        declinedReasonCode:
          type: string
          description: Reason code for declined transaction.
        expandedReasonCode:
          type: string
          description: The expanded reason code.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example, if authorized amount is 100 and transaction amount is 60, 40 is the adjustment amount.
      description: Tag applies to credit cards only.
    PostedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        cardholderAccountNumber:
          type: string
          description: The cardholderAccountNumber is used as control account number in case of consolidated billing on subordinate account transaction.
        transactionDescription:
          type: string
          description: Description of transaction
        promotionId:
          type: string
          description: Identifies the promotion to which the transaction was posted.
        authorizationCode:
          type: string
          description: 5- or 6-digit code provided by the issuer or its agent to indicate approval of the transaction.
        postingDate:
          type: string
          description: Posting date of the transaction.
          format: date
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction id
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example if authorized amount is 100 and transaction is 60, 40 is the adjustment amount.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
      description: Tag applies to credit cards only.
    TransactionDetails:
      type: object
      properties:
        entryMode:
          type: string
          description: Method used to input the information from the card to the terminal.
          example: 2 - Swipe
        enteredExpirationDate:
          type: string
          description: Expiration date entered for the transaction.
          format: MMYY
          example: "1122"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.
          example: 1 - Yes
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        international:
          type: string
          description: Indicates if the transaction was international.
          example: "No"
        eCommerce:
          type: string
          description: Indicates if the transaction was eCommerce.
        avsResult:
          type: string
          description: Address verification service result.
        avsAddress:
          type: string
          description: Address provided for address verification.
        settlementAmount:
          type: string
          description: Amount paid to merchant.
          example: "1100.00"
          x-encrypted: "N"
        transactionfeeAmount:
          type: string
          description: Fee amount charged on transaction.
          example: "20.00"
        transactionCurrencyCode:
          type: string
          description: Currency code for transaction amount.
        settlementCurrencyCode:
          type: string
          description: Currency Code for the settlement amount.
        settlementConversionRate:
          type: string
          description: Conversion Rate applied on settlement amount.
        reversalreason:
          type: string
          description: Reason for reversal transaction.
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        cardSequenceNumber:
          type: string
          description: Card Sequence Number distinguishes among separate cards having the same PAN.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction identifier of particular transactions.
        pinVerified:
          type: string
          description: Indicates if PINverification took place on the client platform.
        availableUsage:
          type: string
          description: Amount of available credit on the account.
        transactionAmtoriginal:
          type: string
          description: Original amount of funds requested by the cardholder in the transaction currency (US Dollars). This amount includes cashback and surcharge fees and is exclusive of ISA and CCA fees.
        systemAudit:
          type: string
          description: Number a message initiator assigns to uniquely identify a transaction.
        messageId:
          type: string
          description: Identifier for the ISO message type used for this transaction.
        fraudDecision:
          type: string
          description: Decision returned by the third-party fraud interface.
        falconScore:
          type: string
          description: Score assigned by third-party fraud interface for authorization sent online.
        merchantCode:
          type: string
          description: Indicates the merchant category code associated with the transaction.
        acquiringCountryCode:
          type: string
          description: Code of the country where the acquiring institution is located.
        posMode:
          type: string
          description: Numeric codes to indicate the method by which the PAN was entered into the interchange system and to indicate the POS terminal PIN entry capabilities.
        posCode:
          type: string
          description: Identifies the Point of Service   condition code. It describes the condition under which the transaction took place at POS.
        acquiringId:
          type: string
          description: Acquiring Institution ID code identifies the Acquiring Institution Or Merchant Bank for this transaction. MC - 5 to 11 digits. VISA - 6 to 11 digits.
        cardAcceptorTermId:
          type: string
          description: Identifies a terminal at the card acceptor location of acquiring institutions or merchant POS systems. The terminal ID should be printed on all transaction receipts in ATM and POS transactions where the terminal is capable of generating customer receipts.
        cardAcceptorIdCode:
          type: string
          description: Identification number assigned to the establishment where the transaction was acquired.
        cardAcceptorName:
          type: string
          description: Indicates the name of the establishment where the transaction was acquired.
        cardAcceptorCity:
          type: string
          description: Indicates the city where the call originated.
        cavvResult:
          type: string
          description: Indicates the Cardholder Authentication Verification Value (CAVV) results code that identifies the outcome of CAVV validation. The value in field also indicates who performed the authentication, either Visa or the issuer, and the classification of the transaction.
        cvvResult:
          type: string
          description: Defines outcome of CVV validation.
        originalResponseCode:
          type: string
          description: Original response code from the original tramsaction. For an instance, when V.I.P. encounters a duplicate transaction, this field contains the field 39 response code from the original transaction.
        additionalData1:
          type: string
          description: Any optional data received on the response.
        additionalData2:
          type: string
          description: Any optional data received on the response.
        avsOptionCode:
          type: string
          description: Address Verification Service (AVS) Request indicates that verification of the cardholder billing address is requested in the authorization message.
        cvcResultCode:
          type: string
          description: The result code of CVC (Card Verification Code).
        tagData:
          type: string
          description: Identifies the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
        tagCode:
          type: string
          description: Indicates whether the merchant terminal supports a specific program or service.
        tagSvcRsn:
          type: string
          description: Notifies the issuer of the On-behalf Service performed on the transaction and the results. Sub element,71 will support up to ten services for a transaction.
        terminalIndicator:
          type: string
          description: This field maps to Field 55 Tag 95— Terminal Verification Results.This Tag maps to Field 131—Terminal Verification Results (TVR).Field 131 is carried in VSDC transactions and contains indicators from a terminal perspective.  The terminal records the results of offline and online processing by setting a series of indicators in this field.   These indicators are available to clients in the online message and clearing transaction.
        riskCodeOne:
          type: string
          description: Field 62.22, positions 1-2 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Account Risk Condition Code (CARCC) related to a high-risk even in the Compromised Account Management System (CAMS).
        riskCodeTwo:
          type: string
          description: Field 62.22, positions 3-4 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Event Reference (CER) ID related to a high-risk CAMS event.
        riskCodeThree:
          type: string
          description: Field 62.22, positions 5-6 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.
        riskReasonCodeOne:
          type: string
          description: Field 62.21, position 3 is.an alphanumeric combination that will act as a key to explain the risk score model.
        riskReasonCodeTwo:
          type: string
          description: Field 62.21, positon 4 is an alphanumeric combination that will act as a key to explain the risk score model.
        riskScore:
          type: string
          description: Field 62.21, positions 1-2 is a Visa private-use field that contains online risk assessment information from Advanced Authorization. This information assists issuers in the authorization decision-making process.This value indicates the degree of risk associated with a transaction. This two-byte transaction risk score is represented by a numeric value from 01–99.
        messageReasonCode:
          type: string
          description: Code explaining the reason for an online acquirer advice, reversal, or partial reversal.
        networkID:
          type: string
          description: Code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction.
        mcOriginalTypeId:
          type: string
          description: Original type id
        mcOriginalRef:
          type: string
          description: Original reference with the merchant.
        avsPostalCode:
          type: string
          description: Identifies the cardholder postal code and street address that is used for certain types of verification.
        cvvCVVtwo:
          type: string
          description: The CVV2/CVC2 value that is printed on the signature panel of Visa and Mastercard plastics. This value is made available for issuers that want to validate the CVV2/CVC2 value themselves. The value will only be passed to an issuer if provided by the acquirer.  Provided transactions in which the debit card is not present.
        applicationTranCounter:
          type: string
          description: Count of the transactions performed within the card application. The count is incremented by one each time a transaction is initiated. Multiple authorization requests for the same transaction will have the same ATC; for example, when online PIN fails and the next authorization represents a different PIN try for the same transaction, the ATC will be the same. For reversals and advices, the ATC is the value from the original message.
        appInterchangeProfile:
          type: string
          description: Field 138 is carried in VSDC transactions and provides a series of indicators that reflect the specific functions supported by the chip card account, for example, whether cardholder verification is supported.This field maps to Field 55, Tag 82—Application Interchange Profile.
        terminalCountryCode:
          type: string
          description: This field is carried in VISA SMART DEBIT SMART CREDIT (VSDC) transactions and identifies the country where the merchant terminal is located. A leading zero is required to pad the first unused half-byte of this field. The zero is filler and is not part of the code.This field maps to Field 55, Tag 9F1A—Terminal Country Code.
        stateCode:
          type: string
          description: Originating Center State Postal Code
        generalDetails:
          $ref: '#/components/schemas/GeneralDetails'
        amountDetails:
          $ref: '#/components/schemas/AmountDetails'
        networkInfo:
          $ref: '#/components/schemas/NetworkInfo'
        tokenAndEmvInfo:
          $ref: '#/components/schemas/TokenAndEmvInfo'
        riskInfo:
          $ref: '#/components/schemas/RiskInfo'
        acquirerInfo:
          $ref: '#/components/schemas/AcquirerInfo'
      description: Applies to debit cards only.
    TerminalTransactionRequest:
      type: object
      properties:
        terminalId:
          type: string
          description: Eight-character terminal identifier indicating the terminal where the transactions were performed.
          example: VMDIEOS1
          x-encrypted: "N"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/TerminalTransactionFilterCriteria'
    TerminalTransactionFilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: |
            ### Type of filter to be applied to narrow down terminal transactions search.One or many filter combinations are allowed.  

            **MERCHANT_NAME** - Merchant Name.  
            
            **AMOUNT_FROM** - Minimum amount user wish to choose. Valid format is 0.00.  
            
            **AMOUNT_TO** - Maximum amount user wish to choose. Valid format is 0.00.  
            
            **FROM_DATETIME** - Start date and time user wish to choose.Valid Format is YYYY-MM-DD.  
            
            **TO_DATETIME** - Till date user wish to choose. Valid format is YYYY-MM-DD.  
            
            **STATUS** - Status of Transaction for debit.For debit transactions valid status  are APPROVED,DECLINED and REVERSED.  
            
            **TRANSACTION_TYPE** - Describes the type of transaction done on card.For values refer field name transactionType.  
            
            **MESSAGE_TYPE** - Message based on activity done on the transaction. This field is applicable only for Debit. For values refer field name MessageType.  
            
            **CARDNUMBER** - Card  number on which transaction is done.  
            
            **TERMINALFILOGO** - The Terminal FI Logo.  
            
            **CARDFILOGO** - The Card FI Logo.  
            
            **SYSTEM_RECORD_ID** - The ID that uniquely identifies the transaction.Mapped to the lifecycle key.  
          example: MERCHANT_NAME
          enum:
            - MERCHANT_NAME
            - AMOUNT_FROM
            - AMOUNT_TO
            - FROM_DATETIME
            - TO_DATETIME
            - STATUS
            - TRANSACTION_CODE
            - MESSAGE_TYPE
            - CARDNUMBER
            - TERMINALFILOGO
            - CARDFILOGO
            - SYSTEM_RECORD_ID
        filterValue:
          type: string
          description: filterBy Value for which transactions need to be filtered.
          example: Store1
    TerminalTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TerminalTransaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    TerminalTransaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: life cycle key
        cardNumber:
          type: string
          description: Card number on which transaction is done. Card should be the value which was passed from request.
          example: 400010xxxxxx3000
        memberNumber:
          type: string
          description: Member number associated to the card. This field is only used for Debit cards and if the user is selecting member number for a given cardholder. Not used when searching all transactions for a customer
          example: "0"
        sequenceNumber:
          type: string
          description: Numeric identifier for the transaction, assigned by the terminal. When the Fiserv back up host is processing the terminal activity, this number advances by a sequence number of 10 from the previous sequence number.
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit.
        subResponseCodeDescription:
          type: string
          description: This field provide description for sub response code.Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit.
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied     transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount is shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed
          example: "1299.00"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction,this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1.
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.It is generated for approved transactions only.
          example: "050821"
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction.National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City and State where terminal is located.
          example: New Jersey
        merchantState:
          type: string
          description: |
            Merchant State  
            AL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  
            CA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  
            FM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  
            FL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  
            ID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  
            LA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  
            MD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  
            MO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  
            NM New Mexico | NY New York | NC North Carolina | ND North Dakota  
            MP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  
            OH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  
            PA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  
            SC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  
            VT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  
            WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  
          example: NJ
        eciMastercard:
          type: string
          description: |
            Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction.  
            Positions 1 and 2 can be as follows  
            21=Channel encryption; cardholder certificate not used  
            22=Masterpass-generated transaction  
            24=Digital Secure Remote Payment (DSRP) transaction  
            91=No security protocol; cardholder certificate not used.  
            Position 3 can be as follows  
            0=Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant —or— – An Identity Check merchant has chosen not to undertake Identity Check on this transaction —or— – Identity Check failed authentication and merchant desires to proceed with transaction  
            1=UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV)  
            2=UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  
            3=UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  
            4=Merchant has chosen to share authentication data within authorization; UCAF collection not supported  
            5=Reserved for future use  
            6=Merchant Risk-Based Decisioning  
            7=Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction
          example: "3"
        eciVisa:
          type: string
          description: |
            Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  
            Position 4 Mail/Phone/Electronic Commerce and Payment Indicator  
            * Space=POS Customer Present (POS Check Service Only)  
            * 1=Single transaction of a mail/phone order  
            * 2=Recurring transaction  
            * 3=Installment payment  
            * 4=Unknown classification/Other mail order  
            * 5=Secure electronic commerce transaction  
            * 6=Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  
            * 7=Non-authenticated security transaction  
            * 8=Non-secure transaction  
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.Valid values can be Yes/No
          example: 1 - Yes
        networkID:
          type: string
          description: 'Field 63.1 contains a code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. '
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections.
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system.
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Indicates how the transaction at the device is performed.
        unmatchedCompletionFlag:
          type: string
          description: Indicates umatched completion flag
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if the expiration date mismatch is there or not
          example: "N"
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created.
          format: date-time
          example: "2014-10-02T15:01:23.045Z"
        merchantName:
          type: string
          description: The Merchant Name
          example: Store1
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00
          example: "1299.00"
        transactionType:
          type: string
          description: |
            Indicates the type of transaction that was made on the card. It is interlinked with transaction code.  
            Valid values for *** DEBIT are  
            [Withdrawal, Debit, Money Transfer Funding, Check Cashing, Deposit Cash Back, Money Transfer Dispense, Money Transfer Initiate, Deposit, Credit, Message, Money Transfer Credit, Loan to Prepaid, Money Transfer Refund, Balance Inquiry, PIN Select, Statement Print, Member Verification, Account Inquiry, Transfer, Payment, Payment Enclosed, Payment to Merchant, Refund from Merchant, Third Party Bill Payment Return, Special Purchase]  
            Valid Values for *** CREDIT when transaction status is Posted.  
            [Sale, Cash Advance, Return, Merchandise Sale Reversal, Cash Advance Reversal, Return Reversal, Merchandise Sale Amount Adjustment, Cash Advance Amount Adjustment, Return Amount Adjustment, Payment, Payment Reversal, Payment Amount Adjustment, Specific Credit Amount Adjustment, Cash Advance Item Charge Refund, Late Charge Refund, Merchandise Finance Charge Refund, Cash Advance Finance Charge Refund, Backdated Payment Adjustment, Merchandise Item Charge Refund, Overlimit Charge Refund, Credit Life Insurance Fee Refund, Backdate Cash Advance and Sales Adjustment, Small Balance Charge-off, Charge Off Total Account, Charge Off Cash Advance Interest, Charge Off Billed Late Charges, Charge Off Merchandise Interest and Service Charges,Charge Off Credit Life Insurance, Charge Off All Finance Charges, Charge Off All Current Cash Advance Interest, Charge Off All Current Merchandise Interest, Charge Off Cycle-to-Date Late Charges,Charge Off Billed Cash Advance Item Charges Charge Off Billed Merchandise Item Charges, Charge Off Billed Overlimit Fees, Charge Off Cycle-to-Date Cash Advance Item Charges, Charge Off Cycle-to-Date Merchandise Item Charges, Charge Off Cycle-to-Date Overlimit Fees, Account Transfer, Finance Charge (item charge), Reserved for restricted use, Reserved for restricted use, Late Charge, Credit Life Insurance Charge, Cash Advance Finance Charge, Merchandise Finance Charge, Overlimit Account Message, Reserved for restricted use, Account Level Processing Strategy Change Message, Reserved for restricted use, Account Balance Details for MULTRAN Accounts, Backdated Cash Advance Finance Charge, Backdated Payment Interest Adjustment, Cash Advance Item Charge, Merchandise Item Charge, Overlimit Charge,Interest Earned or Credit Interest, Service Charge or Statement Charge, Cash Advance Item Charge, Fee or Finance Charge Rebate, Backdated Payment or Cash Advance Adjustment, Skip Payment Certificate Message, Retail Special Details, Airline Itinerary, Special Details, First Data use only.]  
            Below transaction type are for the transaction status Pending or Declined for *** CREDIT.  
            [Authorization adjustment, Activation code notification message for token provisioning via step-up authentication processing, Check authorization approved, Preauthorization request approved, Account status inquiry service or payment account status inquiry, Cash advance authorization approved, Cash advance authorization declined, Cash advance authorization approved by expansion, Override declined cash advance, Cash advance authorization approved by positive identification, Cash referral, Cash advance authorization approved by name, Cash advance authorization manually declined, Duplicate authorization, Cash authorization approved without issuer contact, Check authorization declined, Merchandise authorization approved without issuer contact, Preauthorization request denied, Balance inquiry approved, Issuer’s adjustment, Reserved for restricted use, Check system error - declined, Return posted check, Merchandise authorization approved, In-store return, Merchandise authorization declined, Merchandise authorization approved by expansio, Right-time payment, Override declined merchandise authorization, Merchandise authorization approved by positive identification, Right-time pay/reversal, Merchandise referral, Merchandise authorization approved by name, Merchandise authorization manually declined, Permanent authorization request, Pay unposted check, Visa and Mastercard person-to-person payment transaction reversal, Visa and Mastercard person-to-person payment transaction decline, Permanent authorization adjustment, Merchandise return adjustment,Merchandise return declined, Merchandise return approved, Merchandise return adjustment declined, Return unposted check, Account status check via a token provisioning request resulted in an approved response, Token provision decision,Token maintenance, such as activation, deactivation, suspension, exception, or replacement, Token has been granted, linked to the cardholder account, and provisioned, Private label ETC return posted at the time of return, Manual override cash advance authorization, Manual override merchandise authorization.]  
          example: WITHDRAWAL
        messageType:
          type: string
          description: |
            This is the combination of Numeric code and description of the message type. Message type is the message done on the transaction activities.  
            For the valid codes below are the values  
            - 100- Pre-Auth Request  
            - 102- Pre-Auth Reversal  
            - 110- Preauthorization  
            - 120- Pre-Auth Stand In  
            - 121- Pre-Auth Adv Repeat  
            - 130- Auth Advice Resp  
            - 200- Request  
            - 202- Auth Reversal  
            - 210- Auth/Completion  
            - 220- Forced Completion  
            - 221- Advice Repeat  
            - 230- Advice Response  
            - 320- Batch Upload  
            - 330- Batch Upload Resp  
            - 420- Reversal  
            - 421- Advice Rev Repeat  
            - 430- Reversal Response  
            - 500- Batch Settl Request  
            - 510- Batch Settl Resp  
            - 800- Network Mgmt Req  
            - 810- Network Mgmt Resp  
            - 820- Network Mgmt Advice  
          example: 210 - Auth/Completion
        transactionStatus:
          type: string
          description: Status of the transaction.APPROVED,DECLINED and REVERSED for Debit - DECLINED - APPROVED - REVERSED
          example: DECLINED
        responseCode:
          type: string
          description: This field represents authorization response ;approval code or denial code
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code.
          example: APPROVED - WITH BALANCES
        terminalFILogo:
          type: string
          description: Terminal FI Logo
          example: ABCD
        cardFILogo:
          type: string
          description: Card FI Logo
          example: ABCD
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        merchantCountry:
          type: string
          description: Country where the terminal is located
          example: USA
    AcquirerInfo:
      type: object
      properties:
        merchantName:
          type: string
          description: Merchant that acquired the POS transaction.
        merchantId:
          type: string
          description: Merchant identification number where the transaction originated.
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
        terminalStreet:
          type: string
          description: Street address where the terminal is located.
        terminalCityAndState:
          type: string
          description: |
            Terminal City and State  
            AL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  
            CA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  
            FM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  
            FL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI Hawaii  
            ID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  
            LA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  
            MD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  
            MO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey  
            NM New Mexico | NY New York | NC North Carolina | ND North Dakota  
            MP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  
            OH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  
            PA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  
            SC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  
            VT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  
            WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming  
          example: NY
        merchantCountry:
          type: string
          description: Country where the merchant is located.
          example: USA
        merchantCategoryCode:
          type: string
          description: Type of merchant acquiring a transaction.
          example: "6011"
        pointOfService:
          type: string
          description: |
            Indicates the type of device used to acquire the transaction or the purpose of the transaction.  
            002  ON-PREMISE  
            004  ELECTRONIC CASH REGISTER  
            006  PRE-AUTHORIZED REQUEST  
            007  PRE-AUTHORIZED REQUEST-NO PIN  
            014  GENERIC  
            051  VERIFICATION OF FUNDS  
            054  GAS PUMP  
            062  OFF-PREMISE  
            064  SCRIP DISPENSE  
            072  RETAIL  
            074  ADMINISTRATIVE  
            081  PAYIT OR BANKIT TRANSACTION (ITP)  
            086  PIN, NO TRACK2  
            087  MERCHANT AUTHORIZED TRANSACTION  
            088  PAPER CAPTURE  
            089  TRACK READ (PAN AND EXP), NO PIN  
            090  NO PIN, NO TRACK2  
            091  NO PIN, TRACK2  
            092  INTERNATIONAL  
            094  SHARED BRANCH STAND ALONE  
            096  SHARED BRANCH FRANCHISE  
            097  SHARED BRANCH OUTLET  
          example: 002 - ON-PREMISE
    RiskInfo:
      type: object
      properties:
        enfactRealTimeScore:
          type: string
          description: The real time score associated with a transaction during authorization.
        enfactRealTimeDecision:
          type: string
          description: |
            EnFact authorization recommendation based on an EnFact fraud rule assigned during authorization.  
            A - Approve  
            D - Deny  
            T - Timed Out  
            E - Error  
            U - Falcon Server Unavailable  
            R - Deny - Retain Card  
            X - Engin to Falcon Timeout  
            S - Stop Sending to Falcon  
        enfactNearTimeScore:
          type: string
          description: EnFact Near Time/Case Management Score. EnFact predictive model score assigned to the transaction after authorization.
        enfactRecommendation:
          type: string
          description: Identifies if the EnFact rules denied the transaction.
        networkScore:
          type: string
          description: ' - Visa - Mastercard - Pulse - star '
        transactionBlockerResult:
          type: string
          description: |
            Identifies how the transaction was handled by TranBlocker.  
            0 Not Checked  
            1 Timeout  
            2 Successful  
            3 Denote and Continue  
            4 Deny  
            5 Retain  
        ruleManagerRecommendation:
          type: string
          description: |
            RuleManager transaction recommendation sent back to the authorization platform.  
            C - Continue  
            D - Deny  
            E - Error  
            O - Offline for Maintenance  
            P - Pass  
            R - Deny and Retain  
            T - Timeout  
    TokenAndEmvInfo:
      type: object
      properties:
        tokenTransaction:
          type: string
          description: Token Transaction. A tokenized payment transaction uses a token PAN that is an alternate 13- to 19-digit value provisioned for the real or true PAN. The real PAN is the card number assigned by the FI. For token provisioning transactions, this field is not applicable and the value is always N.
        wallet:
          type: string
          description: Wallet details. Possible values Apple pay - Google Pay - Samsung pay - Fitbit Pay - Garmin pay.
        emvTransaction:
          type: string
          description: Indicates if it is an EMV transaction. Possible values Yes or No.
        emvCard:
          type: string
          description: Indicates if the card used in the transactation is EMV. Possible values Yes or No.
        emvTerminal:
          type: string
          description: Indicates if the terminal is EMV capable. Possible values Yes or No.
        emvFallback:
          type: string
          description: Indicates if the transaction is EMV fallback. Possible values Yes or No.
    NetworkInfo:
      type: object
      properties:
        network:
          type: string
          description: Identifies the network that routed the transaction.
        secureEci:
          type: string
          description: Electronic commerce indicator (ECI) provides network information regarding the security level and authentication method used for an electronic commerce transaction.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal.
    AmountDetails:
      type: object
      properties:
        transactionNetAmount:
          type: string
          description: Requested amount presented to the FI, or the amount approved if partially approved, regardless of the.
        cashbackAmount:
          type: string
          description: Amount of cash returned to a cardholder during a transaction.
        surchargeAmount:
          type: string
          description: Amount of the ATM-level surcharge assessed by the terminal owner for the transaction.
        surchargeReservalAmount:
          type: string
          description: Surcharge amount to settlement of the original nonreversal transaction.
    GeneralDetails:
      type: object
      properties:
        journalDateTime:
          type: string
          description: System assigned timestamp in Eastern Time.
          format: date-time
        responseDetails:
          type: string
          description: Details about response received for transaction.
        reversalCode:
          type: string
          description: The reason for a reversal.
        transactionProcessingCode:
          type: string
          description: Indicates the specific transaction (action taken), the From account, and the To account.
        toAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Savings
        toAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        fromAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Checking
        fromAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        productType:
          type: string
          description: Product Type - ATM or POS.
        depositType:
          type: string
          description: Indicates if the deposit is a check, cash, or mixed deposit.
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.
        transactionStatus:
          type: string
          description: Indicates status of transactions.
        transactionType:
          type: string
          description: Indicates the type of transaction.
    UpdateCardStatusRequest:
      title: CardStatusUpdateRequest
      required:
        - cardNumber
        - cardStatus
        - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, between 15 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If not specified, defaults to 0.
          example: "0"
        cardStatus:
          type: string
          description: Status of card.  Valid values for Debit -  ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATION, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL.  Refer to statusReasonCode field description for updating the status.
          example: CAPTURE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values for Debit - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit - STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: LOST
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
            - NONE_SUSPECTED
            - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
    UpdateCardStatusRequestV2:
      title: CardStatusUpdateRequest
      required:
        - cardStatus
        - statusReasonCode
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used.

            Card number length can be between 16 and 19
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            ### Non-transactional token associated to a card.
            Either cardNumber or Non-transactional token must be included in the request. If both are included, only cardNumber will be used 

            Non-transactional token length can be between 16 and 19
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: |
            ### Determines the format of Card number and/or Non-Transactional Token in the response.  
            Possible values are
            
            **MASKED_CARD_ONLY** - Masked Card.
            
            **FULL_CARD_ONLY** - Full Card.
            
            **TOKEN_ONLY** - Non-Transactional Token.
            
            **MASKED_CARD_AND_TOKEN** - Both Masked Card and Non-Transactional Token.
            
            **FULL_CARD_AND_TOKEN** - Both FULL Card and Non-Transactional Token.
          example: MASKED_CARD_ONLY
          enum:
            - MASKED_CARD_ONLY
            - FULL_CARD_ONLY
            - TOKEN_ONLY
            - MASKED_CARD_AND_TOKEN
            - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder. Applies to debit cards only.
          format: numeric
          example: "0"
        cardStatus:
          type: string
          description: |
            ### Status of card.
            **Possible values for debit**
            ACTIVE,CAPTURE,DEACTIVATE,ISSUED,RESTRICTED
            **Possible values for Credit**
            BLOCKED_FROM_AUTHORIZATION,NOT_ACTIVE, LOST_OR_STOLEN,FRAUD_DETECTED,NORMAL
            ### Refer to statusReasonCode field description for updating the status.
          example: CAPTURE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: |
            ### Indicates the reason code associated to the card status.
            **Possible values for debit**
            LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST
            ###  One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE
            ### All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            ### Keep this field as NONE when updating to any other statuses.
            **Possible values for Credit**
            STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI**
          example: LOST
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
            - NONE_SUSPECTED
            - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
          example: Cardholder claims that it's not an authorized transaction.
    SearchCardStatusRequest:
      title: CardStatusSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.
            Either cardNumber or nonTransToken must be included in the request. If both are included, only cardNumber will be used.

            Card number length can be between 16 and 19
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            ### Non-transactional token associated to a card.
            Either cardNumber or Non-transactional token must be included in the request.If both are included, only cardNumber will be used 

            Non-transactional token length can be between 16 and 19
          format: alphanumeric
          example: piUVBJKZGfks4000
        responseFormat:
          type: string
          description: |
            ### Determines the format of Card number and/or Non-Transactional Token in the response.  
            Possible values are
            
            **MASKED_CARD_ONLY** - Masked Card.
            
            **FULL_CARD_ONLY** - Full Card.
            
            **TOKEN_ONLY** - Non-Transactional Token.
            
            **MASKED_CARD_AND_TOKEN** - Both Masked Card and Non-Transactional Token.
            
            **FULL_CARD_AND_TOKEN** - Both FULL Card and Non-Transactional Token.
          example: MASKED_CARD_AND_TOKEN
          enum:
            - MASKED_CARD_ONLY
            - FULL_CARD_ONLY
            - TOKEN_ONLY
            - MASKED_CARD_AND_TOKEN
            - FULL_CARD_AND_TOKEN
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder. Applies to debit cards only
          format: numeric
          example: "0"
    UpdateCardStatusResponseV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Card number length can be between 16 and 19
          format: numeric
          example: 400010xxxxxx4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19
          format: alphanumeric
          example: piUVBJKZGfks4000
        cardStatus:
          type: string
          description: |
            ### Status of card.
            **Possible values for debit**
            ACTIVE,CAPTURE,DEACTIVATE,ISSUED,RESTRICTED
            **Possible values for Credit**
            BLOCKED_FROM_AUTHORIZATION,NOT_ACTIVE, LOST_OR_STOLEN,FRAUD_DETECTED,NORMAL
            ### Refer to statusReasonCode field description for updating the status.
          example: CAPTURE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: |
            ### Indicates the reason code associated to the card status.
            **Possible values for debit**
            LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST
            ###  One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE
            ### All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.
            ### Keep this field as NONE when updating to any other statuses.
            **Possible values for Credit**
            STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI
          example: LOST
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
    SearchCardStatusResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of primary cardholder. Card number length can be between 16 and 19
          example: 400010xxxxxx4000
        nonTransToken:
          type: string
          description: Non-transactional token associated to a card. Non-transactional token length can be between 16 and 19
          format: alphanumeric
          example: 'piUVBJKZGfks4000 '
        cardStatus:
          type: string
          description: |
            ### Status of card.
            **Possible values for debit**
            ACTIVE,CAPTURE,DEACTIVATE,ISSUED,RESTRICTED
            **Possible values for Credit**
            BLOCKED_FROM_AUTHORIZATION,NOT_ACTIVE, LOST_OR_STOLEN,FRAUD_DETECTED,NORMAL
            ### Refer to statusReasonCode field description for updating the status.
          example: CAPTURE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: |
            ### Indicates the reason code associated to the card status.  
            **Possible values for debit**  
            LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST  
            ###  One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE  
            ### All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE.  
            ### Keep this field as NONE when updating to any other statuses.  
            **Possible values for Credit**  
            STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI  
          example: LOST
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
    CardTokenRequest:
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          minLength: 16
          maxLength: 19
          description: Card number, between 16 to 19 digits.
          example: "4000100020003000"
    PinRequest:
      required:
        - jwt
        - pin
      type: object
      properties:
        pin:
          maxLength: 4
          minLength: 4
          type: string
          description: PIN to be set for a given card number. Only numerics are allowed. No repetitive characters 3 times in a row like 111X, X333, 1111, 2222. No sequential characters (even backwards) 0123, 1234, 2345, 6543. 3210.
          example: "2938"
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardTokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardholderSearchRequest:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        ssnOrTaxId:
          type: string
          description: Full SSN or Tax ID of a cardholder. Pass exactly 9 digits for this field. Allow dash as a special character.
          example: "123005678"
        accNumber:
          type: string
          description: Account Number
          example: "123456789"
        phone:
          type: string
          description: Cell phone number or home phone number or work phone number.
          example: "1005550001"
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastName:
          type: string
          description: Last name of the customer.
          example: Smith
        lastFourSsnOrTaxId:
          type: string
          description: The last four digits of the ssn/taxid number. Applies to debit cards only.
          example: "5678"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, accountNumber, ssnOrTaxId, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchRequestV2:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder.  
            Either cardNumber or nonTransToken must be included in the reques.If both are included, only cardNumber will be used.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            ### Non Transactional token associated to a card.
            Either cardNumber or nonTransToken must be included in the reques.If both are included, only cardNumber will be used.
          format: numeric
          example: piUVBJKZGfks4000
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        accountNumber:
          type: string
          description: Identifies account of the cardholder
          example: "123456789"
        phone:
          type: string
          description: Cell phone number or home phone number or work phone number.
          example: "0005550000"
        emailAddress:
          type: string
          description: email address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        zipCode:
          type: string
          description: ZipCode
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccountNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastName:
          type: string
          description: Last name of the customer.
          example: Doe
        lastFourTaxIdOrSsn:
          type: string
          description: The last four digits of the ssn/taxid number. Applies to debit cards only.
          example: "5678"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, accountNumber, ssnOrTaxId, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchResponse:
      title: CardholderSearchResponse
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseV2:
      title: CardholderSearchResponse
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetailsV2'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseWarning:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderSearchResponseWarningV2:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetailsV2'
        warningInfo:
          $ref: '#/components/schemas/WarningV2'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderCardsDetails:
      title: CardholderCardsDetails
      required:
        - cardholderCardsDetails
        - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholder'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCard'
    CardholderCardsDetailsV2:
      title: CardholderCardsDetails
      required:
        - cardholderCardsDetails
        - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholderV2'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCardV2'
    CHCardholder:
      type: object
      properties:
        cardholderName:
          type: string
          description: Cardholder name
          example: Doe, John H
    CHCardholderV2:
      type: object
      properties:
        cardholderName:
          type: string
          description: Name of the cardholder.
          example: Doe, Jessie H
    CHCard:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '["123456789","987654321"]'
          items:
            type: string
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. Valid values are from 0-9.
          example: "0"
        cardStatus:
          type: string
          description: Card Status
          example: NORMAL
          enum:
            - BLOCK_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
            - ACTIVE
            - DIGITAL
            - ISSUED
            - RESTRICTED
            - CAPTURE
            - DEACTIVATED
        cardType:
          type: string
          description: Card type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association party. This applies only for Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
            - GUARANTOR_OR_CO-SIGNER
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        phone:
          type: string
          description: Cell phone number, work phone number, or home number.
          example: "1005550001"
        cellPhone:
          type: string
          description: Represents cell phone number of cardholder.
          example: "1005550001"
        homePhone:
          type: string
          description: Represents home phone number of cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Represents work phone number of cardholder.
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. The max length is 10.
          example: "1005550001"
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        expiryDate:
          type: string
          description: Card expiry date
          format: MMYY
          example: "1023"
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example.com
    CHCardV2:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: 4000200030004000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non Transactional token associated to a card.
          format: numeric
          example: piUVBJKZGfks4000
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '["123456789","987654321"]'
          items:
            type: string
        memberNumber:
          type: string
          description: Member number of the cardholder.
          maxLength: 1
          example: "0"
        cardStatus:
          type: string
          description: Card Status
          example: NORMAL
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values for Debit - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit - STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: LOST
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
            - NOT_ACTIVATED
            - ACTIVATED
            - ACTVN_BEFORE_AVAILABLE_DATE
            - CARD_RECORD_NOT_FOUND
            - CARD_LOST_OR_STOLEN
            - CARD_CLOSED
            - NO_ACTIVATION_REQUIRED
            - ACTIVATION_REQUIRED
            - EXP_DATE_NOT_MATCH
            - ALREADY_ACTIVATED
            - ATTEMPT_AFTER_DEADLINE
            - MAX_ATTEMPTS_EXCEEDED
            - CALLER_ID_INVALID
            - ACTIVATION_CODE_INVALID
            - PIN_CHECK_NOT_PERFORMED
            - INVALID_ACTIVATION_METHOD
            - IVR_AUTH_FAILED
        cardType:
          type: string
          description: Card type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: DEBIT
          enum:
            - CREDIT
            - DEBIT
            - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association party. This applies only for Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
            - GUARANTOR_OR_CO-SIGNER
        zipCode:
          type: string
          description: ZipCode
          example: "12345"
        phone:
          type: string
          description: Cell phone number or home phone number or work phone number.
          example: "0005550000"
        cellPhone:
          type: string
          description: Cellphone number
          example: "1005550001"
        homePhone:
          type: string
          description: Home phone number
          example: "1005550001"
        workPhone:
          type: string
          description: Work phone number
          example: "1005550001"
        textAddress:
          type: string
          description: Cardholder’s text address where Card Services sends Risk Alerts.
          example: "0005550000"
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: "10/23"
        emailAddress:
          type: string
          description: Cardholder's email address where Card Services sends Risk Alerts.
          format: email
          example: jdoe@example.com
    AddCardDetailsResponse:
      required:
        - association
      type: object
      properties:
        cardNumber:
          type: string
          description: New Card number generated. Value is masked.
          example: 400010xxxxxx3000
        nonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transactional token generated and associated to each card number
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: The type of the card. Possible values Debit or Credit.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Fiserv for the selected institution.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.If the member number is not passed it will be defaulted to 0
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: The month and year the previously issued card, for this cardholder record, expired.
          format: MM/YY
          example: "10/23"
        cardStatus:
          type: string
          description: Status of card. Valid values for Debit - ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATION, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL. Refer to statusReasonCode field description for updating the status.
          example: ACTIVE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        producePlasticIdentifier:
          type: string
          description: This field  indicates whether a new plastic was generated when a card is marked Lost/Stolen.
          example: "Y"
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values for Debit - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit - STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: Lost
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - APPLIED_BY_IDV
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
        association:
          type: string
          description: This will specify the user type association.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: the Role type code of a customer.primary - 01, Secondary-02, Auth user-03
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such  as card stock, withdrawal limits, or processing days.
        memberSinceDate:
          type: string
          description: Displays current month and year based on the card prefix set  up for the cardholder.
          format: MM/YY
          example: "03/22"
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued
          example: "0"
        maxAuthorizationPerDayCount:
          type: integer
          description: Maximum Number of Card level total Authorizations allowed per day.
        branch:
          maxLength: 4
          type: string
          description: Number that FI/institution assigns to identify a specific branch.The default value is 0000.
          example: "0000"
        emvCard:
          type: string
          description: This indicates the type of card.
          enum:
            - CONTACT
            - CONTACTLESS
            - "false"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic.
          example: "00"
        reissuePerCardClass:
          type: string
          description: Reissue of the new  card depending on the cardclass.
        updaterServiceOptOut:
          type: string
          description: Information—Primarily used when the cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. If the cardbase does not participate in AUS, the fields can be blank. The fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system. This sub-entity applies just for Debit until Omha implement this functionality.
          example: "true"
          enum:
            - "true"
            - "false"
        cardPINInfo:
          $ref: '#/components/schemas/AddCardPINInfoResponse'
        priorCardInformation:
          $ref: '#/components/schemas/AddPriorCardInfoResponse'
        cardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/AddCardholderAddressResponse'
    AddCardholderAddressResponse:
      title: Address
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false
          example: false
        addressLine1:
          type: string
          description: Address Line 1.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Address Line 2.
          example: Apt 100
        addressLine3:
          type: string
          description: Address Line 3. Optional.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Address Line 4. Optional.
          example: AVENUE
        city:
          type: string
          description: Name of City.
          example: Newark
        country:
          type: string
          description: Country code for Address.
          example: US
        state:
          type: string
          description: Name of state. For Credit. For credit, state values are applicable only for USA
          example: New Jersey
        zipCode:
          type: string
          description: Zipcode for  Address.
          example: 12345
        addressType:
          type: string
          description: Defines if the address is Primary,Alternate for Debit. For Credit the following enum values are applicable.
          example: PLASTIC
          enum:
            - PLASTIC
            - BILLING
            - STATEMENT
            - LETTERS
            - PRIMARY
            - ALTERNATE
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
            - TEMPORARY
            - PERMANENT
            - REPEATING
        beginDate:
          type: string
          description: Date from when the address is valid. For credit cards only.
          format: date
          example: "2021-08-03"
        endDate:
          type: string
          description: Date until the address is valid. For credit cards only.
          format: date
          example: "2022-08-03"
        cardMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the card. The indicator can be set for either the primary or the alternate address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the pin. The indicator can be set for either the primary or the alternate address.
          example: false
    AddCardPINInfoResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card,defaults to 0000,should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: Date on which PIN offset was last modified.
          format: date
          example: "2014-10-02"
    AddCardholderNameResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Cardholder name
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: This is a conditional field and it is applicable for Credit and Debit.For Credit- Embossed Line 4 or ID used to add photo image to card.Valid Values are:A-Z 0-9 & (Ampersand),(Comma)/(Forward Slash)(Apostrophe)-(Hyphen,minus symbol)(Period)For Debit:Additional embossed text,example-a corporation name,that appears on the card below the name.Based on your institution’s setup,this field may or may not display
          example: Home Team
        photoId:
          type: string
          description: Based on the card setup this field may or may not display. It is applicable for Debit.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product,which enables institutions to use card collection plastics in place of custom stock.This is a conditional field and applicable for Debit only.The field has format of 3 digits preceeded by PM
          example: PM001
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder.For debit only.
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.The field is for Debit only.
          example: CARD
          enum:
            - NONE
            - CARD
            - PIN
            - CARD_AND_PIN
        specialHandling:
          type: string
          description: Only for credit. Identifies how the replacement card will be delivered to the cardholder. Following enum values are the applicable ones.
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    AddAccountResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Represent the account number identifier.
          example: 123456789
        accountType:
          type: string
          description: Account type. This applies for Credit and Debit. Valid values for  Credit- C-Control, I-Individual Pay,S-Sub-Account, Consumer. Valid values for Debit- SAVINGS, CHECKING, CREDIT, IRA, NOW, MONEY_MARKET, CREDIT_LINE, INSTALLMENT_LOAN,MORTGAGE_LOAN
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account. This applies only for Debit
          example: Main account
        primaryAccount:
          type: string
          description: Will define if Account is Primary or not. Possible values Yor N. This applies only for Debit.
          example: "Y"
        accountStatus:
          type: string
          description: Account status, for example Active, Closed. This applies only for Debit.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - RESTRICTED
            - INACTIVE
    AddContactInfoResponse:
      type: object
      properties:
        homePhone:
          type: string
          description: This indicates the home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work telephone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile telephone number of the primary account owner.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the primary account owner.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email Address of the customer
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: xxxxx5678
        taxIdType:
          type: string
          description: This is a flag which tells which value to updated - SSN or EIN number.This is a credit only field. Possible values - SSN or EIN
          example: EIN
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example- Driver's license number.
        motherMaidenName:
          type: string
          description: Mother Maiden Name
          example: JONES
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
            - SOCIAL_SECURITY_NUMBER
            - MOTHERS_MAIDEN_NAME
            - BIRTH_DATE
            - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: |
            SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  
            MOTHERS_MAIDEN_NAME should be less than or equal to six characters.  
            BIRTH_DATE format MM/DD/YYYY  
            USER_SELECTED_SECURITY_CODE One to six characters.  
    CreditCardholderAddressRequest:
      title: Address
      required:
        - addressLine1
        - addressLine2
        - addressType
        - city
        - country
        - state
        - zipCode
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false
          example: false
        addressLine1:
          type: string
          description: Address Line 1.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Address Line 2.
          example: Apt 100
        addressLine3:
          type: string
          description: Address Line 3.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Address Line 4.
          example: AVENUE
        city:
          type: string
          description: Name of city.
          example: Newark
        country:
          type: string
          description: Country code for address.
          example: US
        state:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: New Jersey
        zipCode:
          type: string
          description: Zipcode for Address.
          example: 12345
        addressType:
          type: string
          description: The type of address. Following are the valid values. Type 'BILLING' is applicable for any of the cardholders.  - primary, secondary and authorized. Types 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.
          example: PLASTIC
          enum:
            - PLASTIC
            - BILLING
            - STATEMENT
            - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
            - TEMPORARY
            - PERMANENT
            - REPEATING
        beginDate:
          type: string
          description: Displays the date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
          example: "2021-08-03"
        endDate:
          type: string
          description: Displays the date till which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
          example: "2022-08-03"
    DebitCardholderAddressRequest:
      title: Address
      required:
        - addressLine1
        - addressType
        - city
        - country
        - state
        - zipCode
      type: object
      properties:
        addressLine1:
          type: string
          description: Address Line 1.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Address Line 2.
          example: Apt 100
        city:
          type: string
          description: Name of City.
          example: Newark
        country:
          type: string
          description: Country code for Address.
          example: US
        state:
          type: string
          description: Name of state.
          example: New Jersey
        zipCode:
          type: string
          description: Zipcode for address.
          example: 12345
        addressType:
          type: string
          description: Defines if the address is primary or alternate.
          example: PRIMARY
          enum:
            - PRIMARY
            - ALTERNATE
        cardMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the card. The indicator can be set for either the primary or the alternate address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the pin. The indicator can be set for either the primary or the alternate address.
          example: false
    CreditPINInfo:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card,defaults to 0000,should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder
          example: "4"
    DebitPINInfo:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card,defaults to 0000,should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: Date on which PIN offset was last modified.
          format: date
          example: "2014-10-02"
    CreditOnly:
      required:
        - association
        - cardStatus
        - cardStock
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued
          example: "00"
        cardStatus:
          type: string
          description: |
            Status of card. Refer to statusReasonCode field description for updating the status.
          enum:
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
          example: NORMAL
        statusReasonCode:
          type: string
          description: Valid Values are - STOLEN, LOST, TEMP_BLOCK_BY_FI, FRAUD, NORMAL, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: NORMAL
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
        association:
          type: string
          description: This will specify the user type association.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: the Role type code of a customer. For primary - 01, Secondary-02, Auth user-03
          example: "02"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditPINInfo:
          $ref: '#/components/schemas/CreditPINInfo'
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressRequest'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderName'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfo'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccount'
    DebitOnly:
      required:
        - cardStatus
      type: object
      properties:
        cardStatus:
          type: string
          description: Status of card. Valid values are - ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Refer to statusReasonCode field description for updating the status.
          example: ACTIVE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values are - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
            - REVOKED
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.If the member number is not passed it will be defaulted to 0.
          example: "0"
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: The month and year the previously issued card, for this cardholder record, expired.
          format: MM/YY
          example: "10/23"
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
        memberSinceDate:
          type: string
          description: Displays current month and year based on the card set up for the cardholder.
          format: MM/YY
          example: "03/22"
        branch:
          maxLength: 4
          type: string
          description: Number that FI/institution assigns to identify a specific branch.The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: string
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: Yes
          enum:
            - Yes
            - No
        updaterServiceOptOut:
          type: string
          description: Information—Primarily used when the cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. If the cardbase does not participate in AUS, the fields can be blank. The fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system. This sub-entity applies just for Debit until Omha implement this functionality.
          example: Yes
          enum:
            - Yes
            - No
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfo'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfo'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardholderAddressRequest'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderName'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfo'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccount'
    CreditAssociatedAccount:
      title: Account
      required:
        - accountNumber
      type: object
      properties:
        accountNumber:
          type: string
          description: Represent the account number identifier.
          example: "123456789"
        accountType:
          type: string
          description: Account type. Valid values- C-Control, I-Individual Pay,S-Sub-Account, Consumer.
          example: Individual
        accountStatus:
          type: string
          description: Account status, for example Active, Closed.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - INACTIVE
    CreditContactInfo:
      type: object
      properties:
        allowVoiceCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through phone
          example: false
        allowTextCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through text.
          example: false
        homePhone:
          type: string
          description: This indicates the home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work telephone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile telephone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email Address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        taxIdType:
          type: string
          description: This is a flag which tells which value to updated - SSN or EIN number. Valid values are - SSN or EIN
          example: EIN
        motherMaidenName:
          type: string
          description: "Mother's Maiden Name"
          example: RAMOS
      description: Contact Information of the cardholder. One of the phone numbers among homePhone,workPhone and cellPhone is required.
    DebitAssociatedAccount:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Represent the account number identifier.
          example: "123456789"
        accountType:
          type: string
          description: Account type. Valid values are - SAVINGS, CHECKING, CREDIT, IRA, NOW, MONEY_MARKET, CREDIT_LINE, INSTALLMENT_LOAN, MORTGAGE_LOAN
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Will define if Account is Primary or not. Possible values Y or N.
          example: "Y"
        accountStatus:
          type: string
          description: Account status, for example Active, Closed.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - RESTRICTED
            - INACTIVE
    DebitContactInfo:
      type: object
      properties:
        homePhone:
          type: string
          description: This indicates the home phone number of the  cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work telephone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: 'Mobile telephone number of the cardholder. '
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email Address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example- Driver's license number.
        motherMaidenName:
          type: string
          description: "Mother's Maiden Name"
          example: RAMOS
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
            - SOCIAL_SECURITY_NUMBER
            - MOTHERS_MAIDEN_NAME
            - BIRTH_DATE
            - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: |
            SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  
            MOTHERS_MAIDEN_NAME should be less than or equal to six characters.  
            BIRTH_DATE format MM/DD/YYYY  
            USER_SELECTED_SECURITY_CODE One to six characters.  
          example: Smith
      description: Contact Information of the cardholder. One of the phone numbers among homePhone, workPhone and cellPhone is required.
    CreditCardholderName:
      title: CardholderName
      required:
        - specialHandling
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Embossed Line or ID used to add photo image to card.Valid Values are:A-Z 0-9 & (Ampersand),(Comma)/(Forward Slash)(Apostrophe)-(Hyphen,minus symbol)(Period).
          example: Home Team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder. Following enum values are the applicable ones.
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
    DebitCardholderName:
      title: CardholderName
      required:
        - cardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text,example-a corporation name,that appears on the card below the name.Based on your institution’s setup,this field may or may not display
          example: Home Team
        photoId:
          type: string
          description: enables financial institutions to place cardholder photographs on their cards.This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceeded by PM
          example: PM001
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder.
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          enum:
            - NONE
            - CARD
            - PIN
            - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    NewCardRequest:
      title: NewCardRequest
      required:
        - cardType
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number used while adding a new card.
          example: "4000100020003000"
        nonTransTokenFlag:
          type: boolean
          description: Flag indicates the request is from a tokenized client or not.
          example: true
        responseFormat:
          type: string
          description: |
            ### Determines the format of Card number and/or Non-Transactional Token in the response.  
            Possible values are
            
            **MASKED_CARD_ONLY** - Masked Card.
            
            **FULL_CARD_ONLY** - Full Card.
            
            **TOKEN_ONLY** - Non-Transactional Token.
            
            **MASKED_CARD_AND_TOKEN** - Both Masked Card and Non-Transactional Token.
            
            **FULL_CARD_AND_TOKEN** - Both FULL Card and Non-Transactional Token.
          example: MASKED_CARD_ONLY
          enum:
            - MASKED_CARD_ONLY
            - FULL_CARD_ONLY
            - TOKEN_ONLY
            - MASKED_CARD_AND_TOKEN
            - FULL_CARD_AND_TOKEN
        cardType:
          type: string
          description: Card Type, possible values Debit, or Credit.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: "10/23"
        emvCard:
          type: string
          description: This indicates the type of card.
          enum:
            - CONTACT
            - CONTACTLESS
            - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnly'
        creditOnly:
          $ref: '#/components/schemas/CreditOnly'
    NewCardResponse:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/AddCardDetailsResponse'
        cardholderName:
          $ref: '#/components/schemas/AddCardholderNameResponse'
        contactInfo:
          $ref: '#/components/schemas/AddContactInfoResponse'
        associatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/AddAccountResponse'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    NewCardTemplateRequest:
      title: NewCardTemplateRequest
      type: object
      properties:
        cardClass:
          type: string
          description: Unique identifier that represents a set of client-defined characteristics, such as card stock, withdrawal limits, or processing days.
          example: AAA00
        priorCardNumber:
          maxLength: 19
          type: string
          description: Prior card number of the cardholder, 16 to 19 digits. Optional. When present, used to retrieve a details template. Applies to debit and credit cards.
          example: "4000100020003000"
        priorNonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transactional token generated and associated to each card number
          example: WUPIL5DQTZGM3000
        memberNumber:
          type: string
          description: Member number associated with the card. If the member number is not passed, it defaults to 0.
          example: "0"
        accountNumber:
          type: string
          description: Identifies account of the cardholder. Optional.
          example: "123456789"
        cardType:
          type: string
          description: Card Type, possible values Debit or Credit.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
      description: Used to generate the template to add a card. The request must include one of the fields - cardClass, or priorCardNumber or accountNumber.
    NewCardTemplateResponse:
      title: NewCardTemplateResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number of the cardholder. Value is masked.
          example: 400010xxxxxx3000
        nonTransToken:
          type: string
          description: A 16 to 19 digit Non-Transactional token generated and associated to each card number
          example: WUPIL5DQTZGM3000
        cardType:
          type: string
          description: Card Type, possible values Debit or Credit.
          example: CREDIT
          enum:
            - CREDIT
            - DEBIT
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: "10/23"
        emvCard:
          type: string
          description: This indicates the type of card.
          enum:
            - CONTACT
            - CONTACTLESS
            - "false"
        debitOnly:
          $ref: '#/components/schemas/DebitOnlyTemplateResponse'
        creditOnly:
          $ref: '#/components/schemas/CreditOnlyTemplateResponse'
    CreditCardholderAddressTemplateResponse:
      title: Address
      type: object
      properties:
        isFormattedAddress:
          type: boolean
          description: Indicates if address is an US address or international address. Valid values are true and false. If no value passed, then the default value taken is false
          example: false
        addressLine1:
          type: string
          description: Address Line 1.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Address Line 2.
          example: Apt 100
        addressLine3:
          type: string
          description: Address Line 3.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Address Line 4.
          example: AVENUE
        city:
          type: string
          description: Name of City.
          example: Newark
        country:
          type: string
          description: Country code for Address.
          example: US
        state:
          type: string
          description: Name of state. For credit, state values are applicable only for USA.
          example: New Jersey
        zipCode:
          type: string
          description: Zipcode for Address.
          example: 12345
        addressType:
          type: string
          description: The type of address. Following are the valid values. Type 'BILLING' is applicable for any of the cardholders.  - primary, secondary and authorized. Types 'PLASTIC', 'STATEMENT', and 'LETTER' apply only to the primary cardholder.
          example: PLASTIC
          enum:
            - PLASTIC
            - BILLING
            - STATEMENT
            - LETTERS
        categoryCode:
          type: string
          description: Defines if the address is temporary, permanent or repeating.
          example: TEMPORARY
          enum:
            - TEMPORARY
            - PERMANENT
            - REPEATING
        beginDate:
          type: string
          description: Displays the date from which the address is valid. Mainly used when categoryCode - Permanent, Temporary or Repeating.
          format: date
          example: "2021-08-03"
        endDate:
          type: string
          description: Displays the date till which the address is valid. Mainly used when categoryCode - Temporary or Repeating. For Permanent address, there is a default value of endDate provided.
          format: date
          example: "2022-08-03"
    DebitCardholderAddressTemplateResponse:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: Address Line 1.
          example: 123 Any Street
        addressLine2:
          type: string
          description: Address Line 2.
          example: Apt 100
        city:
          type: string
          description: Name of City.
          example: Newark
        country:
          type: string
          description: Country code for Address.
          example: US
        state:
          type: string
          description: Name of state.
          example: New Jersey
        zipCode:
          type: string
          description: Zipcode for  Address.
          example: 12345
        addressType:
          type: string
          description: Defines if the address is Primary or Alternate.
          example: PRIMARY
          enum:
            - PRIMARY
            - ALTERNATE
        cardMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the card. The indicator can be set for either the primary or the alternate address.
          example: true
        pinMailerIndicator:
          type: boolean
          description: Indicates if the address provided by the user can be used to mail the pin. The indicator can be set for either the primary or the alternate address.
          example: false
    CreditPINInfoTemplateResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card,defaults to 0000,should not be left blank.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder
          example: "4"
    DebitPINInfoTemplateResponse:
      type: object
      properties:
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Defaults to 0000.
          example: "1234"
        maximumPINTriesAllowed:
          type: string
          description: Maximum pin tries allowed for the cardholder
          example: "4"
        pinOffsetChangeDate:
          type: string
          description: Date on which PIN offset was last modified.
          format: date
          example: "2014-10-02"
    CreditOnlyTemplateResponse:
      type: object
      properties:
        plasticsCount:
          maxLength: 2
          type: string
          description: Indicates the number of cards to be issued
          example: "00"
        cardStatus:
          type: string
          description: Status of card. Valid values are - BLOCKED_FROM_AUTHORIZATION, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL. Refer to statusReasonCode field description for updating the status.
          example: NORMAL
          enum:
            - BLOCKED_FROM_AUTHORIZATION
            - NOT_ACTIVE
            - LOST_OR_STOLEN
            - FRAUD_DETECTED
            - NORMAL
        statusReasonCode:
          type: string
          description: Valid Values are - STOLEN, LOST, TEMP_BLOCK_BY_FI, FRAUD, NORMAL, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI.
          example: NORMAL
          enum:
            - LOST_BLOCK_BY_ENFACT
            - FRAUD
            - CLOSED_BY_CUSTOMER
            - REVOKED
            - CLOSED_BY_FI
            - TEMP_BLOCK_BY_FI
            - TEMP_BLOCK_BY_ENFACT
            - TEMP_BLOCK_AGENT
            - DECEASED
            - NORMAL
        association:
          type: string
          description: This will specify the user type association.
          example: PRIMARY
          enum:
            - PRIMARY
            - SECONDARY
            - AUTHORIZED_USER
        customerRoleTypeCode:
          type: string
          description: the Role type code of a customer. For primary - 01, Secondary-02, Auth user-03
          example: "02"
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic.
          example: "00"
        producePlasticIdentifier:
          type: string
          description: Indicates if a new plastic card was generated when a card is marked Lost/Stolen.
          example: "Y"
        creditPINInfo:
          $ref: '#/components/schemas/CreditPINInfoTemplateResponse'
        creditCardholderAddress:
          $ref: '#/components/schemas/CreditCardholderAddressTemplateResponse'
        creditCardholderName:
          $ref: '#/components/schemas/CreditCardholderNameTemplateResponse'
        creditContactInfo:
          $ref: '#/components/schemas/CreditContactInfoTemplateResponse'
        creditAssociatedAccounts:
          $ref: '#/components/schemas/CreditAssociatedAccountTemplateResponse'
    DebitOnlyTemplateResponse:
      type: object
      properties:
        cardStatus:
          type: string
          description: Status of card. Valid values are - ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Refer to statusReasonCode field description for updating the status.
          example: ACTIVE
          enum:
            - ACTIVE
            - CAPTURE
            - DEACTIVATE
            - ISSUED
            - RESTRICTED
        statusReasonCode:
          type: string
          description: Indicates the reason code associated to the card status. Valid values are - LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses.
          example: NONE
          enum:
            - NONE
            - CLOSED
            - CUSTOMER_REQUEST
            - LOST
            - STOLEN
            - ABUSED
            - DAMAGED
            - REVOKED
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.If the member number is not passed it will be defaulted to 0.
          example: "0"
        oldCardExpirationDate:
          maxLength: 5
          type: string
          description: The month and year the previously issued card, for this cardholder record, expired.
          format: MM/YY
          example: "10/23"
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
        memberSinceDate:
          type: string
          description: Displays current month and year based on the card set up for the cardholder.
          format: MM/YY
          example: "03/22"
        branch:
          maxLength: 4
          type: string
          description: Number that FI/institution assigns to identify a specific branch.The default value is 0000.
          example: "0000"
        reissuePerCardClass:
          type: string
          description: Indicates if the expiration date of card will be rolled over to the next expiration date after month end and a new card will be reissued. The value depends on the card setup.
          example: Yes
          enum:
            - Yes
            - No
        updaterServiceOptOut:
          type: string
          description: Information—Primarily used when the cardbase participates in the Account Updater Service (AUS) that allows Fiserv to send payment account data to Mastercard and Visa, in compliance with network requirements for issuers. If the cardbase does not participate in AUS, the fields can be blank. The fields are populated when your institution submits information through the Remote Card Maintenance (RCM) batch file record or it is manually entered in the CM system. This sub-entity applies just for Debit until Omha implement this functionality.
          example: Yes
          enum:
            - Yes
            - No
        debitPINInfo:
          $ref: '#/components/schemas/DebitPINInfoTemplateResponse'
        debitPriorCardInfo:
          $ref: '#/components/schemas/DebitPriorCardInfoTemplateResponse'
        debitCardholderAddress:
          type: array
          items:
            $ref: '#/components/schemas/DebitCardholderAddressTemplateResponse'
        debitCardholderName:
          $ref: '#/components/schemas/DebitCardholderNameTemplateResponse'
        debitContactInfo:
          $ref: '#/components/schemas/DebitContactInfoTemplateResponse'
        debitAssociatedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DebitAssociatedAccountTemplateResponse'
    CreditAssociatedAccountTemplateResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Represent the account number identifier.
          example: "123456789"
        accountType:
          type: string
          description: Account type. Valid values - C-Control, I-Individual Pay,S-Sub-Account, Consumer.
          example: Individual
        accountStatus:
          type: string
          description: Account status, for example Active, Closed.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - INACTIVE
    CreditContactInfoTemplateResponse:
      type: object
      properties:
        allowVoiceCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through phone
          example: false
        allowTextCommunication:
          type: boolean
          description: Consent to Communicate—Consent to contact customer through text.
          example: false
        homePhone:
          type: string
          description: This indicates the home phone number of the primary cardholder/account holder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work telephone number of the primary account owner.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile telephone number of the primary account owner.
          example: "1005550001"
        emailAddress:
          type: string
          description: Email Address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: "123005678"
        taxIdType:
          type: string
          description: This is a flag which tells which value to updated - SSN or EIN number. Valid values are - SSN or EIN
          example: EIN
        motherMaidenName:
          type: string
          description: "Mother's Maiden Name"
          example: RAMOS
    DebitAssociatedAccountTemplateResponse:
      title: Account
      type: object
      properties:
        accountNumber:
          type: string
          description: Represent the account number identifier.
          example: "123456789"
        accountType:
          type: string
          description: Account type. Valid values are - SAVINGS, CHECKING, CREDIT, IRA, NOW, MONEY_MARKET, CREDIT_LINE, INSTALLMENT_LOAN,MORTGAGE_LOAN
          example: CHECKING
        accountDescription:
          type: string
          description: Description of the account.
          example: Main account
        primaryAccount:
          type: string
          description: Will define if Account is Primary or not. Possible values Yor N.
          example: "Y"
        accountStatus:
          type: string
          description: Status of the account.
          example: ACTIVE
          enum:
            - ACTIVE
            - CLOSED
            - INACTIVE
    DebitContactInfoTemplateResponse:
      type: object
      properties:
        homePhone:
          type: string
          description: This indicates the home phone number of the  cardholder.
          example: "1005550001"
        workPhone:
          type: string
          description: Work telephone number of the cardholder.
          example: "1005550001"
        cellPhone:
          type: string
          description: Mobile telephone number of the cardholder.
          example: "1005550001"
        alternateContactName:
          type: string
          description: Indicates the alternate contact name of the cardholder.
          example: Doe, John H
        textAddress:
          maxLength: 16
          minLength: 10
          type: string
          description: Cardholder's phone number to receive text messages/announcements.
          example: "0005550000"
        emailAddress:
          type: string
          description: Email Address of the cardholder
          example: jdoe@example.com
        dateOfBirth:
          type: string
          description: Date of birth of the cardholder.
          format: date
          example: "1990-08-24"
        taxIdOrSsn:
          type: string
          description: Business ID of a business card or the social security number of the primary cardholder.
          example: xxxxx5678
        verificationText:
          type: string
          description: Verification data as requested by the primary cardholder for identification, example- Driver's license number.
        motherMaidenName:
          type: string
          description: "Mother's Maiden Name"
          example: RAMOS
        activationType:
          type: string
          description: Used to activate the card.
          example: MOTHERS_MAIDEN_NAME
          enum:
            - SOCIAL_SECURITY_NUMBER
            - MOTHERS_MAIDEN_NAME
            - BIRTH_DATE
            - USER_SELECTED_SECURITY_CODE
        activationValue:
          type: string
          description: |
            SOCIAL_SECURITY_NUMBER should be less than or equal to four digits.  
            MOTHERS_MAIDEN_NAME should be less than or equal to six characters.  
            BIRTH_DATE format MM/DD/YYYY  
            USER_SELECTED_SECURITY_CODE One to six characters.  
    CreditCardholderNameTemplateResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Embossed Line or ID used to add photo image to card. Valid Values are:A-Z 0-9 & (Ampersand),(Comma)/(Forward Slash)(Apostrophe)-(Hyphen,minus symbol)(Period).
          example: Home team
        specialHandling:
          type: string
          description: Identifies how the replacement card will be delivered to the cardholder. Following enum values are the applicable ones.
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
    DebitCardholderNameTemplateResponse:
      title: CardholderName
      type: object
      properties:
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder. Must use format Last, First MI.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text. Example - a corporation name that appears on the card below the name. Based on your institution’s setup, this field may or may not display
          example: Home team
        photoId:
          type: string
          description: enables financial institutions to place cardholder photographs on their cards. This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceeded by PM
          example: PM001
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder.
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          enum:
            - NONE
            - CARD
            - PIN
            - CARD_AND_PIN
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
    CardOrderSearchRequest:
      required:
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: It identifies your account with the card issuer, and those are the digits you need to provide when making purchases online or by phone. Length is between 16 to 19
          example: "4000100020003000"
        memberNumber:
          type: string
          description: Member Number associated to the card. If the member number is not passed it is defaulted to 0. Applicable only for debit cards.
          example: "0"
    CardOrdersSearchResponse:
      title: CardOrdersSearchResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CardOrderInfo'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    CardOrderInfo:
      title: CardOrderInfo
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020xxxxxx4000
        transactionCode:
          type: string
          description: This field is only for credit. Possible values are - 200 and 194.
          example: "200"
        cardPlasticsCount:
          type: string
          description: Indicates if a plastic card was issued. Applicable for credit cards only.
          example: "00"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card. This field is for credit only.
          example: NONE
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        orderStatus:
          type: string
          description: Order Status displays the status of the order as active, processed, or cancelled.
          enum:
            - ACTIVE
            - PROCESSED
            - CANCELLED
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card setup.
          example: CARD
          enum:
            - NONE
            - CARD
            - CARD_AND_PIN
            - PIN
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder. This field is for debit only.
          example: REGULAR
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        processedDate:
          type: string
          description: Date the order was processed.
          format: date
        orderId:
          type: string
          description: The unique record key for the card order to be updated/cancelled. This field is required for debit only.
          example: "436"
        orderDate:
          type: string
          description: Date the order was placed.
          format: date
        orderReason:
          type: string
          description: Reason for the order.
          example: NEW
          enum:
            - NEW
            - REPLACEMENT
            - ADDITIONAL
        orderedBy:
          type: string
          description: User ID of the person who placed the order.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Fiserv for the selected institution.
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
        lastMaintainanceDate:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: YYYY-MM-DD
        lastMaintainanceTime:
          type: string
          description: Time of last maintenance performed on this cardholder account balance record
          format: HH:mm:ss:ssZ
        cardholderOrderInfo:
          $ref: '#/components/schemas/CardholderName'
        orderAddress:
          $ref: '#/components/schemas/CardOrderAddress'
        cardMiscellaneous:
          $ref: '#/components/schemas/CardMiscellaneous'
    CardholderName:
      title: CardholderName
      type: object
      properties:
        nameSequenceNumber:
          type: string
        cardholderName:
          type: string
          description: Name of the Cardholder. Applies to credit and debit cards.
          example: Doe, John H
        personalizedEmbossingText:
          type: string
          description: This field gives option to emboss personalized text on card to the user.
        photoId:
          type: string
          description: This field is conditional. Based on your institution's setup this field may or may not display. It is applicable for Debit.
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product, which enables institutions to use card collection plastics in place of custom stock.This is a conditional field and applicable for Debit only.The field has format of 3 digits preceeded by PM
        nameSuffix:
          type: string
          description: Cardholder suffix associated with the name.
    CardMiscellaneous:
      title: CardMiscellaneous
      type: object
      properties:
        cardClass:
          type: string
          description: Unique 5-character alphanumeric identifier that represents a client-defined group of cardholders with common characteristics, such as card stock, withdrawal limits, or processing days.
        emv:
          type: string
        pinVendor:
          type: string
        vendor:
          type: string
    CardOrderAddress:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: Line 1 for Address
          example: 2921 CARLISLE BLVD NL
        addressLine2:
          type: string
          description: Line 2 for Address
          example: 2921 CARLISLE BLVD NL
        addressLine3:
          type: string
          description: This is optional field and line 3 for Address is only for credit
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Address Line 4
          example: AVENUE
        city:
          type: string
          description: City name for Address
          example: ALBUQUERQUE
        country:
          type: string
          description: Country code for Address.
          example: BG
        state:
          type: string
          description: This is mandatory field for Credit and Debit. State code for Address.For Credit. For credit, state values are applicable only for USA
          example: NM
        zipCode:
          type: string
          description: 'This is mandatory field for Credit and Debit. Zipcode for Address. Format: XXXXX-XXXX or just the first 5 digits XXXXX'
          example: "87110"
        addressType:
          type: string
          description: Define if the address is primary or alternate.
          enum:
            - PRIMARY
            - ALTERNATE
          example: PRIMARY
      description: Order address. For debit only.
    CardOrderSearchRequestV2:
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder. 
            Possible validations are
            
            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: "4000200010003000"
        nonTransToken:
          type: string
          description: |
            ### Non Transactional token associated to a card.
            Possible Validations are

            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: WUPIL5DQTZGM3000
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
    CardOrdersSearchResponseV2:
      title: CardOrdersSearchResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/CardOrderInfoV2'
    CardOrderInfoV2:
      title: CardOrderInfo
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder.
          format: numeric
          example: 400020xxxxxx3000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non Transactional token associated to a card.
          format: numeric
          example: WUPIL5DQTZGM3000
        transactionCode:
          type: string
          description: Its a specific code provided for each transaction
          example: "200"
          x-Credit/Debit(Appliable): Credit
          x-mandatory(Credit/Debit): Credit
          x-encrypted: "N"
        cardPlasticsCount:
          type: string
          description: Indicates if a plastic card was issued. Applicable for credit cards only.
          example: "00"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card. This field is for credit only.
          example: NONE
          enum:
            - NONE
            - INSTANT_ISSUANCE
            - RUSH_PLASTIC
        orderStatus:
          type: string
          description: Order Status displays the status of the order as active, processed, or cancelled.
          enum:
            - ACTIVE
            - PROCESSED
            - CANCELLED
        rushIND:
          type: string
          enum:
            - "Y"
            - "N"
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup
          example: CARD
          enum:
            - NONE
            - CARD
            - CARD_AND_PIN
            - PIN
          x-Credit/Debit(Appliable): Debit
          x-mandatory(Credit/Debit): Debit-O
        rushType:
          type: string
          description: This field indicates the delivery type to send plastic to the cardholder. This field is for debit only
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        processedDate:
          type: string
          description: Date the order was processed.
          format: date
        orderId:
          type: string
          description: The unique record key for the card order. This field is required for debit only
          example: "436"
          x-mandatory(Credit/Debit): Debit-M
        orderDate:
          type: string
          description: Date the order was placed.
          format: date
        orderReason:
          type: string
          description: Reason for the order.
          example: NEW
          enum:
            - NEW
            - REPLACEMENT
            - ADDITIONAL
        orderedBy:
          type: string
          description: User ID of the person who placed the order.
          example: FGSTETS01
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        logo:
          type: string
          description: Unique 4-character alphanumeric identifier assigned by Card Services for the selected institution.
          example: AH03
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDate:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date
        lastMaintainanceTime:
          type: string
          description: Time of last maintenance performed on this cardholder account balance record
          format: HH:mm
          example: 07:46
        cardholderOrderInfo:
          $ref: '#/components/schemas/CardholderNameV2'
        orderAddress:
          $ref: '#/components/schemas/CardOrderAddressV2'
        cardMiscellaneous:
          $ref: '#/components/schemas/CardMiscellaneousV2'
    CardholderNameV2:
      title: CardholderName
      type: object
      properties:
        nameSequenceNumber:
          type: string
          description: This is the sequence number associated with each cardholder name
          example: "1"
        cardholderName:
          maxLength: 26
          type: string
          description: Name of the cardholder.
          example: Doe, John H
        personalizedEmbossingText:
          maxLength: 26
          type: string
          description: Additional embossed text,example-a corporation name,that appears on the card below the name.Based on your institution’s setup,this field may or may not display
          example: Home team
        photoId:
          type: string
          description: enables financial institutions to place cardholder photographs on their cards.This field may not be available for an EMV chip card.
          example: EFGH
        plasticId:
          type: string
          description: Plastic ID is used for Output Solutions Card Collection product,which enables institutions to use card collection plastics in place of custom stock.The field has format of 3 digits preceeded by PM
          example: PM001
          x-Credit/Debit(Appliable): Debit
          x-mandatory(Credit/Debit): Debit-O
          x-encrypted: "N"
        nameSuffix:
          maxLength: 6
          type: string
          description: Cardholder suffix associated with the name.
          example: JR
          x-Credit/Debit(Appliable): Debit
          x-mandatory(Credit/Debit): Debit-O
          x-encrypted: "N"
    CardMiscellaneousV2:
      title: CardMiscellaneous
      type: object
      properties:
        cardClass:
          type: string
          description: 5-character alphanumeric identifier of the card class selected for the new card.
          example: AAA00
        emv:
          type: string
        pinVendor:
          type: string
        vendor:
          type: string
    CardOrderAddressV2:
      title: Address
      type: object
      properties:
        addressLine1:
          type: string
          description: First line of the cardholder's address
          example: 2921 CARLISLE BLVD NL
        addressLine2:
          type: string
          description: Second line of the cardholder's address.
          example: 2921 CARLISLE BLVD NL
        addressLine3:
          type: string
          description: Third line of the cardholder's address.
          example: LAKE VIEW
        addressLine4:
          type: string
          description: Fourth line of the cardholder's address.
          example: AVENUE
        city:
          type: string
          description: City of the cardholder's address.
          example: NEW YORK
        country:
          type: string
          description: Country associated with the cardholder's address.
          example: USA
        state:
          type: string
          description: State code of the cardholder's address.
          example: NY
        zipCode:
          type: string
          description: Postal code of the cardholder's primary address.
          example: 87110
        addressType:
          type: string
          description: Define if the address is primary or alternate.
          enum:
            - PRIMARY
            - ALTERNATE
          example: PRIMARY
      description: Order address. For debit only.
    OrderResponse:
      type: object
      properties:
        warningInfo:
          $ref: '#/components/schemas/Warning'
    OrderRequest:
      title: OrderRequest
      required:
        - action
        - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          minLength: 16
          maxLength: 19
          description: Card Number of the cardholder for which the order has to be updated or cancelled.
          example: "4000100020003000"
        action:
          type: string
          description: Action to be performed. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
          enum:
            - UPDATE
            - CANCEL
        debitOnly:
          $ref: '#/components/schemas/OrderDebitRequest'
    OrderDebitRequest:
      title: OrderDebitRequest
      required:
        - orderId
      type: object
      properties:
        memberNumber:
          type: string
          description: Member Number associated to the card. If the member number is not passed it is defaulted to 0.
          example: "0"
        orderId:
          type: string
          description: The unique record key for the card order.
          example: "436"
        rushType:
          type: string
          description: This field indicates the type to send plastic to the cardholder.Required when the action is "UPDATE". For action "CANCEL" this field is not applicable
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
      description: Debit only fields required to update or cancel an order. This object is mandatory if the action is Update or Cancel for a debit card.
    OrderResponseV2:
      type: object
      properties:
        card:
          $ref: '#/components/schemas/orderCardResponseV2'
    orderCardResponseV2:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number of primary cardholder
          format: numeric
          example: 400020xxxxxx4000
        nonTransToken:
          maxLength: 19
          minLength: 16
          type: string
          description: Non Transactional token associated to a card.
          format: numeric
          example: WUPIL5DQTZGM3000
        orderId:
          type: string
          description: The unique record key for the card order. This field is required for debit only
          example: 436
        action:
          type: string
          description: Action performed by the API. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
    OrderRequestV2:
      title: OrderRequest
      required:
        - action
      type: object
      properties:
        cardNumber:
          type: string
          description: |
            ### Card number of primary cardholder. 
            Possible validations are
            
            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: "4000200030004000"
        nonTransToken:
          type: string
          description: |
            ### Non Transactional token associated to a card.
            Possible Validations are

            **cardNumber and nonTransToken in Request** - Either cardNumber or nontranstoken should be included in the request not both.
          format: numeric
          example: WUPIL5DQTZGM3000
        orderId:
          type: string
          description: The unique record key for the card order. This field is required for debit only.
          example: "436"
        memberNumber:
          maxLength: 1
          type: string
          description: Member number of the cardholder.
          example: "0"
        action:
          type: string
          description: Action to be performed by the API. The two possible actions are Update order or Cancel order. Update is applicable only for Debit. Cancel is applicable for both debit and Credit. No default.
          example: UPDATE
          enum:
            - UPDATE
            - CANCEL
        rushType:
          type: string
          description: This field indicates the delivery type to send plastic to the cardholder. This field is for debit only
          example: NONE
          enum:
            - NONE
            - REGULAR
            - OVERNIGHT
        orderType:
          type: string
          description: Ordering options for the primary cardholder name based on the card class setup but you can change the order type.
          example: CARD
          default: CARD_AND_PIN
          enum:
            - NONE
            - CARD
            - PIN
            - CARD_AND_PIN
    Warning:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetail'
    WarningDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    WarningV2:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetailV2'
    WarningDetailV2:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    "400Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: Input Validation Exception
        title:
          type: string
          description: Short summary of the problem.
          example: Bad Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: CONTENT-TYPE header required. Supported content-type is application/json
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
    "401Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#unauthorized
        title:
          type: string
          description: Short summary of the problem.
          example: Unauthorized
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: Invalid Access Token
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 401
    "403Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#forbidden
        title:
          type: string
          description: Short summary of the problem.
          example: Forbidden
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: Authorization failure
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 403
    "404Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: Resource does not exists
        title:
          type: string
          description: Short summary of the problem.
          example: Resource Not found
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 404
    "415Error":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#unsupported-mediatype
        title:
          type: string
          description: Short summary of the problem.
          example: Unsupported Media Type
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: unsupported Media Type
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /api/basepath
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 415
    "4xxError":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
    "4xxErrorV2":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
  parameters:
    userIdParam:
      name: userId
      in: header
      description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
      required: false
      style: simple
      explode: false
      schema:
        type: string
      example: johndoe
    authorizationParam:
      name: Authorization
      in: header
      description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
    clientIdParam:
      name: x-fapi-financial-id
      in: header
      description: Required. Provide 8 digit client id
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 12345678
  headers:
    interactionId:
      description: unique transaction ID created for each request for tracking purposes
      style: simple
      explode: false
      schema:
        type: string
        example: 95ad42fb-afd1-2121-b794-3ed29342ks42
  securitySchemes:
    BearerAuth:
      type: http
      description: Enter 'Bearer ' followed by the access token.
      scheme: bearer