---
openapi: 3.0.0
info:
  title: Card
  description: Card API provides the ability to manage a card, digitally display card details, activate cards online through various channels, search for transactions, and search for basic cardholder information using details other than a card number. All times expressed in UTC standard time.
  
  version: 1.7.0
servers:
- url: https://card.api.fiservapps.com/cs/cards
  description: Production url
- url: https://card-sandbox.api.fiservapps.com/cs/cards
  description: Sandbox url
security:
- BearerAuth: []
tags:
- name: Activation
  description: Activate a card instantly, and retrieve current activation status for Debit and Credit cards.
- name: Demographics
  description: Search or set demographic information about cardholders.
- name: Details
  description: Display card activation date and CVV, enabling immediate use after issuance.
- name: Digital Card Display
  description: Display card activation date and CVV, enabling immediate use after issuance."
- name: Limits
  description: Set, search and update card limits for any specified Primary Account Number (PAN).
- name: PIN
  description: Set a pin and reset pin attempts.
- name: Replacement
  description: Order replacements for cards.
- name: Transaction
  description: Search for transactions on a card, retrieving summary or detailed information.
- name: Update Status
  description: Update the status of a card, including deactivating the card.

paths:

  /v1/cards/status:
    put:
      tags:
      - Update Status
      summary: Update the status of a card, including deactivation.
      operationId: CardStatusUpdate
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.m the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678      
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardStatusRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false

  /v1/cards/replacement:
    post:
      tags:
        - Replacement
      summary: Creates an order to replace a card.
      operationId: replaceCard
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: Replacement Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplacementRequest'
        required: true
      responses:
        "204":
          description: Order is placed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplacementResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/transactions/search:
    post:
      tags:
      - Transaction
      summary: Retrieve transaction details of a given card based on the filter criteria passed.  Select summary or detailed responses.
      operationId: getTransactions
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      - name: filter
        in: query
        description: |
          Choose summary or detail response to transaction search. Defaults to summary.
          Summary includes these fields.
            
          acquirerRefNum  
          amtCharged  
          authorizationCode  
          cardNumber  
          eciMastercard   
          eciVisa  
          expirationDateMismatch  
          memberNumber  
          merchantCategoryCode  
          merchantCity   
          merchantName  
          merchantState  
          messageType  
          networkID  
          preAuthAmt  
          pinTransaction  
          posDataInputCapability  
          posDataInputMode  
          responseCode  
          responseCodeDescription   
          sequenceNumber  
          subResponseCode  
          subResponseCodeDescription  
          systemRecordId  
          terminalId   
          transactionAmount  
          transactedCardNumber  
          transactioncode  
          transactionDateTime  
          transactionStatus   
          transactionType  
          unmatchedCompletionFlag    
          
          Detail includes all the transaction fields.

        required: true
        style: form
        explode: true
        schema:
          type: boolean
        example: summary
      requestBody:
        description: searchTransactionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchTransactionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransactionsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/terminalTransactions/search:
    post:
      tags:
        - Transaction
      summary: "This API returns a list of Transactions for the terminal ID based on the filter criteria they passed,This API is applicable only for Debit."
      operationId: getTerminalTransactions
      parameters: 
        
        - $ref: '#/components/parameters/authorizationParam'
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/clientIdParam'
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminalTransactionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminalTransactionsResponse"
        "206":
          description: Partial success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTransactionsResponse'
        "400":
          description: "Invalid Request"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "401":
          description: "Unauthorized access"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "403":
          description: "Forbidden"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "404":
          description: "Not Found"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "405":
          description: Method Not Allowed
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "406":
          description: Unacceptable
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "415":
          description: "Unsupported Media Type"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "422":
          description: "Unprocessable Entity"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "429":
          description: "Too Many Requests"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "500":
          description: "Internal Server Error"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema: 
                type: object
                example: {
                "errorResponse": {
                  "code": "500-01",
                  "message": "internal server error",
                  "developerInfo": {
                    "developerMessage": "internal server error",
                    "moreInfo": "There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)",
                    "messageid": "25557-84290371-1"
                  }
                }
              }
      deprecated: false        
  
  /v1/cards/activations/search:
    post:
      tags:
      - Activation
      summary: Retrieves the activation details of a given card.
      operationId: getCardActivationInfo
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: ActivationSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationSearchRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardActivationResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/activations:
    put:
      tags:
      - Activation
      summary: Force activate a given card.
      operationId: activateCard
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardActivationUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardActivationUpdateRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "409":
          description: Conflict
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/authDetails:
    post:
      tags:
      - Digital Card Display
      summary: Retrieve card expiration date and CVV for the card number.
      operationId: getCardAuthDetails
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: getCardAuthDetailsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDetailsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/token:
    post:
      tags:
      - PIN
      summary: Setting the PIN is a two step process. This operation returns a JWT which is valid for 15 minutes.
      operationId: getCardToken
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenRequest'
      responses:
        "200":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (your unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pin:
    post:
      tags:
      - PIN
      summary: Sets a PIN for a given card. Setting the PIN is a two step process. It requires a JWT from the cardsToken operation for the card for which PIN is to be set. The JWT must be used within 15 minutes.
      operationId: setPin
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1

  /v1/cards/atmPreferences:
    patch:
      tags:
        - Demographics
      summary: This method will update information related to ATM Preferences for one specific card. Applies to debit cards only.
      operationId: updateAtmPreferences
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/clientIdParam'
        - $ref: '#/components/parameters/authorizationParam' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtmPreferencesUpdateRequest'
        required: true
      responses:
        "204":  
          description: Updated 
        
        "400":
          description: "Invalid Request"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "401":
          description: "Unauthorized access"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "403":
          description: "Forbidden"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "404":
          description: "Not Found"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "405":
          description: Method Not Allowed
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "406":
          description: Unacceptable
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "415":
          description: "Unsupported Media Type"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "422":
          description: "Unprocessable Entity"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "429":
          description: "Too Many Requests"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "500":
          description: "Internal Server Error"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema: 
                type: object
                example: {
                "errorResponse": {
                  "code": "500-01",
                  "message": "internal server error",
                  "developerInfo": {
                    "developerMessage": "internal server error",
                    "moreInfo": "There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)",
                    "messageid": "25557-84290371-1"
                  }
                }
              }
      deprecated: false                          
                      
  /v1/cardholders/additionalInfo:  
    patch:  
      tags:  
        - Demographics
      summary: 'This API updates additional information of a Cardholder.'  
      operationId: updateAdditionalInfo 
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/clientIdParam'
        - $ref: '#/components/parameters/authorizationParam' 
      requestBody:  
        content:  
          application/json:  
            schema:  
              $ref: '#/components/schemas/CardsAdditionalInfoUpdateRequest' 
        description: Update Cardholder Additional Info Request 
        required: true  
      responses:  
        
        "204":  
          description: Updated 
        
        "400":
          description: "Invalid Request"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "401":
          description: "Unauthorized access"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "403":
          description: "Forbidden"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "404":
          description: "Not Found"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "405":
          description: Method Not Allowed
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "406":
          description: Unacceptable
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "415":
          description: "Unsupported Media Type"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "422":
          description: "Unprocessable Entity"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "429":
          description: "Too Many Requests"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "500":
          description: "Internal Server Error"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema: 
                type: object
                example: {
                "errorResponse": {
                  "code": "500-01",
                  "message": "internal server error",
                  "developerInfo": {
                    "developerMessage": "internal server error",
                    "moreInfo": "There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)",
                    "messageid": "25557-84290371-1"
                  }
                }
              }
      deprecated: false  
  /v1/cardholders/address:  
    patch:  
      tags:  
        - Demographics 
      summary: 'This API updates the address information of a cardholder.'  
      operationId: updateAddress 
      parameters:
        - $ref: '#/components/parameters/authorizationParam'
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/clientIdParam'
      requestBody:  
        content:  
          application/json:  
            schema:  
              $ref: '#/components/schemas/CardsAddressUpdateRequest'  
        description: Update Address Request  
        required: true  
      responses:
        "204":  
          description: updated
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
        "400":
          description: "Invalid Request"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "401":
          description: "Unauthorized access"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "403":
          description: "Forbidden"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "404":
          description: "Not Found"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "405":
          description: Method Not Allowed
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "406":
          description: Unacceptable
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "415":
          description: "Unsupported Media Type"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "422":
          description: "Unprocessable Entity"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "429":
          description: "Too Many Requests"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "500":
          description: "Internal Server Error"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema: 
                type: object
                example: {
                "errorResponse": {
                  "code": "500-01",
                  "message": "internal server error",
                  "developerInfo": {
                    "developerMessage": "internal server error",
                    "moreInfo": "There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)",
                    "messageid": "25557-84290371-1"
                  }
                }
              }
      deprecated: false      
  /v1/cardholders/demographics/search:
    post:
      tags:
      - Demographics
      summary: Retrieves address, contact, and additional information for a cardholder based on CardNumber, Card MemberNumber/ID, and Card Type.
      operationId: getCardholderDemographicsV2
      parameters:
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: filter
        in: query
        description:  used to fetch the info for the OTP verification. The filter is  For API client media address fields and cardnumber  would be in masked format. The fields are as follows -Masked cardnumber -Masked Voice (home, work, cell, text address) -Masked email -masked text (Home, work, cell, text address). For fraud domain enfact flags are applicable which includes all voice and text. For cardholder domain provide the stepup fields which includes all voice, text, and email whereas TCPA fields both voice and test is applicable for both Fraud and Cardholder domain.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: verification
      requestBody:
        description: demographicSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemographicSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemographicSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/contact:  
    patch:  
      tags:  
        - Demographics
      summary: This API updates contact and TCPA information for a cardholder record.  Aplies to Dbeit and Credit Cards.  
      operationId: updateContact 
      parameters:
        - $ref: '#/components/parameters/userIdParam'
        - $ref: '#/components/parameters/clientIdParam'
        - $ref: '#/components/parameters/authorizationParam'
      requestBody:  
        content:  
          application/json:  
            schema:  
              $ref: '#/components/schemas/CardsContactUpdateRequest'  
        description: Update Contact Request  
        required: true  
      responses:  
        "204":  
          description: updated 
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
        "400":
          description: "Invalid Request"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "401":
          description: "Unauthorized access"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "403":
          description: "Forbidden"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "404":
          description: "Not Found"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "405":
          description: Method Not Allowed
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "406":
          description: Unacceptable
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "415":
          description: "Unsupported Media Type"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "422":
          description: "Unprocessable Entity"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "429":
          description: "Too Many Requests"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4xxError"
        "500":
          description: "Internal Server Error"
          headers:
            'x-fapi-interaction-id':
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema: 
                type: object
                example: {
                "errorResponse": {
                  "code": "500-01",
                  "message": "internal server error",
                  "developerInfo": {
                    "developerMessage": "internal server error",
                    "moreInfo": "There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)",
                    "messageid": "25557-84290371-1"
                  }
                }
              }
      deprecated: false      
  /v1/cards/pinAttempts:
    put:
      tags:
      - PIN
      summary: Resets the pinAttempts count to zero for a given card.
      operationId: resetPinAttempts
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinAttemptUpdateRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/pinOffset:
    put:
      tags:
      - PIN
      summary: Sets the PIN offset.
      operationId: pinOffset
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinOffsetRequest'
        required: true
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/search:
    post:
      tags:
      - Limits
      summary: Returns the limit values for a given card.
      operationId: cardLimitSearch
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: searchCardLimitsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardLimitsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/daily:
    put:
      tags:
      - Limits
      summary: Override the daily limit values for a specific card. Applies to debit cards only.
      operationId: updateDailyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateDailyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDailyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/openToBuy:
    put:
      tags:
      - Limits
      summary: Update the open to buy limit values for a specific card. Applies to debit cards only.
      operationId: updateOpenToBuyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateOpenToBuyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenToBuyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/velocity:
    put:
      tags:
      - Limits
      summary: Updates the velocity limit values for a specific card.
      operationId: updateVelocityLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateVelocityLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVelocityLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/default:
    put:
      tags:
      - Limits
      summary: Sets the cardholder limits to default values per Card class.
      operationId: defaultCardholderLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: defaultCardholderLimits
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultCardholderLimitsRequest'
        required: true
      responses:
        "200":
          description: Ok
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCardholderLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  
  /v1/cardholders/search:
    post:
      tags:
      - Details
      summary: Search cardholder records based on one or more search parameters.
      operationId: searchCardholder
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization:: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: johndoe
      - name: x-fapi-financial-id
        in: header
        description: Required. Provide 8 digit client id
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: Search Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardholderSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
components:
  schemas:

    CustomDailylimits:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if limits tend to expire.
          example: "Yes"
        expirationDate:
          type: string
          description: Expiration date applicable to daily limits
          format: date
          example: 2014-10-02
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "2000"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "200"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale. 
          example: "3000"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "500"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "100"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: Combined total, Online and offline withdrawal limits at ATM and POS. | Daily Limit Combined number of transaction attempts allowed at the ATM and POS. | Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN)
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Total daily amount available for deposit
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction. 
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing. 
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing.
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
    DemographicSearchRequest:
      title: demographicSearchRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits. Required for debit and credit.
          example: "4000100020003000"
        memberNumber:
          type: string
          description: The member number associated with the card. Required for debit.
          example: "001"
    DemographicSearchResponse:
      type: object
      properties:
        cardholderDemographics:
          $ref: '#/components/schemas/CardholderDemographics'
    CardsAdditionalInfoUpdateRequest:  
      title: CardsAdditionalInfoUpdateRequest  
      type: object  
      required:
       - cardNumber
       - additionalInfo
      properties:  
        cardNumber:
          type: string
          description: "Card number identifier. Applies and required for debit and credit cards."
          example: "4000100020003000"
        additionalInfo:
              $ref: '#/components/schemas/UpdateAdditionalInfo'
    CardsContactUpdateRequest:  
      title: CardsContactUpdateRequest  
      type: object  
      required:   
        - cardNumber
        - contact
        - tcpa
      properties:
        cardNumber:
          minLength: 16
          maxLength: 19
          type: string
          description: "Card number identifier. Applies and required for debit and credit cards."
          example: "4000100020003000"
        tcpa:  
            $ref: '#/components/schemas/UpdateTcpa' 
        contact: 
            $ref: '#/components/schemas/UpdateCardholderDemographicsContact'
    CardholderDemographics:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits. 
          example: 400010xxxxxx3000
        accountNumber:
          type: string
          description: Account identifier on the system of record. The account number is masked.
          example: xxxxx6789
        externalCustomerId:
          type: string
          description: Customer identifier assigned by external client. The externalCustomerId is masked. Applies to credit cards.
          example: xxxxx6789 
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        address:
          type: array
          items:
            $ref: '#/components/schemas/DemographicsCardsAddress'
        tcpa:
          type: array
          items:
            $ref: '#/components/schemas/Tcpa'
        contact:
          $ref: '#/components/schemas/CardholderDemographicsContact'
        atmPreferences:
          type: array
          items:
            $ref: '#/components/schemas/AtmPreferences'  
    UpdateTcpa:  
      type: object
      properties:
        tcpaType:
          type: string
          description:  "This indicates the Telephone Consumer Protection Act(TCPA). This has two enumeration values are 'Enfact' and 'Stepup.' Enfact is a a type of fraud monitoring system which is used for identifying suspicious activities on the credit and debit cards. Step up is an authentication system where and OTP is sent to the cardholder's available contact information. This information is stored on Tandem. Applies to debit and credit cards."
          enum:
            - ENFACT
            - STEPUP
        consentForVoice:
          type: boolean
          description: "EnFact consent for voice."
        consentForText:
          type: boolean
          description: "EnFact consent for text."
        lastUpdatedBy:
          type: string
          description: "Last updated by." 
          maxLength: 26
          example: 'Jesse Doe'
        
          
    UpdateCardholderDemographicsContact:
        type: object
        properties:
          voice:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactVoice'
          email:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactEmail'
          text:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactText'
          enfact:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactEnfact'
          enfactVoice:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactEnfactVoice'
          enfactText:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactEnfactText'
          stepUpText:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactStepUpText'
          stepUpVoice:
            $ref: '#/components/schemas/UpdateCardholderDemographicsContactStepUpVoice'         
    UpdateCardholderDemographicsContactVoice:
        type: object
        properties:
          homePhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Home telephone number of the primary cardholder. Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          workPhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Work telephone number of the primary cardholder. Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          mobilePhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Mobile number of the primary cardholder. Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          textAddress:
            type: string
            minLength: 10
            maxLength: 16
            description: "Cardholder's phone number to receive text messages/announcements. Format - 10 digits  without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
    UpdateCardholderDemographicsContactEmail:
        type: object
        properties:
          emailAddress:
            type: string
            maxLength: 60
            description: 'Indicates the email address of the cardholder.'
            example: 'jessedoe@example.com'
            
    UpdateCardholderDemographicsContactText:
        type: object
        properties:
          homePhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Home telephone number of the primary cardholder.  Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          workPhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Work telephone number of the primary cardholder.  Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          mobilePhoneNumber:
            type: string
            minLength: 10
            maxLength: 16
            description: "Mobile number of the primary cardholder.  Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
          textAddress:
            type: string
            minLength: 10
            maxLength: 16
            description: "Cardholder's phone number to receive text messages/announcements. Format - 10 digits without hyphens, 12, and 14 with hyphens displayed below and lengths of 15 and 16 as provided."
            example: 7406520178
            
    UpdateCardholderDemographicsContactEnfact:
        type: object
        properties:
          enfactLanguagePreference:
            description: 'Indicate the preferred language that can be used for communicating with the enfact system.'
            type: string
            enum:
              - NONE
              - ENGLISH
              - SPANISH        
    UpdateCardholderDemographicsContactEnfactVoice:
        type: object
        properties:
          homePhone:
            type: boolean
            description: "Indicate whether to connect enfact user home phone number."
          workPhone:
            type: boolean
            description: "Indicate whether to connect enfact user work phone number."
          mobilePhone:
            type: boolean
            description: "Indicate whether to connect enfact user mobile phone number."
          emailAddress:
            type: boolean
            description: "Indicate whether to connect enfact user email address."
          textAddress:
            type: boolean
            description: "Indicate whether to connect enfact user phone number for receiving text address/announcements."
    UpdateCardholderDemographicsContactEnfactText:
        type: object
        properties:
          homePhone:
            type: boolean
            description: "Indicate whether to connect enfact user home phone number for receiving text address/announcements."
          workPhone:
            type: boolean
            description: "Indicate whether to connect enfact user work phone number for receiving text address/announcements."
          mobilePhone:
            type: boolean
            description: "Indicate whether to connect enfact user mobile phone number for receiving text address/announcements."
          emailAddress:
            type: boolean
            description: "Indicate whether to connect enfact user email address."
          address:
            type: boolean
            description: "Indicates whether to connect enfact user address for receiving text address/announcements."
          mobileText:
            type: boolean
            description: "Indicate whether to connect enfact user mobile phone number for receiving text address/announcements."  
    UpdateCardholderDemographicsContactStepUpText:
        type: object
        properties:
          homePhone :
            type: boolean
            description: "Indicate whether to text stepup user home phone address."
          workPhone:
            type: boolean
            description: "Indicate whether to text stepup user work phone address."
          mobilePhone:
            type: boolean
            description: "Indicate whether to text stepup user mobile phone address."
          emailAddress:
            type: boolean
            description: "Indicate whether to connect stepup user email address."
          address:
            type: boolean
            description: "Indicate whether to text stepup user address."
          mobileText:
            type: boolean
            description: "Indicate whether to text stepup user mobile number."
    UpdateCardholderDemographicsContactStepUpVoice:
        type: object
        properties:
          homePhone:
            type: boolean
            description: "Indicate whether to connect stepup user home phone number."
          workPhone:
            type: boolean            
            description: "Indicate whether to connect stepup user work phone number."
          mobilePhone:
            type: boolean
            description: "Indicate whether to connect stepup user mobile phone number."
          emailAddress:
            type: boolean
            description: "Indicate whether to connect stepup user email address."
          address:
            type: boolean
            description: "Indicate whether to connect stepup user address."
          mobileText:
            type: boolean 
            description: "Indicate whether to connect stepup user phone number to receive text messages/announcements."
          
    CardsAddress:  
      type: object
      required:
        - addressType
      properties:  
        addressType:  
          type: string  
          enum:  
            - PRIMARY
            - ALTERNATE
            - BILLING
            - PLASTIC
            - STATEMENT
            - LETTERS
          description: "Type of address. 
            TYPES PRIMARY and ALTERNATE applies and required for debit cards.
            TYPE PLASTIC applies to debit cards.
            TYPE BILLING applies to any credit cardholder.
            TYPES ALTERNATE, PLASTIC, STATEMENT, and LETTERS applies only to the primary credit cardholder."
        addressLine1:  
          type: string
          maxLength: 34
          description: "Line1 of address. Applies  for debit and credit cards." 
          example: '123 Any Street'
        addressLine2:  
          type: string
          maxLength: 34
          description: "Line2 of address."
          example: '123 Any Lane'
        addressLine3:
          type: string
          maxLength: 34
          description: "Line 3 for Address. Applies to credit cards only." 
          example: '123 Any Lane'
        addressLine4:
          type: string
          maxLength: 34
          description: "Line 4 for Address. Applies to credit cards only."
          example: '123 Any Lane'
        city:  
          type: string 
          maxLength: 26
          description: "Name of city, per the ISO 3166 standards."
          example: 'New Jersey'
        stateCode:  
          type: string
          maxLength: 2
          description: "Indicates the state code, per the ISO 3166 standards."
          example: 'NJ'
        zipCode:
          type: string  
          minLength: 5
          maxLength: 10
          description: "Postal code of the state. Enter either 5 digits or 9 digits with or without hyphens. Formats in example." 
          example: '12345, 123451234, 12345-1234'
        countryCode:  
          type: string
          maxLength: 3
          description: "Country Code, per the ISO 3166 Standards."
          example: 'USA'
        isCardMailer:  
          type: boolean  
          description: 'Indicate if a given address will be used for Card Mailer on all future Card Orders. Applies to debit cards only.'
        isPinMailer:  
          type: boolean  
          description:  'Indicate if the given address will be used for Pin Mailer on all future Card Orders. Applies to debit cards only.'
        addressCategoryCode:  
          type: string  
          enum:  
            - PERMANENT  
            - REPEATING  
            - TEMPORARY  
          description: 'Indicate the category of an address PERMANENT, REPEATING, and TEMPORARY. REPEATING address used for recurring and specific time periods Temporary address used for a single, short period of time. Applies to credit cards only.'
        beginDate:  
          type: string  
          description: "Beginning date to use the alternative address to send plastics. Applies to credit cards only."
          format: 'date'
          example: '2014-10-02'
        endDate:  
          type: string  
          description: "Ending date to use the alternative address to send plastics. Applies to credit cards only." 
          format: 'date'
          example: '2014-10-02'
    UpdateAdditionalInfo: 
      type: object 
      properties:
        prefix:  
          type: string
          maxLength : 5
          description: 'Professional or honorary title associated with the primary customer. Allow alpha, period, or spaces. Applies to credit cards only.'
          example: 'Dr.'
        cardholderName:  
          type: string
          maxLength: 26
          description: "Cardholder Name.This field is mandatory. The 'prefix' and the 'cardholder name' together cannot exceed the max length of 26 for credit cards only.  The 'cardholder name' and the 'suffix' toether cannot exceed the max length of 26 for debit cards." 
          example: 'John Smith'
        priorCardholderName:
          type: string
          maxLength: 26
          description: "Prior Cardholder Name. Required if value  was entered in the  cardholderName. Applies to Debit cards only." 
          example: 'Jessie Doe'   
        association:  
          type: string  
          description: "Type of association of the account."
          enum:  
               - PRIMARY  
               - SECONDARY  
               - AUTHORIZED_USER  
               - GUARANTOR_OR_CO-SIGNER
        vip:  
          type: boolean  
          description: 'Indicate if the primary customer is a very important person. Applies to credit cards only.'
        gender:  
          type: string  
          enum:
            - NOT_SPECIFIED
            - FEMALE
            - MALE
            - COMPANY
          description: 'Gender of the cardholder. Applies to credit cards only'
        dateOfBirth:  
          type: string  
          format: 'date'
          example: '2014-10-02'
          description: "Date of Birth of the carholder."
        employeeCode:  
          type: boolean
          description: 'Indicate if the customer is an employee. Applies to credit cards only.'
        motherMaidenName:  
          type: string
          maxLength: 40
          description: "Mother's maiden name."
          example: 'Smith'
        ssnOrTaxid:  
          type: string 
          minLength: 4
          maxLength: 11
          description: "Indicates the social security number or tax id number. Formats listed in example."
          example: '123-00-5678, 123005678, 5678'
        ein:  
          type: string
          minLength: 9
          maxLength: 10
          description: "Indicates the employer identification number. Formats listed in example. Applies to credit cards only."
          example: '12-3005678, 123005678'
        dnaPersonId:
          type: string
          maxLength: 9
          description: "DNA number of Customer."
          example: '123005678'
        isDeceased:  
          type: boolean
          description: "Indicates if the cardholder is deceased. Applies to credit cards only."
        memoLine1:  
          type: string 
          maxLength: 250
          description: "Line 1 of additional information entered for the account. Applies to credit cards only." 
          example: "This customer is hard of hearing."
        memoLine2:
          type: string 
          maxLength: 250
          description: "Line 2 of additional information entered for the account. Applies to credit cards only." 
          example: "Customer called wife is deceased sending information to remove wife from account."
        verificationText:  
          type: string 
          maxLength: 30
          description: "Free-form field to enter verification data as requested by the primary cardholder for identification."
          example: "Driver's license"
        employerName:  
          type: string
          maxLength: 26
          description: "Employer Name. Applies to credit cards only."
          example: "Fiserv"
        personalizedEmbossingText:  
          type: string  
          maxLength: 26
          description: "Personalized Embossing/My Card Creation ID. Applies to credit cards only."
          example: "Jesse Doe"
        duplicateStatementsSecondary:  
          type: boolean
          description:  'Duplicate Statement for secondary user. Applies to credit cards only.'
        duplicateLettersSecondary:  
          type: boolean  
          description: 'Duplicate Letter for secondary user. Applies to credit cards only.'
        specialHandling:  
          type: string 
          description: "Sets delivery options for the plastic card.  NONE - No specific options selected, INSTANT_ISSUANCE - Instant (digital) delivery, or RUSH_PLASTIC - Mail delivery normal or overnight. Applies to credit cards only."
          enum:  
               - NONE 
               - INSTANT_ISSUANCE  
               - RUSH_PLASTIC  
        updateNameDetails:  
          type: array  
          items:  
            $ref: '#/components/schemas/UpdateNameDetails'
       
    AdditionalInfo:
      type: object
      properties:
        prefix:
          type: string
          description: Professional or honorary title associated with the primary customer. Allows a period and spaces. Applies to debit and credit cards.
          example: Dr.
        cardholderName:
          type: string
          description: Cardholder Name. Applies to debit and credit cards.
          example: John Smith
        association:
          type: string
          description: Type of association.  Applies to credit cards only.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        vip:
          type: boolean
          description: Indicates if the primary customer is a very important person.  Applies to credit cards only.
        gender:
          type: string
          description: Gender of the primary card/account holder.  Applies to credit cards only.
          example: NOT_SPECIFIED
          enum:
          - NOT_SPECIFIED
          - FEMALE
          - MALE
          - COMPANY
        dateOfBirth:
          type: string
          description: Date of Birth of the cardholder to be udpated. Applies to debit and credit cards.
          format: date
          example: 2014-10-02
        employeeCode:
          type: boolean
          description: Indicates if the customer is an employee. Max length 9. Applies to credit cards only.
          example: false
        motherMaidenName:
          type: string
          description: Mother's maiden name. Max length 40. Applies to debit and credit cards.
          example: Smith
        empId:
          type: string
          description: Indicates the employer identification number for the primary account owner. Applies to credit cards only.
          example: "123005678"
        ssnortaxId:
          type: string
          description: Indicates the Social Security Number or the tax identification number. This field is masked. Applies to debit and credit cards.
          example: xxx-xx-5678
        ein:
          type: string
          description: Indicates the employer identification number. This field is masked.
          example: xxx-xx-5678
        dnaPersonId:
          type: string
          description: DNA number of Customer.
          example: "123005678"
        isDeceased:
          type: boolean
          description: Indicates if the cardholder is deceased. Applies to credit cards only.
        memoLine1:
          type: string
          description: Line 1 of additional information entered for the account. Applies to credit cards only.
          example: This customer is hard of hearing.
        memoLine2:
          type: string
          description: Line 2 of additional information entered for the account. Applies to credit cards only.
          example: Customer called wife is deceased sending information to remove wife from account. 
        verificationText:
          type: string
          description: Free-form field used to enter verification data as requested by the primary cardholder for identification.
          example: Driver's license
        verificationZipCode:  
          type: string  
          description: "Zip Code used for veirifcation of the caller as cardholder.The max length is 9."
          example: 12345
        callerId:  
          type: string  
          description: "Phone number to verify caller as the cardholder. Used for verification. The max is 10 numeric."
          example: 000-555-0000  
        employerName:
          type: string
          description: Employer Name. Applies to credit cards only.
          example: Fiserv
        personalizedEmbossingText:
          type: string
          description: Personalized Embossing/My Card Creation ID. Applies to credit cards only.
          example: Jesse Doe
        duplicateStatementsSecondary:
          type: boolean
          description: Duplicate Statement for Secondary user. Applies to credit cards only. Required.
        duplicateLettersSecondary:
          type: boolean
          description: Duplicate Letter for Secondary user. Applies to credit cards only. Required.
        specialHandling:
          type: string
          description: |
           Sets delivery options for the plastic card.  
           NONE - No specific options selected.  
           INSTANT_ISSUANCE - Instant (digital) delivery.  
           RUSH_PLASTIC - Mail delivery normal or overnight. 
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        nameDetails:  
          type: array  
          items:  
            $ref: '#/components/schemas/NameDetails'  
    UpdateNameDetails:
       type: object 
       properties:
        nameSuffix:
           type: string
           description:  "Indicates the cardholder suffix associated with the name."
           example: "Sr."
        priorCardholderName:
          type: string
          maxLength: 26
          description: "Prior Cardholder Name. Required if value  was entered in the  cardholderName. Applies to Debit cards only." 
          example: 'Jessie Doe'   
        photoId:
            type: string
            description: "Indicates the photo idemtifier."
            example:  'EFGH'
        plasticId:
            type: string
            description:  "Indicates the Plastic identifier used in card collection plastics in place of custom stock."
            example: 'PM001'
        
    NameDetails:
       type: object 
       properties:
        nameSuffix:
           type: string
           description:  "Indicates the cardholder suffix associated with the name."
           example: "Sr."
        priorCardholderName:
          type: string
          maxLength: 26
          description: "Prior Cardholder Name. Required if value  was entered in the  cardholderName. Applies to Debit cards only." 
          example: 'Jessie Doe'   
        photoId:
            type: string
            description: "Indicates the photo idemtifier."
            example:  'EFGH'
        plasticId:
            type: string
            description:  "Indicates the Plastic identifier used in card collection plastics in place of custom stock."
            example: 'PM001'        
          
    DemographicsCardsAddress:
      required:
      - addressType
      type: object
      properties:
        addressType:
          type: string
          description: Address type 'PRIMARY', 'ALTERNATE' and PRIOR are applicable for debit. Adderss type ALTERNATE, BILLING, PLASTIc, STATEMENT, LETTER, PRIOR, REFERENCE, PRIOR_LETTERS, PRIOR_PLASTICS, PRIOR _STATEMENT, PRIOR_BILLING AND PRIOR_ REFERENCE apply to credit.
          enum:
          - PRIMARY
          - ALTERNATE
          - BILLING
          - PLASTIC
          - STATEMENT
          - LETTER
          - PRIOR
          - REFERENCE
          - PRIOR_LETTERS
          - PRIOR_PLASTICS
          - PRIOR_STATEMENTS
          - PRIOR_BILLING
          - PRIOR_REFERENCE
        addressLine1:
          type: string
          description: Line1 of address. 
          example: 123 Any Street
        addressLine2:
          type: string
          description: Line2 of address.
          example: 123 Any Lane
        addressLine3:
          type: string
          description: Line3 for Address. Applies only to credit cards.
          example: 123 Any Lane
        addressLine4:
          type: string
          description: Line4 for Address. Applies only to credit cards.
          example: 123 Any Lane
        city:
          type: string
          description: Name of city, per the ISO 3166 standards.
          example: New Jersey
        stateCode:
          type: string
          description: State code, per the ISO 3166 standards. 
          example: NJ
        zipCode:
          type: string
          description: Postal code. US codes can be 5 or 9 alphanumeric and a dash. 
          example: "12345"
        countryCode:
          type: string
          description: Country Code, per the ISO 3166 Standards. 
          example: USA
        isCardMailer:
          type: boolean
          description: Indicates that given address is used for Card Mailer on all future Card Orders. Applies to debit cards only.
        isPinMailer:
          type: boolean
          description: Indicates that given address is used for PIN Mailer on all future Card Orders. Applies to debit cards only.
        addressCategoryCode:
          type: string
          description: Indicates the category of an address. REPEATING address means this address is used for recurring with specific time periods. Applies to credit cards only.
          enum:
          - PERMANENT
          - REPEATING
          - TEMPORARY
        beginDate:
          type: string
          description: Beginning date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
          example: 2014-10-02
        endDate:
          type: string
          description: Ending date to use the alternative address to send plastic cards. Applies to credit cards only.
          format: date
          example: 2014-10-02
    AtmPreferences: 
      type: object
      properties:
        preferredLanguageCode:
          type: string
          description: 'Displays the ATM Language preference.'
          enum:
            - NONE
            - ENGLISH
            - SPANISH
        preferredAmount:
          type: number
          description: 'Preferred ATM fast cash amount.' 
          example: '240'
        preferredAccount:
          type: string
          description:  'ATM fast cash withdrawal account preference.' 
          enum:
            - NONE
            - CHECKING
            - SAVINGS
        preferredReceiptOption:
          type: string
          description:  'ATM fast cash withdrawal receipt preference option.' 
          enum:
            - NONE
            - ALWAYS
            - ASK_ME
            - NEVER
        terminalOwnerId:
          type: string
          description: "Indicates the ATM Terminal ID or UserID that updated the ATM preferences."
          example:  'USER01'
        
        sourceType:
          type: string
          description:  'An "A" indicates updated at ATM; "C" indicates update by user.'
          enum:
            - A
            - C
        action:
          type: string  
          description:  'Action taken to add or update the ATM preferences. ATM preferences can only be added at the ATM.'
          enum:
            - ADD
            - UPDATE
        actionDateTime:
          type: string
          description: 'Date and time the cardholder ATM preferences were added or updated.'  
          format: 'date-time'
          example: '2014-10-02T15:01:23.045Z'
        updatedBy:
          type: string
          description:  'ATM Terminal ID or UserID that last added or updated the ATM preferences.'
          
          example: 'USER01'               
    AtmPreferencesUpdateRequest:
      title: AtmPreferenceUpdateRequest
      required:
        - cardNumber
        - cardType        
        - atmPreferences
      properties:
        cardNumber:          
          type: string
          minLength: 16
          maxLength: 19
          description: "Card number identifier. Applies and required for debit cards only."
          example: '4000100020003000'
        atmPreferences:
          $ref: '#/components/schemas/UpdateAtmPreferences'        
    UpdateAtmPreferences:
      type: object
      description: 'A user can update the current ATM preferences for a cardholder.'
      properties:
        preferredLanguageCode:
          type: string
          default: 'NONE'
          x-mandatory: 'DEBIT'
          description: 'ATM language preference to be updated.'
          enum:
            - NONE
            - ENGLISH
            - SPANISH
        preferredAmount:
          type: number
          minimum: 0
          maximum: 980
          description:  'ATM preferred fast cash amount to be updated. Enter in whole amount and increments of 20.' 
          example: '240'
        preferredAccount:
          type: string
          default: 'NONE'
          description:   'ATM fast cash withdrawal account to be updated.' 
          enum:
            - NONE
            - CHECKING
            - SAVINGS
        preferredReceiptOption:
          type: string
          default: NONE
          description:  'ATM fast cash withdrawal receipt preference option to be updated.'
          enum:
            - NONE
            - ALWAYS
            - ASK_ME
            - NEVER      
    DefaultCardholderLimitsResponse:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Masked Cardnumber. First 6 and last 4 digits visible.
          example: 400020XXXXXX4000
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    DefaultCardholderLimitsRequest:
      title: DefaultCardholderLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
    CardsAddressUpdateRequest:  
      title: CardsAddressUpdateRequest  
      type: object  
      required:   
        - cardNumber
        - address  
      properties:  
        cardNumber:
          type: string
          minLength: 16
          maxLength: 19
          description: "Card number identifier. Applies and required for debit and credit cards. "
          example: "4000100020003000"
        address:
          type: array
          items:
            $ref: '#/components/schemas/CardsAddress'
    CustomVelocityLimits:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. Applies to debit cards only.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. Applies to debit cards only.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. Applies to debit cards only.
          example: "20"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. Applies to debit cards only.
          example: "4"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. Applies to debit cards only.
          example: "610"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. Applies to debit cards only.
          example: "610"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. Applies to debit cards only.
          example: "610"
    UpdateVelocityLimitRequest:
      title: UpdateVelocityLimitRequest
      required:
      - cardNumber
      - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    CustomOpenToBuyLimits:
      type: object
      properties:
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card.
          example: "9999"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds offline for a specific account.
          example: "123"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: The total amount of outstanding holds for a specific card offline.
          example: "123"
    UpdateOpenToBuyLimitRequest:
      title: UpdateOpenToBuyLimitRequest
      required:
      - cardNumber
      - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
    UpdateDailyLimitRequest:
      title: UpdateDailyLimitRequest
      required:
      - cardNumber
      - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
          default: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'

    ReplacementRequest:
      required:
      - cardNumber
      - cardholderName
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number identifier.
          example: "4000100020003000"
        cardholderName:
          type: string
          description: Cardholder name.
          
        personalizedEmbossingText:
          type: string
          maxLength: 26
          description: Personalized text embossed on the plastic card.
        debitOnly:
          $ref: '#/components/schemas/ReplacementDebitRequest'
        creditOnly:
          $ref: '#/components/schemas/ReplacementCreditRequest'
    ReplacementDebitRequest:

      type: object
      required: 
      - cardAddressIdentifier
      properties:
        cardAddressIdentifier:
          type: string
          description: This identifier will identify which address to be used for Card. If Alternate value is entered , but no alternate address is present, then an error is displayed.
          enum:
            - PRIMARY
            - ALTERNATE
          example: "PRIMARY"
        expirationDate:
          type: string
          description: Date on which the card expires.
          format: MM/YY
          example: "01/23"
        nameSuffix:
          type: string
          description: Cardholder name suffix.
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0.
          example: "0"
        photoId:
          type: string
          description: Photo identifier of the image to use on the card.
        plasticId:
          type: string
          description: The plastic identifier.
          example: PM001
        rushType:
          type: string
          description: Indicates how quickly to send a plastic card to the cardholder.
          example: NONE
          enum:
          - NONE
          - REGULAR
          - OVERNIGHT
    ReplacementCreditRequest:
  
      type: object
      required: 
      - specialHandling
      - customerRoleTypeCode
      properties:
        cardStock:
          type: string
          description: Number identifying the stock used to produce the plastic card. If no value is passed in the request, it is defaulted with the value in the current card.
          example: "00"
        
        waiveReplacementFee:
          type: string
          description: The indicator which mentions whether a replacement fee will be waived while placing an order. Possible values include Y or N.
          example: "Y"
        specialHandling:
          type: string
          description: Sets delivery options for the plastic card.
          example: NONE
          enum:
          - NONE
          - INSTANT_ISSUANCE
          - RUSH_PLASTIC
        customerRoleTypeCode:
          type: string
          description: The Role type code of a customer.primary - 01, Secondary-02, Auth user-03
          
    ReplacementResponse:
      type: object
      properties:
        warningInfo:
          $ref: '#/components/schemas/Warning'

    
          
    PinAttemptUpdateRequest:
      title: PinattemptUpdateRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If the member number is not passed it is defaulted to 0. Applies to debit cards only.
          example: "2"
    SearchCardLimitsRequest:
      title: SearchCardLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed it is defaulted to 0.
          example: "0"
    SearchCardLimitsResponse:
      type: object
      properties:
        cardLimits:
          $ref: '#/components/schemas/CardLimitsSearch'
      description: Elements with null values in the response are not displayed.
    CardLimitsSearch:
      type: object
      properties:
        nonExpiring:
          maxLength: 3
          type: string
          description: Indicates if the limits will expire or not. Valid values YES, NO.
          example: "No" 
        expirationDate:
          type: string
          description: The expiration date of the limits if the limits tend to expire. Not applicable if they have no expiration date.  Applies to daily limits only.
          format: date
        limitType:
          type: string
          description: Indicates if the limits are card class values or overridden.
          example: OVERRIDE
          enum:
          - OVERRIDE
          - CARD_CLASS
        atmTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline withdrawal limits at an ATM.
          example: "600"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at an ATM.
          example: "300"
        posTotalAmount:
          maxLength: 6
          type: string
          description: POS Online and offline withdrawal limits at a point-of-sale.
          example: "2500"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions involving other mediums, example travelers cheques.
          example: "10"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions involving other mediums, example travelers cheques.
          example: "2"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for transactions performed without the card present, example internet transactions.
          example: "1500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for transactions performed without the card present, example internet transactions.
          example: "500"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: |
            Combined total, Online and offline withdrawal limits at ATM and POS.  
            Daily Limit Combined number of transaction attempts allowed at the ATM and POS.
            Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN)
          example: "2500"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: Amount of same day deposit available for use.
          example: "0"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum dollar amount per MT funding transaction. Money transfer funding | P2P Limits | offline processing. 
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing.
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing.
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing.
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during online and offline processing.
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit. Dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time.
          example: "0"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.
          example: "0"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time.
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        retail:
          type: string
          description: Minimum retail authorization amount. The system approves any retail transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        travel:
          type: string
          description: Minimum travel and entertainment authorization amount. The system approves any travel and entertainment transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
          example: 2014-10-02T15:01:23.045Z
    CardActivationUpdateResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
          example: 2014-10-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-10-28
        cardActivationStatus:
          type: string
          description: The activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateResponseWarning:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
          example: 2014-10-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-10-28
        cardActivationStatus:
          type: string
          description: Actvation status of the card. NOT_ACTIVATED and ACTIVATED statuses apply to both debit and credit cards, remaining statuses apply to debit only.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Elements with null values in the response are not displayed.
    SearchCardActivationResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by which the Card must be activated. Applies to debit cards only.
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on which the Card can be used by user. Applies to debit cards only.
          format: date
          example: 2014-11-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-11-28
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card.
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated.
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: Indicates the number of activation attempts since the last reset. Applies to debit cards only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: Elements with null values in the response are not displayed.
    CardActivationUpdateRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 and 19 digits.
          example: "4000100020003001"
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. If the member number is not passed, defaults to default memberNumber. Applies to debit cards only.
          example: "1"
    PinOffsetRequest:
      required:
      - cardNumber
      - pinOffset
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier.
          example: 400028XXX8XX0012
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.
        cardType:
          type: string
          description: Card Type. Possible values Debit or Credit. If no value is passed, system determines value.
          example: DEBIT
          default: ""
          enum:
          - DEBIT
          - CREDIT
          - ""
        pinOffset:
          type: string
          description: Used by the card vendor to calculate the PIN number for the card. Required.
          example: "1234"
    AuthDetailsRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
    AuthDetailsResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits. The cardNumber will be masked, except the first 6 and last 4 digits.
          example: 400020XXXXXX4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        cardExpirationDate:
          type: string
          description: Card Expiration Date.
          format: MMYY
          example: "0228"
    ActivationSearchRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000100020003001"
    CardholderDemographicsContactStepUpVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect stepup user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect stepup user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect stepup user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to connect stepup user phone number to receive text messages/announcements. This is optional
    CardholderDemographicsContactStepUpText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to text stepup user home phone address. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to text stepup user work phone address. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to text stepup user mobile phone address. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to text stepup user address. This is optional.
        mobileText:
          type: boolean
          description: Indicates whether to text stepup user mobile number. This is optional.
    CardholderDemographicsContactEnfactText:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number for receiving text address/announcements. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number for receiving text address/announcements. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        address:
          type: boolean
          description: Indicates whether to connect enfact user address for receiving text address/announcements. This is optional
        mobileText:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfactVoice:
      type: object
      properties:
        homePhone:
          type: boolean
          description: Indicates whether to connect enfact user home phone number. This is optional.
        workPhone:
          type: boolean
          description: Indicates whether to connect enfact user work phone number. This is optional.
        mobilePhone:
          type: boolean
          description: Indicates whether to connect enfact user mobile phone number. This is optional.
        emailAddress:
          type: boolean
          description: Indicates whether to connect enfact user email address.
        textAddress:
          type: boolean
          description: Indicates whether to connect enfact user phone number for receiving text address/announcements. This is optional.
    CardholderDemographicsContactEnfact:
      type: object
      properties:
        enfactLanguagePreference:
          type: string
          description: Indicates the preferred language that can be used for communicating with the enfact system.
          example: ENGLISH
          enum:
          - ENGLISH
          - SPANISH
          - NONE
    CardholderDemographicsContactText:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character.
          example: 7406520178
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character.
          example: 7406520178
    CardholderDemographicsContactEmail:
      type: object
      properties:
        emailAddress:
          type: string
          description: Indicates the email address of the cardholder. Optional. Applies to debit and credit cards. Max length 50.
          example: jessedoe@example.com
    CardholderDemographicsContactVoice:
      type: object
      properties:
        homePhoneNumber:
          type: string
          description: Home telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
        workPhoneNumber:
          type: string
          description: Work telephone number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
        mobilePhoneNumber:
          type: string
          description: Mobile number of the primary cardholder. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
        textAddress:
          type: string
          description: Cardholder's phone number to receive text messages/announcements. 10 digit numeric, allows dash as a special character. Optional. Applies to debit and credit cards.
          example: 7406520178
    CardholderDemographicsContact:
      type: object
      properties:
        voice:
          $ref: '#/components/schemas/CardholderDemographicsContactVoice'
        email:
          $ref: '#/components/schemas/CardholderDemographicsContactEmail'
        text:
          $ref: '#/components/schemas/CardholderDemographicsContactText'
        enfact:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfact'
        enfactVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactVoice'
        enfactText:
          $ref: '#/components/schemas/CardholderDemographicsContactEnfactText'
        stepUpText:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpText'
        stepUpVoice:
          $ref: '#/components/schemas/CardholderDemographicsContactStepUpVoice'
    Tcpa:
      type: object
      properties:
        tcpaType:
          type: string
          description: |
           Indicates the Telephone Consumer Protection Act (TCPA) type. Possible values  
           Enfact: fraud monitoring system which used for identifying suspicious activities on the credit and debit cards.  
           Stepup: authentication system where an OTP is sent to the cardholder's available contact information. 
          enum:
          - ENFACT
          - STEPUP
        consentForVoice:
          type: boolean
          description: EnFact consent for voice. Optional. Applies to debit and credit cards.
        consentForText:
          type: boolean
          description: EnFact consent for text. Optional. Applies to debit and credit cards.
        lastUpdatedDate:
          type: string
          description: TCPA last updated date. Optional. Applies to debit and credit cards.
          format: date
          example: 2020-01-01
        lastUpdatedBy:
          type: string
          description: Last updated by. Max length 25. Optional. Applies to debit and credit cards. 
          example: Jesse Doe
    SearchTransactionRequest:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: The Member Number is associated with the card. If not passed, defaults to ALL. Transaction summary ia returned as an array for all member numbers when defaulted to All.
          example: "1"
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    SearchTransactionsResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of transactions for the provided request information.
          example: 50
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        warningInfo:
          $ref: '#/components/schemas/Warning'
    FilterCriteria:
      type: object
      properties:
        filterBy:
          type: string
          description: |
           Filter applied to transactions search. One or many filter combinations are allowed. Applies to debit and credit cards.  
           MERCHANT_NAME - Merchant Name  
           AMOUNT_FROM - Minimum amount. Valid format is 0.00. 
           AMOUNT_TO - Maximum amount. Valid format is 0.00. 
           FROM_DATE - Start date. Valid Format is YYYY-MM-DD. 
           TO_DATE - End date. Valid format is YYYY-MM-DD. 
           STATUS - For debit transactions valid status are APPROVED and REVERSED. For credit transactions valid status are  POSTED/DECLINED/PENDING/APPROVED/REVERSED. 
           TRANSACTION_CODE - Describes the type of transaction done on card. For values refer field transactionType.  
           MESSAGE_TYPE - Message based on activity done on the transaction. For values refer field MessageType.  Applies only to debit cards.
          enum:
          - MERCHANT_NAME
          - AMOUNT_FROM
          - AMOUNT_TO
          - FROM_DATE
          - TO_DATE
          - STATUS
          - TRANSACTION_CODE
          - MESSAGE_TYPE
        filterValue:
          type: string
          description: Values for selected filters. If the filterBy field is set to MERCHANT_NAME, this field contains the name of the merchant, such as 'ExampleCo'. See filterBy field for more information.  
    Transaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: life cycle key. Applies to debit cards only.
        cardNumber:
          type: string
          description: Card  number used in transaction, identified in request. Masked in the response. Applies to debit and credit cards.
        memberNumber:
          type: string
          description: Member Number associated with the card. This field is only used if the user is selecting member number for a given cardholder, not used when searching all transactions. Applies to debit cards only. 
          example: "1"
        cardType:
          type: string
          description: Possible values DEBIT, CREDIT_GATEWAY or CREDIT. Applies to debit and credit cards.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal. Applies to debit cards only.
          example: "000009"
        subResponseCode:
          type: string
          description: Optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination. Applies to debit cards only.
        subResponseCodeDescription:
          type: string
          description: Description for sub response code. Applies to debit cards only.
        preAuthAmt:
          type: string
          description: Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed. Applies to debit cards only. 
          example: "1299.00"
        amtCharged:
          type: string
          description: Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction, this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1. Applies to debit cards only. 
          example: "1299.00"
        authorizationCode:
          type: string
          description: Authorization approval code, generated for approved transactions only. Applies to debit and credit cards. 
          example: "050821"
        terminalId:
          type: string
          description: Identifier indicating the terminal where the transaction was performed. Applies to debit cards only.
          example: VMDIEOS1
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service. Applies to debit and credit cards.
          example: "6011"
        merchantCity:
          type: string
          description: Regulation E City & State where terminal is located. Applies to debit and credit cards.
          example: City
        merchantState:
          type: string
          description: |
           Merchant State  
           AL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  
           CA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  
           FM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  
           FL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI  Hawaii  
           ID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  
           LA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  
           MD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  
           MO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey
           NM New Mexico | NY New York | NC North Carolina | ND North Dakota  
           MP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  
           OH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  
           PA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  
           SC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  
           VT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  
           WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming 
          example: IL
        eciMastercard:
          type: string
          description: |
           Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction. Applies to debit cards only.  
             
           Possible Positions 1 and 2 values  
             
           • 21 = Channel encryption; cardholder certificate not used  
           • 22 = Masterpass-generated transaction  
           • 24 = Digital Secure Remote Payment (DSRP) transaction  
           • 91 = No security protocol; cardholder certificate not used.  
             
           Possible Position 3 values  
             
           • 0 = Universal cardholder authentication field (UCAF) data collection – Is not supported by the merchant an Identity Check merchant has chosen not to undertake Identity Check on this transaction or identity Check failed authentication and merchant desires to proceed with transaction  
           • 1 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains an attempts AAV  
           • 2 = UCAF data collection is supported by the merchant and UCAF data must be present (transaction contains a fully authenticated AAV)  
           • 3 = UCAF data collection is supported by the merchant and UCAF (Mastercard assigned static AAV) must be present  
           • 4 = Merchant has chosen to share authentication data within authorization; UCAF collection not supported  
           • 5 = Reserved for future use  
           • 6 = Merchant Risk-Based Decisioning  
           • 7 = Partial Shipment or recurring payment; liability depends on the original UCAF values provided and matching with the original transaction
          example: "21"
        eciVisa:
          type: string
          description: |
           Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.  Applies to debit cards only.  
             
           Position 4: Mail/Phone/Electronic Commerce and Payment Indicator:  
             
           • Space = POS Customer Present (POS Check Service Only)  
           • 1 = Single transaction of a mail/phone order  
           • 2 = Recurring transaction  
           • 3 = Installment payment  
           • 4 = Unknown classification/Other mail order  
           • 5 = Secure electronic commerce transaction  
           • 6 = Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure  
           • 7 = Non-authenticated security transaction • 8=Non-secure transaction'
          example: "3"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction. Valid values Yes or No. Applies to debit cards only.
          example: 1 - Yes 
        networkID:
          type: string
          description: Specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. Applies to debit cards only.
        acquirerRefNum:
          type: string
          description: Assigned by the network based on information provided by the acquirer. Can be used for network corrections. Applies to debit cards only.
        posDataInputCapability:
          type: string
          description: Indicates the capability of the terminal to enter the card number and expiration date into the system. Applies to debit cards only.
        posDataInputMode:
          type: string
          description: Indicates the method used to input the information from the card to the terminal. Applies to debit cards only.
        unmatchedCompletionFlag:
          type: string
          description: Indicates unmatched completion flag. Applies to debit cards only.
          example: "N"
        expirationDateMismatch:
          type: string
          description: Indicates if an expiration date mismatch exists. Applies to debit cards only.
          example: "N"
        effectiveDate:
          type: string
          description: Date when the transaction came into effect. Applies to credit cards only.
          format: date
          example: 2014-10-02
        transactionDateTime:
          type: string
          description: Date and Time when transaction was created. Applies to debit and credit cards.
          format: date-time
          example: 2014-10-02T15:01:23.045Z
        transactedCardNumber:
          type: string
          description: CardNumber given for monetary(posted) transactions if available, otherwise blank. Applies to credit cards only.
          example: 4443115KUCWPZF7831
        statusDescription:
          type: string
          description: Combination of status code and description for transaction status. Applies to debit and credit cards.
          example: 64-PI LOST
        merchantName:
          type: string
          description: Merchant Name. Applies to debit and credit cards.
          example: Abc
        transactionAmount:
          type: string
          description: Amount on a particular transaction. Valid format is 0.00. Applies to debit and credit cards.
          example: "1299.00"
        transactionType:
          type: string
          description: |
           Indicates the type of transaction made on the card. This contains the transactionCode description of status Posted transactions.  
             
           Valid values for DEBIT   
             
           Account Inquiry           
           Balance Inquiry  
           Check Cashing  
           Credit  
           Debit  
           Deposit  
           Deposit Cash Back  
           Loan to Prepaid  
           Member Verification  
           Message  
           Money Transfer Credit  
           Money Transfer Dispense  
           Money Transfer Funding  
           Money Transfer Initiate  
           Money Transfer Refund  
           Payment  
           Payment Enclosed  
           Payment to Merchant  
           PIN Select  
           Refund from Merchant  
           Special Purchase  
           Statement Print  
           Third Party Bill Payment Return  
           Transfer  
           Withdrawal  
             
           Valid Values for CREDIT when transaction status is Posted.  
                      
           Account Balance Details for MULTRAN Accounts  
           Account Level Processing Strategy Change Message  
           Account Transfer  
           Airline Itinerary  
           Backdated Cash Advance Finance Charge  
           Backdated Cash Advance and Sales Adjustment  
           Backdated Payment Adjustment  
           Backdated Payment or Cash Advance Adjustment  
           Backdated Payment Interest Adjustment  
           Cash Advance  
           Cash Advance Amount Adjustment  
           Cash Advance Finance Charge
           Cash Advance Finance Charge Refund  
           Cash Advance Item Charge  
           Cash Advance Item Charge Refund  
           Cash Advance Reversal  
           Charge Off All Finance Charges  
           Charge Off Billed Cash Advance Item Charges  
           Charge Off Billed Merchandise Item Charges  
           Charge Off Billed Late Charges  
           Charge Off Billed Overlimit Fees  
           Charge Off Cash Advance Interest  
           Charge Off Credit Life Insurance  
           Charge Off All Current Cash Advance Interest  
           Charge Off All Current Merchandise Interest  
           Charge Off Cycle-to-Date Cash Advance Item Charges
           Charge Off Cycle-to-Date Late Charges  
           Charge Off Cycle-to-Date Merchandise Item Charges
           Charge Off Cycle-to-Date Overlimit Fees
           Charge Off Merchandise Interest and Service Charges
           Charge Off Total Account  
           Credit Life Insurance Fee Refund  
           Credit Life Insurance Charge  
           Fee or Finance Charge Rebate  
           Finance Charge (item charge)  
           Interest Earned or Credit Interest  
           Late Charge  
           Late Charge Refund  
           Merchandise Finance Charge  
           Merchandise Finance Charge Refund  
           Merchandise Item Charge  
           Merchandise Item Charge Refund  
           Merchandise Sale Amount Adjustment  
           Merchandise Sale Reversal  
           Overlimit Account Message  
           Overlimit Charge  
           Overlimit Charge Refund  
           Payment  
           Payment Amount Adjustment  
           Payment Reversal  
           Retail Special Details  
           Return  
           Return Amount Adjustment  
           Return Reversal  
           Reserved for restricted use  
           Sale  
           Skip Payment Certificate Message  
           Service Charge or Statement Charge  
           Small Balance Charge-off  
           Special Details  
           Specific Credit Amount Adjustment  
             
           Transaction status Pending or Declined for CREDIT  
             
           Account status inquiry service or payment account status inquiry  
           Account status check via a token provisioning request resulted in an approved response  
           Account status inquiry service or payment account status inquiry  
           Activation code notification message for token provisioning via step-up authentication processing  
           Authorization adjustment  
           Balance inquiry approved  
           Cash advance authorization approved  
           Cash advance authorization approved by expansion  
           Cash advance authorization approved by name  
           Cash advance authorization approved by positive identification  
           Cash advance authorization declined  
           Cash advance authorization manually declined  
           Cash authorization approved without issuer contact  
           Cash referral  
           Check authorization approved  
           Check authorization declined  
           Check system error - declined  
           Duplicate authorization  
           In-store return  
           Issuer’s adjustment  
           Manual override cash advance authorization  
           Manual override merchandise authorization  
           Merchandise authorization approved  
           Merchandise authorization approved by expansion  
           Merchandise authorization approved by name  
           Merchandise authorization approved by positive identification  
           Merchandise authorization approved without issuer contact  
           Merchandise authorization declined  
           Merchandise authorization manually declined  
           Merchandise referral  
           Merchandise return adjustment  
           Merchandise return adjustment declined  
           Merchandise return approved  
           Merchandise return declined  
           Override declined cash advance  
           Override declined merchandise authorization  
           Pay unposted check  
           Permanent authorization adjustment  
           Permanent authorization request  
           Preauthorization request approved  
           Preauthorization request denied  
           Private label ETC return posted at the time of return  
           Reserved for restricted use  
           Return posted check  
           Return unposted check  
           Right-time payment  
           Right-time pay/reversal  
           Token has been granted linked to the cardholder account and provisioned  
           Token maintenance such as activation, deactivation, suspension, exception, or replacement  
           Token provision decision  
           Visa and Mastercard person-to-person payment transaction reversal  
           Visa and Mastercard person-to-person payment transaction decline  
          example: WITHDRAWAL
        messageType:
          type: string
          description: |
           The combination of message type code and description for transaction message. Applies to debit cards only.  
           100- Pre-Auth Request  
           102- Pre-Auth Reversal  
           110- Preauthorization  
           120- Pre-Auth Stand In  
           121- Pre-Auth Adv Repeat  
           130- Auth Advice Resp  
           200- Request  
           202- Auth Reversal  
           210- Auth/Completion  
           220- Forced Completion  
           221- Advice Repeat  
           230- Advice Response  
           320- Batch Upload  
           330- Batch Upload Resp  
           420- Reversal  
           421- Advice Rev Repeat  
           430- Reversal Response  
           500- Batch Settl Request  
           510- Batch Settl Resp  
           800- Network Mgmt Req  
           810- Network Mgmt Resp  
           820- Network Mgmt Advice
          example: 420- Reversal
        transactionStatus:
          type: string
          description: Status of the transaction. Possible values for debit APPROVED and REVERSED.  Valid values for credit POSTED - PENDING - DECLINED - APPROVED - REVERSED
          example: APPROVED
        responseCode:
          type: string
          description: Authorization response approval or denial code.  Applies to debit and credit cards.
          example: "003"
        responseCodeDescription:
          type: string
          description: This field provide description for response code. Applies to debit and credit cards.
          example: APPROVED - WITH BALANCES
        transactionCode:
          type: string
          description: |
           Code assigned to particular transaction.  This field is not populated in response when transaction status is Posted, instead description is populated in transaction type field. Applies to credit cards only.  
           253- Sale   
           254- Cash Advance  
           255- Return  
           256- Merchandise Sale Reversal  
           257- Cash Advance Reversal  
           258- ReturnReversal  
           259- Merchandise Sale Amount Adjustment  
           260- Cash Advance Amount Adjustment  
           261- Return Amount Adjustment  
           271- Payment  
           272- Payment Reversal  
           273- Payment Amount Adjustment 
           280- Specific Credit Amount Adjustment  
           281- Cash Advance Item Charge Refund  
           282  Late Charge Refund  
           283  Merchandise Finance Charge Refund  
           284  Cash Advance Finance Charge Refund  
           285  Backdated Payment Adjustment  
           286  Merchandise Item Charge Refund  
           287  Overlimit Charge Refund  
           288  Credit Life Insurance Fee Refund  
           290  Backdate Cash Advance and Sales Adjustment  
           370  Small Balance Charge-off  
           371  Charge Off Total Account   
           372  Charge Off Cash Advance Interest  
           373  Charge Off Billed Late Charges  
           374  Charge Off Merchandise Interest and Service Charges  
           375  Charge Off Credit Life Insurance  
           376  Charge Off All Finance Charges  
           377  Charge Off All Current Cash Advance Interest  
           378  Charge Off All Current Merchandise Interest  
           379  Charge Off Cycle-to-Date Late Charges  
           380  Charge Off Billed Cash Advance Item Charges  
           381  Charge Off Billed Merchandise Item Charges  
           382  Charge Off Billed Overlimit Fees  
           383  Charge Off Cycle-to-Date Cash Advance Item Charges  
           384  Charge Off Cycle-to-Date Merchandise Item Charges  
           385  Charge Off Cycle-to-Date Overlimit Fees  
           400  Account Transfer  
           900  Finance Charge (item charge)  
           959  Reserved for restricted use  
           960  Reserved for restricted use   
           961  Late Charge  
           962  Credit Life Insurance Charge  
           963  Cash Advance Finance Charge  
           964  Merchandise Finance Charge  
           965  Overlimit Account Message  
           966  Reserved for restricted use  
           967  Account Level Processing Strategy Change Message  
           976  Reserved for restricted use  
           978  Reserved for restricted use   
           979  Reserved for restricted use   
           981  Account Balance Details for MULTRAN Accounts  
           984  Backdated Cash Advance Finance Charge  
           985  Backdated Payment Interest Adjustment  
           986  Cash Advance Item Charge  
           987  Merchandise Item Charge  
           988  Overlimit Charge  
           989  Interest Earned or Credit Interest  
           990  Service Charge or Statement Charge  
           991  Cash Advance Item Charge  
           992  Fee or Finance Charge Rebate  
           993  Backdated Payment or Cash Advance Adjustment  
           994  Skip Payment Certificate Message  
           997  Retail Special Details  
           998  Airline Itinerary Special Details
           999  First Data use only.  
                        
           Below transaction codes and description are for the transaction status Pending or Declined. 
             
           AA  Authorization adjustment  
           AC  Activation code notification message for token provisioning via step-up authentication processing  
           AK  Check authorization approved.  
           AP  Preauthorization request approved  
           AS  Account status inquiry service or payment account status inquiry  
           CA  Cash advance authorization approved  
           CD  Cash advance authorization declined  
           CE  Cash advance authorization approved by expansion  
           CO  Override declined cash advance  
           CP  Cash advance authorization approved by positive identification  
           CS  Cash referral  
           CT  Cash advance authorization approved by name  
           CX  Cash advance authorization manually declined  
           DA  Duplicate authorization  
           DC  Cash authorization approved without issuer contact  
           DK  Check authorization declined  
           DM  Merchandise authorization approved without issuer contact  
           DP  Preauthorization request denied  
           EC  Balance inquiry approved  
           IA  Issuer’s adjustment  
           IV  Reserved for restricted use  
           KE  Check system error - declined  
           KR  Return posted check  
           MA  Merchandise authorization approved  
           MC  In-store return  
           MD  Merchandise authorization declined  
           ME  Merchandise authorization approved by expansion  
           MI  Right-time payment  
           MO  Override declined merchandise authorization  
           MP  Merchandise authorization approved by positive identification  
           MR  Right-time pay/reversal  
           MS  Merchandise referral  
           MT  Merchandise authorization approved by name  
           MX  Merchandise authorization manually declined  
           PA  Permanent authorization request  
           PK  Pay unposted check  
           PR  Visa and Mastercard person-to-person payment transaction reversal  
           PX  Visa and Mastercard person-to-person payment transaction decline  
           PZ  Permanent authorization adjustment  
           QA  Merchandise return adjustment  
           QD  Merchandise return declined  
           QQ  Reserved for restricted use  
           QR  Merchandise return approved  
           QZ  Merchandise return adjustment declined  
           RK  Return unposted check  
           TA  Account status check via a token provisioning request resulted in an approved response  
           TD  Token provision decision  
           TM  Token maintenance, such as activation, deactivation, suspension, exception, or replacement  
           TN  Token has been granted, linked to the cardholder account, and provisioned  
           VA  Private label ETC return posted at the time of return  
           XC  Manual override cash advance authorization  
           XM  Manual override merchandise authorization.
          example: "961"
        declinedTransactionDetails:
          $ref: '#/components/schemas/DeclinedTransactionDetails'
        pendingTransactionDetails:
          $ref: '#/components/schemas/PendingTransactionDetails'
        postedTransactionDetails:
          $ref: '#/components/schemas/PostedTransactionDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
    DeclinedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Description of the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
          example: "6011"
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
          example: ME
        declinedReasonCode:
          type: string
          description: Reason code and description for declined transactions.
          example: 64-PI LOST
        expandedReasonCode:
          type: string
          description: Code for expanded reason.
        authorizationResponseDescription:
          type: string
          description: Description of the authorization response.
      description: Tag applies to credit cards only.
    PendingTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        transactionDescription:
          type: string
          description: Describes the transaction.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        posEntryModeCode:
          type: string
          description: posentry mode code
        enteredExpirationDate:
          type: string
          description: Entered expiration date.
        authorizationCode:
          type: string
          description: Authorization code associated with the approved transaction.
        transactionCode:
          type: string
          description: Code associated with particular transaction.
        declinedReasonCode:
          type: string
          description: Reason code for declined transaction.
        expandedReasonCode:
          type: string
          description: The expanded reason code.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example, if authorized amount is 100 and transaction amount is 60, 40 is the adjustment amount.
      description: Tag applies to credit cards only.
    PostedTransactionDetails:
      type: object
      properties:
        transactionAccountNumber:
          type: string
          description: In case of Credit, this field value differs. This is card used for Auth and account number/card number in case of Posted transactions.
        cardholderAccountNumber:
          type: string
          description: The cardholderAccountNumber is used as control account number in case of consolidated billing on subordinate account transaction.
        transactionDescription:
          type: string
          description: Description of transaction
        promotionId:
          type: string
          description: Identifies the promotion to which the transaction was posted.
        authorizationCode:
          type: string
          description: 5- or 6-digit code provided by the issuer or its agent to indicate approval of the transaction.
        postingDate:
          type: string
          description: Posting date of the transaction.
          format: date
          example: 2014-10-02
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction id
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        originalAuthAdjustmentAmount:
          type: string
          description: Any adjustment done on original authorized amount. For an example if authorized amount is 100 and transaction is 60, 40 is the adjustment amount.
        merchantCategoryCode:
          type: string
          description: Merchant category code (MCC) associated with the transaction. National code that classifies the card acceptor’s type of business, product, or service
        merchantNumber:
          type: string
          description: Identifies the merchant where the transaction originated.
        transactionCode:
          type: string
          description: Specific code provided for each transaction.
      description: Tag applies to credit cards only.
    TransactionDetails:
      type: object
      properties:
        entryMode:
          type: string
          description: Method used to input the information from the card to the terminal.
          example: 2 - Swipe
        enteredExpirationDate:
          type: string
          description: Expiration date entered for the transaction.
          format: MMYY
          example: "1122"
        pinTransaction:
          type: string
          description: Indicates if a PIN was used for the transaction.
          example: 1 - Yes
        terminalPinCapable:
          type: string
          description: Indicates the ability of the terminal to accept PIN.
          example: "No"
        international:
          type: string
          description: Indicates if the transaction was international.
          example: "No"
        eCommerce:
          type: string
          description: Indicates if the transaction was eCommerce.
        avsResult:
          type: string
          description: Address verification service result. 
        avsAddress:
          type: string
          description: Address provided for address verification.
        settlementAmount:
          type: string
          description: Amount paid to merchant. 
          example: "1100.00"
          x-encrypted: "N"
        transactionfeeAmount:
          type: string
          description: Fee amount charged on transaction.
          example: "20.00"
        transactionCurrencyCode:
          type: string
          description: Currency code for transaction amount.
        settlementCurrencyCode:
          type: string
          description: Currency Code for the settlement amount.
        settlementConversionRate:
          type: string
          description: Conversion Rate applied on settlement amount.
        reversalreason:
          type: string
          description: Reason for reversal transaction.
        referenceNumber:
          type: string
          description: Reference number assigned to the transaction.
        cardSequenceNumber:
          type: string
          description: Card Sequence Number distinguishes among separate cards having the same PAN.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        detailTransactionIdentifier:
          type: string
          description: Detail about transaction identifier of particular transactions.
        pinVerified:
          type: string
          description: Indicates if PINverification took place on the client platform.
        availableUsage:
          type: string
          description: Amount of available credit on the account.
        transactionAmtoriginal:
          type: string
          description: Original amount of funds requested by the cardholder in the transaction currency (US Dollars). This amount includes cashback and surcharge fees and is exclusive of ISA and CCA fees.
        systemAudit:
          type: string
          description: Number a message initiator assigns to uniquely identify a transaction.
        messageId:
          type: string
          description: Identifier for the ISO message type used for this transaction.
        fraudDecision:
          type: string
          description: Decision returned by the third-party fraud interface.
        falconScore:
          type: string
          description: Score assigned by third-party fraud interface for authorization sent online.
        merchantCode:
          type: string
          description: Indicates the merchant category code associated with the transaction.
        acquiringCountryCode:
          type: string
          description: Code of the country where the acquiring institution is located.
        posMode:
          type: string
          description: Numeric codes to indicate the method by which the PAN was entered into the interchange system and to indicate the POS terminal PIN entry capabilities.
        posCode:
          type: string
          description: Identifies the Point of Service   condition code. It describes the condition under which the transaction took place at POS.
        acquiringId:
          type: string
          description: Acquiring Institution ID code identifies the Acquiring Institution Or Merchant Bank for this transaction. MC - 5 to 11 digits. VISA - 6 to 11 digits.
        cardAcceptorTermId:
          type: string
          description: Identifies a terminal at the card acceptor location of acquiring institutions or merchant POS systems. The terminal ID should be printed on all transaction receipts in ATM and POS transactions where the terminal is capable of generating customer receipts.
        cardAcceptorIdCode:
          type: string
          description: Identification number assigned to the establishment where the transaction was acquired.
        cardAcceptorName:
          type: string
          description: Indicates the name of the establishment where the transaction was acquired.
        cardAcceptorCity:
          type: string
          description: Indicates the city where the call originated.
        cavvResult:
          type: string
          description: Indicates the Cardholder Authentication Verification Value (CAVV) results code that identifies the outcome of CAVV validation. The value in field also indicates who performed the authentication, either Visa or the issuer, and the classification of the transaction.
        cvvResult:
          type: string
          description: Defines outcome of CVV validation.
        originalResponseCode:
          type: string
          description: Original response code from the original tramsaction. For an instance, when V.I.P. encounters a duplicate transaction, this field contains the field 39 response code from the original transaction.
        additionalData1:
          type: string
          description: Any optional data received on the response.
        additionalData2:
          type: string
          description: Any optional data received on the response.
        avsOptionCode:
          type: string
          description: Address Verification Service (AVS) Request indicates that verification of the cardholder billing address is requested in the authorization message.
        cvcResultCode:
          type: string
          description: The result code of CVC (Card Verification Code).
        tagData:
          type: string
          description: Identifies the electronic commerce indicators representing the security level and cardholder authentication associated with the transaction.
        tagCode:
          type: string
          description: Indicates whether the merchant terminal supports a specific program or service.
        tagSvcRsn:
          type: string
          description: Notifies the issuer of the On-behalf Service performed on the transaction and the results. Sub element,71 will support up to ten services for a transaction.
        terminalIndicator:
          type: string
          description: This field maps to Field 55 Tag 95— Terminal Verification Results.This Tag maps to Field 131—Terminal Verification Results (TVR).Field 131 is carried in VSDC transactions and contains indicators from a terminal perspective.  The terminal records the results of offline and online processing by setting a series of indicators in this field.   These indicators are available to clients in the online message and clearing transaction.
        riskCodeOne:
          type: string
          description: Field 62.22, positions 1-2 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Account Risk Condition Code (CARCC) related to a high-risk even in the Compromised Account Management System (CAMS).
        riskCodeTwo:
          type: string
          description: Field 62.22, positions 3-4 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.These positions may contain a Compromised Event Reference (CER) ID related to a high-risk CAMS event.
        riskCodeThree:
          type: string
          description: Field 62.22, positions 5-6 is a Visa private-use field that contains additional Advanced Authorization online risk assessment information to assist issuers in the authorization decision-making process. The condition codes provide descriptive information for high-risk assessments.
        riskReasonCodeOne:
          type: string
          description: Field 62.21, position 3 is.an alphanumeric combination that will act as a key to explain the risk score model. 
        riskReasonCodeTwo:
          type: string
          description: Field 62.21, positon 4 is an alphanumeric combination that will act as a key to explain the risk score model. 
        riskScore:
          type: string
          description: Field 62.21, positions 1-2 is a Visa private-use field that contains online risk assessment information from Advanced Authorization. This information assists issuers in the authorization decision-making process.This value indicates the degree of risk associated with a transaction. This two-byte transaction risk score is represented by a numeric value from 01–99.
        messageReasonCode:
          type: string
          description: Code explaining the reason for an online acquirer advice, reversal, or partial reversal.
        networkID:
          type: string
          description: Code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction.
        mcOriginalTypeId:
          type: string
          description: Original type id  
        mcOriginalRef:
          type: string
          description: Original reference with the merchant.
        avsPostalCode:
          type: string
          description: Identifies the cardholder postal code and street address that is used for certain types of verification. 
        cvvCVVtwo:
          type: string
          description: The CVV2/CVC2 value that is printed on the signature panel of Visa and Mastercard plastics. This value is made available for issuers that want to validate the CVV2/CVC2 value themselves. The value will only be passed to an issuer if provided by the acquirer.  Provided transactions in which the debit card is not present.
        applicationTranCounter:
          type: string
          description: Count of the transactions performed within the card application. The count is incremented by one each time a transaction is initiated. Multiple authorization requests for the same transaction will have the same ATC; for example, when online PIN fails and the next authorization represents a different PIN try for the same transaction, the ATC will be the same. For reversals and advices, the ATC is the value from the original message.
        appInterchangeProfile:
          type: string
          description: Field 138 is carried in VSDC transactions and provides a series of indicators that reflect the specific functions supported by the chip card account, for example, whether cardholder verification is supported.This field maps to Field 55, Tag 82—Application Interchange Profile.
        terminalCountryCode:
          type: string
          description: This field is carried in VISA SMART DEBIT SMART CREDIT (VSDC) transactions and identifies the country where the merchant terminal is located. A leading zero is required to pad the first unused half-byte of this field. The zero is filler and is not part of the code.This field maps to Field 55, Tag 9F1A—Terminal Country Code.
        stateCode:
          type: string
          description: Originating Center State Postal Code
        generalDetails:
          $ref: '#/components/schemas/GeneralDetails'
        amountDetails:
          $ref: '#/components/schemas/AmountDetails'
        networkInfo:
          $ref: '#/components/schemas/NetworkInfo'
        tokenAndEmvInfo:
          $ref: '#/components/schemas/TokenAndEmvInfo'
        riskInfo:
          $ref: '#/components/schemas/RiskInfo'
        acquirerInfo:
          $ref: '#/components/schemas/AcquirerInfo'
      description: Applies to debit cards only.
      
    TerminalTransactionRequest:
      type: object
      properties:
        terminalId:
          type: string
          description: "Eight-character terminal identifier indicating the terminal where the transactions were performed."
          example: "VMDIEOS1"
          x-encrypted: 'N'
      
        filterCriteria:
          type: array
          items:
            $ref: "#/components/schemas/TerminalTransactionFilterCriteria"
    TerminalTransactionFilterCriteria:
            type: object
            properties:
              filterBy:
                type: string
                enum:
                  - MERCHANT_NAME
                  - AMOUNT_FROM
                  - AMOUNT_TO
                  - FROM_DATETIME
                  - TO_DATETIME
                  - STATUS
                  - TRANSACTION_CODE
                  - MESSAGE_TYPE
                  - CARDNUMBER
                  - TERMINALFILOGO
                  - CARDFILOGO
                description: Type of filter to be applied to narrow down transactions search.One or many filter combinations are allowed.
                  MERCHANT_NAME- Merchant Name
                  AMOUNT_FROM- Minimum amount user wish to choose.Valid format is 0.00. 
                  AMOUNT_TO- Maximum amount user wish to choose. Valid format is 0.00. 
                  FROM_DATETIME- Start date & time user wish to choose.Valid Format is YYYY-MM-DD.
                  TO_DATETIME- Till date user wish to choose. Valid format is YYYY-MM-DD. 
                  STATUS- Status of Transaction for debit.For debit transactions valid status  are APPROVED,DECLINED and REVERSED.
                  TRANSACTION_TYPE- Describes the type of transaction done on card.For values refer field name transactionType from schema-TerminalTransactionV2.
                  MESSAGE_TYPE- Message based on activity done on the transaction. This field is applicable only for Debit. For values refer field name MessageType from schema-TerminalTransactionV2 .
                  CARDNUMBER - Card  number on which transaction is done.
                  TERMINALFILOGO - The Terminal FI Logo
                  CARDFILOGO - The Card FI Logo
              filterValue:
                type: string
                description: "filterBy Value for which transactions need to be filtered." 
                x-Credit/Debit(Applicable) : 'Both' 
                x-mandatory(Credit/Debit): 'Both'
                x-encrypted: 'N'        
    TerminalTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TerminalTransaction"
        warningInfo:
          $ref: "#/components/schemas/Warning"     
    TerminalTransaction:
      type: object
      properties:
        systemRecordId:
          type: string
          description: 'life cycle key'
          x-encrypted: 'N'
        cardNumber:
          type: string
          x-encrypted: 'Y'
          description: "Card  number on which transaction is done. Card should be the value which was passed from request"
          example: "4000 XXXX XXXX 3000"
        memberNumber: 
          type: string
          example: "001"
          x-encrypted: 'N'
          description: "Member Number associated to the card.This field is only used for Debit cards and if the user is selecting member number for a given cardholder,Not used when searching all transactions for a customer"  
        sequenceNumber: 
          type: string
          description: "Numeric identifier for the transaction, assigned by the terminal. When the Fiserv back up host is processing the terminal activity, this number advances by a sequence number of 10 from the previous sequence number."
          x-encrypted: 'N'
        subResponseCode: 
          type: string
          description: "Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit."
          x-encrypted: 'N'
        subResponseCodeDescription:
          type: string
          x-encrypted: 'N'
          description:  "This field provide description for sub response code.Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.This field is applicable only for Debit."  
        preAuthAmt: 
          type: string
          x-encrypted: 'N'
          description: 'Contains the transaction amount on a preauthorization response (110) or an authorization response (210). For a partially approved transaction, this is the amount approved. For a denied     transaction, this is the requested amount. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a forced post preauthorization (120) or forced post clearing transaction (220), the clearing amount is shown in Amount 2 is duplicated in Amount 1. On a reversal, Amount 1 is the amount to be reversed'
          example: '1299.00'
        amtCharged: 
          type: string
          x-encrypted: 'N'
          description: 'Contains the transaction amount on a forced authorization (120) or on a forced post clearing transaction (220). For a partially approved transaction,this is the amount approved. The amount includes surcharges but does not include switch, cardholder, or interchange fees. On a preauthorization response (110) or an authorization response (210), an amount displayed is a balance returned in the response. This could be the ledger or available balance. On a partial reversal, Amount 2 is the new amount that replaces the amount displayed in Amount 1.'
          example: '1299.00' 
        authorizationCode:
          type: string
          x-encrypted: 'N'
          description: "Authorization approval code for the transaction.It is generated for approved transactions only." 
          example: "050821"
        terminalId:
          type: string
          description: "Terminal identifier indicating the terminal where the transaction was performed."
          x-encrypted: 'N'
          example: "VMDIEOS1"
        merchantCategoryCode:
          type: string
          description: "Merchant category code (MCC) associated with the transaction.National code that classifies the card acceptor’s type of business, product, or service" 
          x-encrypted: 'N'
          example: "6011"
        merchantCity:
          type: string
          description: "Regulation E City & State where terminal is located."
          example: "New Jersey"
        merchantState:
          type: string
          description: 'Merchant State 
             - AL  Alabama
             -  AK  Alaska
             -  AS  American Samoa (US Territory)
             -  AZ  Arizona
              - AR  Arkansas
              - CA  California
              - CO  Colorado
              - CT  Connecticut
              - DE   Delaware
              - DC  District of Columbia
              - FM        Federated States of Micronesia (US Territory)
              - FSM        Federated States of Micronesia (US Territory)
              - FL        Florida
              - GA        Georgia
              - GU        Guam (US Territory)
              - GUM        Guam (US Territory)
              - HI        Hawaii
              - ID        Idaho
              - IL        Illinois
              - IN        Indiana
              - IA        Iowa
              - KS        Kansas
              - KY        Kentucky
              - LA        Louisiana
              - ME        Maine
              - MH        Marshall Islands (US Territory)
              - MHL        Marshall Islands (US Territory)
              - MD        Maryland
             -  MA        Massachusetts
             -  MI        Michigan
             -  MN        Minnesota
             -  MS        Mississippi
            -   MO        Missouri
            -   MT        Montana
            -   NE        Nebraska
            -   NV        Nevada
             -  NH        New Hampshire
              - NJ        New Jersey
             -  NM        New Mexico
              - NY        New York
              - NC        North Carolina
              - ND        North Dakota
              - MP        Northern Mariana Islands (US Territory)
              - MNP        Northern Mariana Islands (US Territory)
              - OH        Ohio
             -  OK        Oklahoma
             -  OR        Oregon
              - PW        Palau (US Territory)
              - PLW        Palau (US Territory)
             -  PA        Pennsylvania
              - PR        Puerto Rico (US Territory)
             -  PRL        Puerto Rico (US Territory)
             -  RI        Rhode Island
              -  SC        South Carolina
              -  SD        South Dakota
             - TN        Tennessee
            - TX        Texas
             -  UT        Utah
               -VT        Vermont
             -  VA        Virginia
             -  VI        Virgin Islands (US Territory)
             -  VIR        Virgin Islands (US Territory)
              - WA        Washington
             -  WV        West Virginia
             -  WI        Wisconsin
            -   WY        Wyoming '
          x-Credit/Debit(Applicable) : 'Debit'
          example: "NJ"
        eciMastercard:
          type: string
          description: "Electronic commerce indicator (ECI) provides information regarding the security level and authentication method used for an electronic commerce Debit Mastercard® transaction.Positions 1 and 2 can be as follows
            • 21=Channel encryption; cardholder certificate not used
            • 22=Masterpass-generated transaction
            • 24=Digital Secure Remote Payment (DSRP) transaction
            • 91=No security protocol; cardholder certificate not used.Position 3 can be as follows
            • 0=Universal cardholder authentication field (UCAF) data collection
            – Is not supported by the merchant
            —or—
            – An Identity Check merchant has chosen not to undertake Identity Check on
            this transaction
            —or—
            – Identity Check failed authentication and merchant desires to proceed
            with transaction
            • 1=UCAF data collection is supported by the merchant and UCAF data must be
            present (transaction contains an attempts AAV)
            • 2=UCAF data collection is supported by the merchant and UCAF data must be
            present (transaction contains a fully authenticated AAV)
            • 3=UCAF data collection is supported by the merchant and UCAF (Mastercard
            assigned static AAV) must be present
            • 4=Merchant has chosen to share authentication data within authorization;
            UCAF collection not supported
            • 5=Reserved for future use
            • 6=Merchant Risk-Based Decisioning
            • 7=Partial Shipment or recurring payment; liability depends on the original
            UCAF values provided and matching with the original transaction" 
          x-Credit/Debit(Applicable) : 'Debit' 
          example: "3"
        eciVisa:
          type: string
          description: "Electronic commerce indicator (ECI)—Visa. Provides information regarding the security level and authentication method used for an electronic commerce Visa Check transaction.
            Position 4: Mail/Phone/Electronic Commerce and Payment Indicator:
            • Space=POS Customer Present (POS Check Service Only)
            • 1=Single transaction of a mail/phone order
            • 2=Recurring transaction
            • 3=Installment payment
            • 4=Unknown classification/Other mail order
            • 5=Secure electronic commerce transaction
            • 6=Non-authenticated security transaction at a 3-D Secure-capable merchant,
            and merchant attempted to authenticate the cardholder using 3-D Secure
            • 7=Non-authenticated security transaction
            • 8=Non-secure transaction"
          example: "3"
        pinTransaction: 
          type: string
          x-encrypted: 'N'
          description: "Indicates if a PIN was used for the transaction.Valid values can be Yes/No"  
          example: "1 - Yes"
        networkID:
           type: string
           x-encrypted: 'N'
           description: "Field 63.1 contains a code that specifies the network to be used for transmission of the message and determines the program rules that apply to the transaction. "  
        acquirerRefNum:
          type: string
          x-encrypted: 'N'
          description: 'Assigned by the network based on information provided by the acquirer. Can be used for network corrections.'
        posDataInputCapability:
          type: string
          x-encrypted: 'N'
          description: 'Indicates the capability of the terminal to enter the card number and expiration date into the system.'
        posDataInputMode :
          type: string
          x-encrypted: 'N'
          description: 'Indicates the method used to input the information from the card to the terminal. Indicates how the transaction at the device is performed.'
        unmatchedCompletionFlag:
          type: string
          x-encrypted: 'N'
          example: "N"
          description: 'Indicates umatched completion flag'
        expirationDateMismatch:
          type: string
          x-encrypted: 'N'
          example: "N"
          description: 'Indicates if the expiration date mismatch is there or not' 
        transactionDateTime:
          type: string
          description: "Date and Time when transaction was created."
          example: '2014-10-02T15:01:23.045Z'
          format: date-time
          x-encrypted: 'N'
        merchantName:
          type: string
          x-encrypted: 'N'
          description: "The Merchant Name"
          example: "Store1"
        transactionAmount: 
          type: string
          x-encrypted: 'N'
          description: "Amount on a particular transaction.Valid format is 0.00"
          example: '1299.00'
        transactionType:
          type: string
          x-encrypted: 'N'
          description: "Indicates the type of transaction that was made on the card.It is interlinked with transaction code. Valid values for *** DEBIT are [Withdrawal,Debit,Money Transfer Funding,Check Cashing,Deposit Cash Back,Money Transfer Dispense,Money Transfer Initiate,Deposit,Credit,Message,Money Transfer Credit,Loan to Prepaid,Money Transfer Refund,Balance Inquiry,PIN Select,Statement Print,Member Verification,Account Inquiry,Transfer,Payment,Payment Enclosed,Payment to Merchant,Refund from Merchant,Third Party Bill Payment Return,Special Purchase] Valid Values for *** CREDIT when transaction status is Posted.[Sale,Cash Advance,Return,Merchandise Sale Reversal,Cash Advance Reversal,Return Reversal,Merchandise Sale Amount Adjustment,Cash Advance Amount Adjustment,Return Amount Adjustment,Payment,Payment Reversal,Payment Amount Adjustment,Specific Credit Amount Adjustment,Cash Advance Item Charge Refund,Late Charge Refund,Merchandise Finance Charge Refund,Cash Advance Finance Charge Refund,Backdated Payment Adjustment,Merchandise Item Charge Refund, Overlimit Charge Refund,Credit Life Insurance Fee Refund,Backdate Cash Advance and Sales Adjustment,Small Balance Charge-off,Charge Off Total Account,Charge Off Cash Advance Interest,Charge Off Billed Late Charges,Charge Off Merchandise Interest and Service Charges,Charge Off Credit Life Insurance, Charge Off All Finance Charges,Charge Off All Current Cash Advance Interest,Charge Off All Current Merchandise Interest,Charge Off Cycle-to-Date Late Charges,Charge Off Billed Cash Advance Item Charges Charge Off Billed Merchandise Item Charges,Charge Off Billed Overlimit Fees,Charge Off Cycle-to-Date Cash Advance Item Charges,Charge Off Cycle-to-Date Merchandise Item Charges,Charge Off Cycle-to-Date Overlimit Fees,Account Transfer,Finance Charge (item charge),Reserved for restricted use,Reserved for restricted use,Late Charge,Credit Life Insurance Charge,Cash Advance Finance Charge,Merchandise Finance Charge,Overlimit Account Message,Reserved for restricted use,Account Level Processing Strategy Change Message,Reserved for restricted use,Account Balance Details for MULTRAN Accounts,Backdated Cash Advance Finance Charge,Backdated Payment Interest Adjustment,Cash Advance Item Charge,Merchandise Item Charge,Overlimit Charge,Interest Earned or Credit Interest,Service Charge or Statement Charge,Cash Advance Item Charge,Fee or Finance Charge Rebate,Backdated Payment or Cash Advance Adjustment,Skip Payment Certificate Message,Retail Special Details,Airline Itinerary, Special Details,First Data use only.] Below transaction type are for the transaction status Pending or Declined for *** CREDIT.[Authorization adjustment,Activation code notification message for token provisioning via step-up authentication processing,Check authorization approved,Preauthorization request approved,Account status inquiry service or payment account status inquiry,Cash advance authorization approved,Cash advance authorization declined,Cash advance authorization approved by expansion,Override declined cash advance,Cash advance authorization approved by positive identification,Cash referral,Cash advance authorization approved by name,Cash advance authorization manually declined,Duplicate authorization,Cash authorization approved without issuer contact,Check authorization declined,  Merchandise authorization approved without issuer contact,Preauthorization request denied,Balance inquiry approved,Issuer’s adjustment,Reserved for restricted use,Check system error - declined, Return posted check,Merchandise authorization approved,In-store return,Merchandise authorization declined,Merchandise authorization approved by expansio,Right-time payment,-Override declined merchandise authorization,Merchandise authorization approved by positive identification,Right-time pay/reversal, Merchandise referral,Merchandise authorization approved by name,Merchandise authorization manually declined,Permanent authorization request,Pay unposted check,Visa and Mastercard person-to-person payment transaction reversal,Visa and Mastercard person-to-person payment transaction decline,Permanent authorization adjustment,Merchandise return adjustment,Merchandise return declined,Merchandise return approved,Merchandise return adjustment declined,Return unposted check,Account status check via a token provisioning request resulted in an approved response,Token provision decision,Token maintenance, such as activation, deactivation, suspension, exception, or replacement,Token has been granted, linked to the cardholder account, and provisioned,Private label ETC return posted at the time of return,Manual override cash advance authorization,Manual override merchandise authorization.]"
          example: "WITHDRAWAL"
        messageType: 
          type: string
          x-encrypted: 'N'
          description: "This is the combination of Numeric code and description of the message type. Message type is the message done on the transaction activities.For the valid codes below are the values .
              - 100- Pre-Auth Request
              - 102- Pre-Auth Reversal
              - 110- Preauthorization
              - 120- Pre-Auth Stand In
              - 121- Pre-Auth Adv Repeat
              - 130- Auth Advice Resp
              - 200- Request
              - 202- Auth Reversal
              - 210- Auth/Completion 
              - 220- Forced Completion
              - 221- Advice Repeat
              - 230- Advice Response
              - 320- Batch Upload
              - 330- Batch Upload Resp
              - 420- Reversal
              - 421- Advice Rev Repeat
              - 430- Reversal Response
              - 500- Batch Settl Request
              - 510- Batch Settl Resp
              - 800- Network Mgmt Req
              - 810- Network Mgmt Resp
              - 820- Network Mgmt Advice"
          example: "210 - Auth/Completion"
        transactionStatus:
          type: string
          x-encrypted: 'N'
          example: "DECLINED"
          description: "Status of the transaction.APPROVED,DECLINED and REVERSED for Debit
            - DECLINED
            - APPROVED
            - REVERSED"
          
        responseCode: 
          type: string
          x-encrypted: 'N'
          description: "This field represents authorization response ;approval code or denial code"
          example: "003"
        responseCodeDescription:
          type: string
          x-encrypted: 'N'
          description: "This field provide description for response code."
          example: "APPROVED - WITH BALANCES"
        terminalFILogo:
          type: string
          x-encrypted: 'N'
          description: "Terminal FI Logo "
          example: 'GDN3'
        cardFILogo:
          type: string
          x-encrypted: 'N'
          description: "Card FI Logo "
          example: 'GDN3'
        terminalPinCapable:
          type: string
          x-encrypted: 'N'
          description: "Indicates the ability of the terminal to accept PIN. "
          example: "No"
        merchantCountry: 
          type: string
          description: "Country where the terminal is located"
          x-encrypted: 'N'
          example: "USA"
    AcquirerInfo:
      type: object
      properties:
        merchantName:
          type: string
          description: Merchant that acquired the POS transaction.
        merchantId:
          type: string
          description: Merchant identification number where the transaction originated.
        terminalId:
          type: string
          description: Terminal identifier indicating the terminal where the transaction was performed.
        terminalStreet:
          type: string
          description: Street address where the terminal is located.
        terminalCityAndState:
          type: string
          description: |
           Merchant State  
           AL Alabama | AK Alaska | AS American Samoa (US Territory) | AZ Arizona | AR Arkansas  
           CA California | CO Colorado | CT Connecticut | DE Delaware | DC District of Columbia  
           FM Federated States of Micronesia (US Territory) | FSM Federated States of Micronesia (US Territory)  
           FL Florida | GA Georgia | GU Guam (US Territory) | GUM Guam (US Territory) | HI  Hawaii  
           ID Idaho | IL Illinois | IN Indiana | IA Iowa | KS Kansas | KY Kentucky  
           LA Louisiana | ME Maine | MH Marshall Islands (US Territory) | MHL Marshall Islands (US Territory)  
           MD Maryland | MA Massachusetts | MI Michigan | MN Minnesota | MS Mississippi  
           MO Missouri | MT Montana | NE Nebraska | NV Nevada | NH New Hampshire | NJ New Jersey
           NM New Mexico | NY New York | NC North Carolina | ND North Dakota  
           MP Northern Mariana Islands (US Territory) | MNP Northern Mariana Islands (US Territory)  
           OH Ohio | OK Oklahoma | OR Oregon | PW Palau (US Territory) | PLW Palau (US Territory)  
           PA Pennsylvania | PR Puerto Rico (US Territory) | PRL Puerto Rico (US Territory) | RI Rhode Island  
           SC South Carolina | SD South Dakota | TN Tennessee | TX Texas | UT Utah  
           VT Vermont | VA Virginia | VI Virgin Islands (US Territory) | VIR Virgin Islands (US Territory)  
           WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming 
           WA Washington | WV West Virginia | WI Wisconsin | WY Wyoming 
          example: 5533 0472, NY
        merchantCountry:
          type: string
          description: Country where the merchant is located.
          example: USA
          x-applicable(Credit/Debit): Debit
          x-mandatory(Credit/Debit): Debit
          x-encrypted: "N"
        merchantCategoryCode:
          type: string
          description: Type of merchant acquiring a transaction.
          example: "6011"
          x-applicable(Credit/Debit): Debit
          x-mandatory(Credit/Debit): Debit
          x-encrypted: "N"
        pointOfService:
          type: string
          description: |
            Indicates the type of device used to acquire the transaction or the purpose of the transaction.  
            002  ON-PREMISE  
            004  ELECTRONIC CASH REGISTER  
            006  PRE-AUTHORIZED REQUEST  
            007  PRE-AUTHORIZED REQUEST-NO PIN  
            014  GENERIC  
            051  VERIFICATION OF FUNDS  
            054  GAS PUMP  
            062  OFF-PREMISE  
            064  SCRIP DISPENSE  
            072  RETAIL  
            074  ADMINISTRATIVE  
            081  PAYIT OR BANKIT TRANSACTION (ITP)  
            086  PIN, NO TRACK2  
            087  MERCHANT AUTHORIZED TRANSACTION  
            088  PAPER CAPTURE  
            089  TRACK READ (PAN AND EXP), NO PIN  
            090  NO PIN, NO TRACK2  
            091  NO PIN, TRACK2  
            092  INTERNATIONAL  
            094  SHARED BRANCH STAND ALONE  
            096  SHARED BRANCH FRANCHISE  
            097  SHARED BRANCH OUTLET
      example: 002 - ON-PREMISE
    RiskInfo:
      type: object
      properties:
        enfactRealTimeScore:
          type: string
          description: The real time score associated with a transaction during authorization.
        enfactRealTimeDecision:
          type: string
          description:  |
           EnFact authorization recommendation based on an EnFact fraud rule assigned during authorization.  
           A - Approve  
           D - Deny  
           T - Timed Out  
           E - Error  
           U - Falcon Server Unavailable  
           R - Deny - Retain Card  
           X - Engin to Falcon Timeout  
           S - Stop Sending to Falcon 
        enfactNearTimeScore:
          type: string
          description: EnFact Near Time/Case Management Score. EnFact predictive model score assigned to the transaction after authorization.
        enfactRecommendation:
          type: string
          description: Identifies if the EnFact rules denied the transaction.
        networkScore:
          type: string
          description: ' - Visa - Mastercard - Pulse - star '
        transactionBlockerResult:
          type: string
          description: |
           Identifies how the transaction was handled by TranBlocker.  
           0 Not Checked  
           1 Timeout  
           2 Successful  
           3 Denote and Continue  
           4 Deny  
           5 Retain 
        ruleManagerRecommendation:
          type: string
          description: |
           RuleManager transaction recommendation sent back to the authorization platform.  
           C - Continue  
           D - Deny  
           E - Error  
           O - Offline for Maintenance  
           P - Pass  
           R - Deny and Retain  
           T - Timeout
    TokenAndEmvInfo:
      type: object
      properties:
        tokenTransaction:
          type: string
          description: Token Transaction. A tokenized payment transaction uses a token PAN that is an alternate 13- to 19-digit value provisioned for the real or true PAN. The real PAN is the card number assigned by the FI. For token provisioning transactions, this field is not applicable and the value is always N.
        wallet:
          type: string
          description: Wallet details. Possible values Apple pay - Google Pay - Samsung pay - Fitbit Pay - Garmin pay.
        emvTransaction:
          type: string
          description: Indicates if it is an EMV transaction. Possible values Yes or No.
        emvCard:
          type: string
          description: Indicates if the card used in the transactation is EMV. Possible values Yes or No.
        emvTerminal:
          type: string
          description: Indicates if the terminal is EMV capable. Possible values Yes or No.
        emvFallback:
          type: string
          description: Indicates if the transaction is EMV fallback. Possible values Yes or No.
    NetworkInfo:
      type: object
      properties:
        network:
          type: string
          description: Identifies the network that routed the transaction.
        secureEci:
          type: string
          description: Electronic commerce indicator (ECI) provides network information regarding the security level and authentication method used for an electronic commerce transaction.
        authorizationCode:
          type: string
          description: Authorization approval code for the transaction.
        sequenceNumber:
          type: string
          description: Chronological numeric identifier for the transaction, assigned by the terminal.
    AmountDetails:
      type: object
      properties:
        transactionNetAmount:
          type: string
          description: Requested amount presented to the FI, or the amount approved if partially approved, regardless of the. 
        cashbackAmount:
          type: string
          description: Amount of cash returned to a cardholder during a transaction.
        surchargeAmount:
          type: string
          description: Amount of the ATM-level surcharge assessed by the terminal owner for the transaction.
        surchargeReservalAmount:
          type: string
          description: Surcharge amount to settlement of the original nonreversal transaction.
    GeneralDetails:
      type: object
      properties:
        journalDateTime:
          type: string
          description: System assigned timestamp in Eastern Time.
          format: date-time
        responseDetails:
          type: string
          description: Details about response received for transaction.
        reversalCode:
          type: string
          description: The reason for a reversal.
        transactionProcessingCode:
          type: string
          description: Indicates the specific transaction (action taken), the From account, and the To account.
        toAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Savings
        toAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        fromAccountType:
          type: string
          description: Type of the account impacted by a cardholder transaction.
          example: Checking
        fromAccount:
          type: string
          description: Number of the account impacted by a cardholder transaction.
        productType:
          type: string
          description: Product Type - ATM or POS.
        depositType:
          type: string
          description: Indicates if the deposit is a check, cash, or mixed deposit.
        subResponseCode:
          type: string
          description: Response sub codes are an optional 1-character field further defining specific denial codes that are only applicable on certain response codes; they are case-sensitive and meanings vary based on response and response sub code combination.
        transactionStatus:
          type: string
          description: Indicates status of transactions.
        transactionType:
          type: string
          description: Indicates the type of transaction.
    UpdateCardStatusRequest:
      title: CardStatusUpdateRequest
      required:
      - cardNumber
      - cardStatus
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card Number, 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. If not specified, defaults to 0.
          example: "0"
        cardStatus:
          type: string
          description: |
            Status of card.  
            Valid values for Debit -   
            ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED.  
            
            Valid values for Credit -  
            BLOCKED_FROM_AUTHORIZATION, FRAUD_DETECTED, LOST_OR_STOLEN, NORMAL, NOT_ACTIVE.  
            
            Refer to statusReasonCode field description for updating the status.

          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: |
            Indicates the reason code associated to the card status.  
            
            Valid values for Debit -  
            ABUSED, CLOSED, CUSTOMER_REQUEST, DAMAGED, LOST, NONE, REVOKED, STOLEN.  
            
            A statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Set this field to NONE when updating to any other status.  
            
            Valid Values For Credit -  
            CLOSED_BY_CUSTOMER, CLOSED_BY_FI, DECEASED, LOST, REVOKED, STOLEN, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT.

          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        fraudActivity:
          type: string
          description: Indicates if it is required to open a fraud dispute claim. This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.
          example: POSSIBLE_FRAUD
          enum:
          - NONE_SUSPECTED
          - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: Details on the fraud dispute to be claimed. Required when fraudActivity is POSSIBLE_FRAUD. Applicable only when status is LOST_OR_STOLEN for Credit.
    CardTokenRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000100020003000"
    PinRequest:
      required:
      - jwt
      - pin
      type: object
      properties:
        pin:
          maxLength: 4
          minLength: 4
          type: string
          description: PIN to be set for a given card number. Only numerics are allowed. No repetitive characters 3 times in a row like 111X, X333, 1111, 2222. No sequential characters (even backwards) 0123, 1234, 2345, 6543. 3210.
          example: "2938"
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only. 
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardTokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: Javascript Web Token (JWT), returned by the getCardToken (POST /v1/cards/token) response. JWT provided for one card can only be used to set the PIN for that particular card. Valid for 15 minutes only. 
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardholderSearchRequest:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits.
          example: "4000200030004000"
        ssnOrTaxid:
          type: string
          description: Full SSN or Tax ID of a cardholder, masked. Pass exactly 9 digits for this field. Allow dash as a special character. 
          example: xxxxx1234
        accNumber:
          type: string
          description: Account Number
          example: "123456789"
        phone:
          type: string
          description: Cell phone number or home phone number or work phone number.
          example: "1495041"
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example:.com
        dateOfBirth:
          type: string
          description: Date of Birth.
          example: 10/1/52
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        lastFourCardNumber:
          type: string
          description: Last four digits of the card number.
          example: "4000"
        lastFourAccNumber:
          type: string
          description: Last four digits of the Account number.
          example: "6789"
        lastName:
          type: string
          description: Last name of the customer.
          example: Smith
        lastFourSsnOrTaxid:
          type: string
          description: The last four digits of the ssn/taxid number. Applies to debit cards only.
          example: "1234"
      description: This operation requires at least one exact match search criteria, using these fields - cardNumber, accountNumber, ssnOrTaxid, emailAddress, lastName or phone. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria.
    CardholderSearchResponse:
      title: CardholderSearchResponse
      type: object
      description: Any elements with null values in the response are not be displayed in the response.
      properties:
        id:
          type: integer
          format: int64
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
    CardholderSearchResponseWarning:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: Any elements with null values in the response are not be displayed in the response.
    CardholderCardsDetails:
      title: CardholderCardsDetails
      required:
      - cardholderCardsDetails
      - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholder'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCard'
    CHCardholder:
      type: object
      properties:
        cardholderName:
          type: string
          description: Cardholder name
          example: Alex Smith
    CHCard:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number, between 16 to 19 digits.
          example: "4000200030004000"
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '[123456789,987654321]'
          items:
            type: string
        cardMemberNumber:
          type: string
          description: Member Number associated with the card. Valid values are from 0-9.
          example: "1"
        cardStatus:
          type: string
          description: Card Status
          example: NORMAL
          enum:
          - BLOCK_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
          - OPEN
          - DIGITAL
          - ISSUED
          - RESTRICTED
          - CAPTURE
          - DEACTIVATED
        cardType:
          type: string
          description: Card type. Possible values DEBIT, CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association party. This applies only for Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        phone:
          type: string
          description: Cell phone number, work phone number, or home number.
          example: "1495041"
        dateOfBirth:
          type: string
          description: Date of Birth.
          example: 10/1/52
        expiryDate:  
          type: string
          description: "Card expiry date  "
          format: "MMYY"  
        emailAddress:
          type: string
          description: email address.
          example: alexsmith@example.com
    
    Warning:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem.
        spanId:
          type: string
          description: Id generated on each service.
        traceId:
          type: string
          description: Id generated from a request on the first service and passed to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetail'
    WarningDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)].
        detail:
          type: string
          description: Details of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated per request on each service.
        timestamp:
          type: string
          description: Date time of the error from a services.
    "4xxError":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
    Schema1:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Schema2:
      type: object
      properties:
        id:
          type: integer
          format: int64
  parameters:
    userIdParam:
      name: userId
      in: header
      description: Optional. User on behalf of whom the request is being made. userId must be alphanumeric.
      required: false
      style: simple
      explode: false
      schema:
        type: string
      example: johndoe
    authorizationParam:
      name: Authorization
      in: header
      description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
    clientIdParam:
      name: x-fapi-financial-id
      in: header
      description: Required. Provide 8 digit client id
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 12345678
  headers:
    interactionId:
      description: unique transaction ID created for each request for tracking purposes
      style: simple
      explode: false
      schema:
        type: string
        example: 95ad42fb-afd1-2121-b794-3ed29342ks42
  securitySchemes:
    BearerAuth:
      type: http
      description: Enter 'Bearer ' followed by the access token.
      scheme: bearer