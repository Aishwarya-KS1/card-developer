---
openapi: 3.0.0
info:
  title: Cards
  description: 
  version: 1.3.0
servers:
- url: https://card.api.fiservapps.com/cs/cards
  description: Production url
- url: https://card-sandbox.api.fiservapps.com/cs/cards
  description: Sandbox url
security:
- BearerAuth: []
tags:
- name: Activation
  description: Resources to search, update  activation related details.
- name: Details
  description: Resources to search the cards and cardholders details
- name: Digital Card Display
  description: Resources to digitally display card details
- name: Limits
  description: Resources to support limit value maintenance for specified PAN
- name: PIN
  description: Resources to set a pin and reset pin attempts
- name: Update Status
  description: Resources to update the card status
paths:
  /v1/details:
    put:
      tags:
      - Update Status
      summary: This operation is to update the card status.
      operationId: updateCardStatus
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDetailsUpdateRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              description: Represents a transaction ID created for each request.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              description: transaction ID created for each request
              style: simple
              explode: false
              schema:
                type: string
            spanId:
              description: Id generated given request on each service.
              style: simple
              explode: false
              schema:
                type: string
              example: c123465
            traceId:
              description: Id generated from a request on the first service and pass to other downstream services.
              style: simple
              explode: false
              schema:
                type: string
              example: sd6546sds654asd8s54
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "401":
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                  - code: 401
                    description: Invalid access token
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: transaction ID created for each request
              style: simple
              explode: false
              schema:
                type: string
            spanId:
              description: Id generated given request on each service.
              style: simple
              explode: false
              schema:
                type: string
              example: c123465
            traceId:
              description: Id generated from a request on the first service and pass to other downstream services.
              style: simple
              explode: false
              schema:
                type: string
              example: sd6546sds654asd8s54
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              description: transaction ID created for each request
              style: simple
              explode: false
              schema:
                type: string
            spanId:
              description: Id generated given request on each service.
              style: simple
              explode: false
              schema:
                type: string
              example: c123465
            traceId:
              description: Id generated from a request on the first service and pass to other downstream services.
              style: simple
              explode: false
              schema:
                type: string
              example: sd6546sds654asd8s54
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "405":
          description: The HTTP verb used in the request is not supported on the resource
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              description: transaction ID created for each request
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                  - code: 415
                    description: unsupported Media Type
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: Unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
            spanId:
              description: Id generated given request on each service.
              style: simple
              explode: false
              schema:
                type: string
              example: c123465
            traceId:
              description: Id generated from a request on the first service and pass to other downstream services.
              style: simple
              explode: false
              schema:
                type: string
              example: sd6546sds654asd8s54
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_422'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: transaction ID created with each request
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                  - code: 429
                    description: Rate limit quota violation. Quota limit  exceeded.
        "500":
          description: Server Error
          headers:
            x-fapi-interaction-id:
              description: transaction ID created with each request
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: true
  /v1/cards/status:
    put:
      tags:
      - Update Status
      summary: This operation is to update the card status.
      operationId: CardStatusUpdate
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardDetailsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardStatusRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/activations/search:
    post:
      tags:
      - Activation
      summary: This operation returns the activation details of a given card.
      operationId: getCardActivationInfo
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: ActivationSearchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationSearchRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardActivationResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/activations:
    put:
      tags:
      - Activation
      summary: This operation will force activate a given card.
      operationId: activateCard
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardActivationUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardActivationUpdateRequest'
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardActivationUpdateResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "409":
          description: Conflict
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/authDetails:
    post:
      tags:
      - Digital Card Display
      summary: This operation gives card expiration date and CVV for the card number.
      operationId: getCardAuthDetails
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: getCardAuthDetailsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDetailsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDetailsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/token:
    post:
      tags:
      - PIN
      summary: Setting the PIN is a two step process. This operation returns a JWT which is valid for 15 minutes.
      operationId: getCardToken
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardTokenRequest'
      responses:
        "200":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardTokenResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pin:
    post:
      tags:
      - PIN
      summary: This operation sets a PIN for a given card. Setting the PIN is a two step process. It requires a JWT from the cardsToken operation for the card for which PIN is to be set. The JWT is valid for 15 minutes, therefore the gap between getCardToken and setPIN operations should not exceed the JWT expiration time limit.
      operationId: setPin
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
  /v1/cards/pinAttempts:
    put:
      tags:
      - PIN
      summary: This operation resets the pinAttempts count to zero for a given card.
      operationId: resetPinAttempts
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: cardpinattemptsUpdateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinAttemptUpdateRequest'
      responses:
        "204":
          description: Successful
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/search:
    post:
      tags:
      - Limits
      summary: Returns the limit values for a given card.
      operationId: cardLimitSearch
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: searchCardLimitsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardLimitsRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/daily:
    put:
      tags:
      - Limits
      summary: This method will override the daily limit values for a specific card. Applicable to debit cards only.
      operationId: updateDailyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateDailyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDailyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/openToBuy:
    put:
      tags:
      - Limits
      summary: This method will update the open to buy limit values for a specific card. Applicable to debit cards.
      operationId: updateOpenToBuyLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateOpenToBuyLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpenToBuyLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/velocity:
    put:
      tags:
      - Limits
      summary: This method updates the open to buy limit values for a specific card.
      operationId: updateVelocityLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: updateVelocityLimitRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVelocityLimitRequest'
        required: true
      responses:
        "204":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              description: unique transaction ID created for each request for tracking purposes
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cards/limits/default:
    put:
      tags:
      - Limits
      summary: This method sets the cardholder limits to default values per Card class.
      operationId: defaultCardholderLimits
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: defaultCardholderLimits
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultCardholderLimitsRequest'
        required: true
      responses:
        "200":
          description: Ok
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultCardholderLimitsResponse'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
      deprecated: false
  /v1/cardholders/search:
    post:
      tags:
      - Details
      summary: The operation helps to search cardholder records based on search parameters.
      operationId: searchCardholder
      parameters:
      - name: Authorization
        in: header
        description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
      - name: userId
        in: header
        description: User who is making this request
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: FDSCARD
      - name: x-fapi-financial-id
        in: header
        description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 12345678
      requestBody:
        description: Search Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardholderSearchRequest'
        required: true
      responses:
        "200":
          description: OK
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponse'
        "206":
          description: Partial success response
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardholderSearchResponseWarning'
        "400":
          description: Invalid Request
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "401":
          description: Unauthorized access
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "403":
          description: Forbidden
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "404":
          description: Not Found
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "405":
          description: Method Not Allowed
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "406":
          description: Unacceptable
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "415":
          description: Unsupported Media Type
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "422":
          description: Unprocessable Entity
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "429":
          description: Too Many Requests
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4xxError'
        "500":
          description: Internal Server Error
          headers:
            x-fapi-interaction-id:
              $ref: '#/components/headers/interactionId'
          content:
            application/json:
              schema:
                type: object
                example:
                  errorResponse:
                    code: 500-01
                    message: internal server error
                    developerInfo:
                      developerMessage: internal server error
                      moreInfo: There was a problem handling your request.  Please try again.  If the problem persists please contact Fiserv ETSD at 888-243-2543 (you unique messageID included below)
                      messageid: 25557-84290371-1
components:
  schemas:
    CustomDailylimits:
      type: object
      properties:
        noneExpiring:
          maxLength: 3
          type: string
          description: 'Indicates if the limits tend to expire.Valid values: YES, NO'
          example: "true"
        expirationDate:
          type: string
          description: The expiration date is applicable to daily limits
          format: date
          example: 2014-10-02
        atmTotalAmount:
          maxLength: 6
          type: string
          description: ATM Online and offline withdrawal limits at an ATM.
          example: "2000"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: ATM offline withdrawal limits at an ATM.
          example: "200"
        posTotalAmount:
          maxLength: 6
          type: string
          description: 'POS Online and offline withdrawal limits at a point-of-sale. '
          example: "3000"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "400"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: 'Online and offline activity for transactions involving other mediums, example: travelers cheques.'
          example: "500"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: 'Offline activity for transactions involving other mediums, example: travelers cheques.'
          example: "100"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: 'Online and offline activity for transactions performed without the card present, example: internet transactions.'
          example: "0"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: 'Offline activity for transactions performed without the card present, example: internet transactions.'
          example: "0"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: 'Combined total, Online and offline withdrawal limits at ATM and POS. | Daily Limit Combined number of transaction attempts allowed at the ATM and POS. | Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN) '
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: 'Total daily amount available for deposit '
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "0"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: 'Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction. '
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit.  dollar amount allowed for the specific transaction type during online and offline processing
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit.  dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
    DefaultCardholderLimitsResponse:
      title: DefaultCardholderLimitsResponse
      type: object
      properties:
        cardNumber:
          type: string
          description: Masked Cardnumber except the first 6 and last 4 digits
          example: 400020XXXXXX4000
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    DefaultCardholderLimitsRequest:
      title: DefaultCardholderLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated to the card.If the member number is not passed it will be defaulted to 0.
          example: "0"
          default: "0"
    CustomVelocityLimits:
      type: object
      properties:
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time. This is applicable for debit cards.
          example: "20"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type. This field is applicable for Debit cards.
          example: "610"
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of ATM transactions allowed within a certain period of time. This field is applicable for Debit cards.
          example: "20"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of POS transactions allowed within a certain period of time.  This field is applicable for Debit cards.
          example: "4"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of Cash Equivalent transactions allowed within a certain period of time. This field is applicable for Debit cards.
          example: "4"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type. This field is applicable for debit cards.
          example: "610"
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type. This field is applicable for debit cards.
          example: "610"
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type. This field is applicable for debit cards.
          example: "610"
    UpdateVelocityLimitRequest:
      title: UpdateVelocityLimitRequest
      required:
      - cardNumber
      - velocityLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Each card number is in between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated to the card.If the member number is not passed it will be defaulted to 0.
          example: "0"
          default: "0"
        velocityLimits:
          $ref: '#/components/schemas/CustomVelocityLimits'
    CustomOpenToBuyLimits:
      type: object
      properties:
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: This indicates the total amount of outstanding holds for an account.
          example: "9999"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: This indicates the total amount of outstanding holds for a specific card
          example: "9999"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: This indicates the total amount of outstanding holds offline for a specific account.
          example: "123"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: This indicates the total amount of outstanding holds for a specific card offline.
          example: "123"
    UpdateOpenToBuyLimitRequest:
      title: UpdateOpenToBuyLimitRequest
      required:
      - cardNumber
      - openToBuyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Each card number is in between 16 to 19 digits.
          example: "4000200030004000"
          x-encrypted: "Y"
        memberNumber:
          type: string
          description: Member Number associated to the card.If the member number is not passed it will be defaulted to 0.
          example: "0"
          default: "0"
        openToBuyLimits:
          $ref: '#/components/schemas/CustomOpenToBuyLimits'
    UpdateDailyLimitRequest:
      title: UpdateDailyLimitRequest
      required:
      - cardNumber
      - dailyLimits
      type: object
      properties:
        cardNumber:
          type: string
          description: Each card number is in between 16 to 19 digits.
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated to the card.If the member number is not passed it will be defaulted to 0.
          example: "0"
          default: "0"
        dailyLimits:
          $ref: '#/components/schemas/CustomDailylimits'
    PinAttemptUpdateRequest:
      title: PinattemptUpdateRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Each card number is in between 16 to 19 digits
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder.If the member number is not passed it will be defaulted to 0.This field is applicable  for debit cards. valid values are from 0-9
          example: "2"
    SearchCardLimitsRequest:
      title: SearchCardLimitsRequest
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Each card number between 16 to 19 digits
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member Number associated to the card. If the member number is not passed it will be defaulted to default value.
          example: "0"
    SearchCardLimitsResponse:
      type: object
      properties:
        cardLimits:
          $ref: '#/components/schemas/CardLimitsSearch'
      description: If there are elements with  null values in the response, the elements will not be displayed in the response.
    CardLimitsSearch:
      type: object
      properties:
        noneExpiring:
          maxLength: 3
          type: string
          description: 'Indicates if the limits will expire or not. Valid values: YES, NO'
          example: "false"
        expirationDate:
          type: string
          description: The expiration date of the limits if the limits are tend to expire. Not applicable if they have no expiration date.  This field  is applicable to daily limits only.
          format: date
        limitType:
          type: string
          description: Indicate if the limits are overridden or card class values
          example: OVERRIDE
          enum:
          - OVERRIDE
          - CARD_CLASS
        atmTotalAmount:
          maxLength: 6
          type: string
          description: ATM Online and offline withdrawal limits at an ATM.
          example: "600"
        atmOfflineAmount:
          maxLength: 6
          type: string
          description: ATM offline withdrawal limits at an ATM.
          example: "300"
        posTotalAmount:
          maxLength: 6
          type: string
          description: 'POS Online and offline withdrawal limits at a point-of-sale. '
          example: "2500"
        posOfflineAmount:
          maxLength: 6
          type: string
          description: POS offline withdrawal limits at a point-of-sale.
          example: "500"
        cashEquivTotalAmount:
          maxLength: 6
          type: string
          description: 'Online and offline activity for transactions involving other mediums, example: travelers cheques.'
          example: "10"
        cashEquivOfflineAmount:
          maxLength: 6
          type: string
          description: 'Offline activity for transactions involving other mediums, example: travelers cheques.'
          example: "2"
        customerNPTotalAmount:
          maxLength: 6
          type: string
          description: 'Online and offline activity for transactions performed without the card present, example: internet transactions.'
          example: "1500"
        customerNPOfflineAmount:
          maxLength: 6
          type: string
          description: 'Offline activity for transactions performed without the card present, example: internet transactions.'
          example: "500"
        signatureDebitPOSTotalAmount:
          maxLength: 6
          type: string
          description: Signature POS Daily limit for purchase transaction requiring a signature.
          example: "0"
        signatureDebitPOSOfflineAmount:
          maxLength: 6
          type: string
          description: Signature POS daily limit for purchase transaction requiring a signature.
          example: "0"
        cashAdvanceTotalAmount:
          maxLength: 6
          type: string
          description: Online and offline activity for cash advances from an ATM.
          example: "0"
        cashAdvanceOfflineAmount:
          maxLength: 6
          type: string
          description: Offline activity for cash advances from an ATM.
          example: "0"
        aggregateTotalAmount:
          maxLength: 6
          type: string
          description: 'Combined total, Online and offline withdrawal limits at ATM and POS. | Daily Limit Combined number of transaction attempts allowed at the ATM and POS. | Velocity Support (Maximum number of transactions allowed during the lifespan of the PAN) '
          example: "2500"
        accountOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyTotalAmount:
          maxLength: 6
          type: string
          description: Maximum amount of outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        dayOfDepositAvailabilityTotalAmount:
          maxLength: 6
          type: string
          description: 'Total daily amount available for deposit '
          example: "0"
        accountOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a cardholder's account based on POS transactions.
          example: "0"
        cardOpenToBuyOfflineAmount:
          maxLength: 6
          type: string
          description: Maximum amount of offline outstanding holds that can be placed on a specific card based on POS transactions.
          example: "0"
        aggregateOfflineAmount:
          maxLength: 6
          type: string
          description: Offline withdrawal limits at ATM and POS.
          example: "500"
        mtFundingAmtPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer funding  | P2P Limits Maximum dollar amount per MT funding transaction.
          example: "0"
        mtFundingAmtPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: 'Money transfer funding | P2P Limits | offline processing. Maximum dollar amount per MT funding transaction. '
          example: "0"
        mtFundingDlyCntTotal:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing
          example: "0"
        mtFundingDlyCntOffline:
          maxLength: 4
          type: string
          description: Number of MT funding transactions during daily offline processing
          example: "0"
        mtFundingDlyTotalAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily online and offline processing
          example: "0"
        mtFundingDlyOfflineAmount:
          maxLength: 6
          type: string
          description: Dollar amount of MT funding transactions during daily offline processing
          example: "0"
        mtCreditPerTranTotalAmount:
          maxLength: 6
          type: string
          description: Money transfer credit.  dollar amount allowed for the specific transaction type during online and offline processing
          example: "0"
        mtCreditPerTranOfflineAmount:
          maxLength: 6
          type: string
          description: Money transfer credit.  dollar amount allowed for the specific transaction type during offline processing
          example: "0"
        mtCreditDlyCntTotal:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyCntOffline:
          maxLength: 4
          type: string
          description: Money transfer credit. Daily Count—Maximum number of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        mtCreditDlyTotalAmount:
          maxLength: 6
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day online and offline.
          example: "0"
        mtCreditDlyOfflineAmount:
          maxLength: 4
          type: string
          description: Daily Amount—Maximum dollar amount of MT credit transactions a cardholder can perform during a processing day offline.
          example: "0"
        aggMaxCardUsage:
          maxLength: 4
          type: string
          description: Maximum number of times a card can be used for a specific transaction type within the specified time.
          example: "0"
        aggTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for a specific transaction type.
          example: 00:00
        atmMaxCardUsage:
          maxLength: 4
          type: string
          description: 'Maximum number of ATM transactions allowed within a certain period of time. '
          example: "0"
        posMaxCardUsage:
          maxLength: 4
          type: string
          description: 'Maximum number of POS transactions allowed within a certain period of time. '
          example: "0"
        cashEquivMaxCardUsage:
          maxLength: 4
          type: string
          description: 'Maximum number of Cash Equivalent transactions allowed within a certain period of time. '
          example: "0"
        atmTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for ATM transaction type.
          example: 00:00
        posTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for POS transaction type.
          example: 00:00
        cashEquivTimeInterval:
          maxLength: 5
          type: string
          description: Number of hours used to track maximum card usage for Cash Equivalent transaction type.
          example: 00:00
        retail:
          type: string
          description: Minimum retail authorization amount.The system approves any retail transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        travel:
          type: string
          description: Minimum travel and entertainment authorization amount.The system approves any travel and entertainment transaction less than or equal to this amount without checking usage or balances.
          example: "0"
        lastMaintenanceBy:
          type: string
          description: User ID of the person who performed the last maintenance.
          example: Alex
        lastMaintainanceDateTime:
          type: string
          description: Date of last maintenance performed on this cardholder record.
          format: date-time
          example: 2014-10-02T15:01:23.045Z
    CardActivationUpdateResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type, possible values DEBIT,CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by when the Card must be activated. This is debit only field
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on when the Card can be used by user. This is applicable for debit cards only.
          format: date
          example: 2014-10-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-10-28
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: This indicates the number of activation attempts happened from the last reset. This is applicable to debit only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: If there are elements with  null values in the response, the elements will not be displayed in the response.
    CardActivationUpdateResponseWarning:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type, possible values DEBIT,CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by when the Card must be activated. This is debit only field
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on when the Card can be used by user. This is applicable for debit cards only.
          format: date
          example: 2014-10-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-10-28
        cardActivationStatus:
          type: string
          description: NOT_ACTIVATED and ACTIVATED statuses apply to both debit and credit type of cards, remaining statuses are applicable for Debit only.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: This indicates the number of activation attempts happened from the last reset. This is applicable to debit only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: If there are elements with  null values in the response, the elements will not be displayed in the response.
    SearchCardActivationResponse:
      type: object
      properties:
        cardType:
          type: string
          description: Card Type, possible values DEBIT,CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        activationRequiredByDate:
          type: string
          description: Date by when the Card must be activated. This is debit only field
          format: date
          example: 2014-10-28
        availableForUseDate:
          type: string
          description: Date on when the Card can be used by user. This is applicable for debit cards only.
          format: date
          example: 2014-11-28
        cardActivationDate:
          type: string
          description: Date when the card was activated. If the field is blank, the card is not yet activated.
          format: date
          example: 2014-11-28
        cardActivationStatus:
          type: string
          description: This provides the activation status of a given card.
          example: NOT_ACTIVATED
          enum:
          - NOT_ACTIVATED
          - ACTIVATED
          - ACTVN_BEFORE_AVAILABLE_DATE
          - CARD_RECORD_NOT_FOUND
          - CARD_LOST_OR_STOLEN
          - CARD_CLOSED
          - NO_ACTIVATION_REQUIRED
          - ACTIVATION_REQUIRED
          - EXP_DATE_NOT_MATCH
          - ALREADY_ACTIVATED
          - ATTEMPT_AFTER_DEADLINE
          - MAX_ATTEMPTS_EXCEEDED
          - CALLER_ID_INVALID
          - ACTIVATION_CODE_INVALID
          - PIN_CHECK_NOT_PERFORMED
          - INVALID_ACTIVATION_METHOD
          - IVR_AUTH_FAILED
        lastActivationAttemptDate:
          type: string
          description: The date when the cardholder last attempted to activate the card
          format: date
          example: 2014-10-28
        activationMethod:
          type: string
          description: Indicates how the card was activated
          example: FIRST_PIN_ID
          enum:
          - FIRST_PIN_ID
          - VRU_ACTIVATION
          - VRU_CALLER_ID
          - VRU_CODE_AND_CALLER_ID
          - OPERATOR_ACTIVATE
          - VRI_ATTEM
          - CARD_NOT_ACTIVATED
        numberOfAttempts:
          type: string
          description: This indicates the number of activation attempts happened from the last reset. This is applicable to debit only.
          example: "4"
        verificationCallerID:
          type: string
          description: Voice response unit verification caller identifier. This field contains the phone number (home/work/cell) of the primary cardholder.
      description: If there are elements with  null values in the response, the elements will not be displayed in the response.
    CardActivationUpdateRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number between 16 and 19 digits
          example: "4000100020003001"
        cardMemberNumber:
          type: string
          description: This field is applicable for debit cards only. Member Number associated to the card. If the member number is not passed, the system will activate the  default memberNumber.
          example: "1"
    AuthDetailsRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Between 16 and 19 digits for card number identifier
          example: "4000200030004000"
    AuthDetailsResponse:
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: 'Between 16 and 19 digits for card number identifier. The cardNumber will be masked, except the first 6 and last 4 digits. '
          example: 400020XXXXXX4000
        CV2:
          type: string
          description: Card CV2
          example: "282"
        cardExpirationDate:
          type: string
          description: Card Expiration Date
          format: MMYY
          example: "0228"
    ActivationSearchRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          type: string
          description: Card number, between 16 to 19 digits
          example: "4000100020003001"
    CardDetailsUpdateRequest:
      title: CardDetailsUpdateRequest
      required:
      - op
      - updateCardDetails
      type: object
      properties:
        op:
          type: array
          items:
            type: string
            description: Operation to update the card status
            enum:
            - UPDATE_CARD_STATUS
        updateCardDetails:
          $ref: '#/components/schemas/UpdateCardDetails'
    UpdateCardStatusRequest:
      title: CardStatusUpdateRequest
      required:
      - cardNumber
      - cardStatus
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card NUmber Identifier
          example: "4000200030004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. This is required for Debit only. Please specify the memberNumber, or pass this as 0.
          example: "0"
        cardStatus:
          type: string
          description: ' Valid values for Debit - ACTIVE,  CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATIONn, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL.  Refer to statusReasonCode field description for updating the status.'
          example: CAPTURE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: 'Indicates the reason code associated to the card status. Valid values for Debit: LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit-STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI'
          example: LOST
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
        fraudActivity:
          type: string
          description: This is an optional field and is applicable only when status is to be updated to LOST_OR_STOLEN for Credit.Indicates if it is required to open a fraud dispute claim or no
          example: POSSIBLE_FRAUD
          enum:
          - NONE_SUSPECTED
          - POSSIBLE_FRAUD
        securityMemo:
          maxLength: 220
          type: string
          description: ' This field will be required when fraudActivity is POSSIBLE_FRAUD. This is an conditional mandatory field and is applicable only when status is LOST_OR_STOLEN for Credit. Details on the fraud dispute to be claimed.'
    UpdateCardDetails:
      required:
      - cardNumber
      - cardStatus
      - memberNumber
      - statusReasonCode
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier
          example: "4000300020004000"
        memberNumber:
          type: string
          description: Member number associated with the selected cardholder. This is required for Debit only. Please specify the memberNumber, or pass this as 0. This field is applicable and mandatory for debit only. Valid values are 0-9
          example: "0"
        cardStatus:
          type: string
          description: Valid values for Debit - ACTIVE, CAPTURE, DEACTIVATE, ISSUED and RESTRICTED. Valid values for Credit - BLOCKED_FROM_AUTHORIZATIONn, NOT_ACTIVE, LOST_OR_STOLEN, FRAUD_DETECTED, NORMAL, If Space/Blank, lookup  should return NORMAL. Refer to statusReasonCode field description for updating the status
          example: ACTIVE
          enum:
          - ACTIVE
          - CAPTURE
          - DEACTIVATE
          - ISSUED
          - RESTRICTED
          - BLOCKED_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
        statusReasonCode:
          type: string
          description: 'Indicates the reason code associated to the card status. Valid values for Debit: LOST, STOLEN, CLOSED, ABUSED, REVOKED, DAMAGED, CUSTOMER_REQUEST. One of the statusReasonCode is required when updating the status to CAPTURE or DEACTIVATE. All the reason codes are applicable when updating the status to CAPTURE or DEACTIVATE. Keep this field as NONE when updating to any other statuses. Valid Values For Credit-STOLEN, LOST, TEMP_BLOCK_BY_FI, TEMP_BLOCK_AGENT, REVOKED, DECEASED, CLOSED_BY_CUSTOMER, CLOSED_BY_FI'
          example: NONE
          enum:
          - LOST_BLOCK_BY_ENFACT
          - FRAUD
          - CLOSED_BY_CUSTOMER
          - REVOKED
          - CLOSED_BY_FI
          - TEMP_BLOCK_BY_FI
          - APPLIED_BY_IDV
          - TEMP_BLOCK_BY_ENFACT
          - TEMP_BLOCK_AGENT
          - DECEASED
          - NORMAL
          - NONE
          - CLOSED
          - CUSTOMER_REQUEST
          - LOST
          - STOLEN
          - ABUSED
          - DAMAGED
    CardTokenRequest:
      required:
      - cardNumber
      type: object
      properties:
        cardNumber:
          maxLength: 19
          minLength: 16
          type: string
          description: Card number identifier
          example: "4000100020003000"
    PinRequest:
      required:
      - jwt
      - pin
      type: object
      properties:
        pin:
          maxLength: 4
          minLength: 4
          type: string
          description: PIN to be set for a given card number. Only numerics are allowed. No repetitive characters 3 times in a row like 111X, X333, 1111, 2222. No sequential characters (even backwards) 0123, 1234, 2345, 6543. 3210 etc.
          example: "2938"
        jwt:
          type: string
          description: Fiserv issued JWT, which is provided in the getCardToken (POST /v1/cards/token) response. jwt provided for one card can only be used to set the PIN for that particular card. If a different jwt is provided, then the PIN will be set to the associated card.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardTokenResponse:
      type: object
      properties:
        jwt:
          type: string
          description: Fiserv issued JWT, which is one of the inputs to setPIN(POST /v1/cards/pins) operation. This jwt is valid for 15 mins.
          example: eyJ0eXAiOiJKV1QiLCJlbmMiOiJBMTI4R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.WrliT8nLQOTRnXldrYj0brobAyi6M7-U8_iHovmTH1VAZksc4mOGQCfaSx-sbDNjdkpeznR8lU1sHOX26qom94jBO6uePEw1cBbTHLpOSEPDYiWS6SzTgxguF7zT2g5Ui1HHi2GKgPtH5L0XC_QqP5TIs3A15fqpAnvMaSwW9O_GDRzxnsUDCgEZCkwQOuEpWYDbM7r7yKrfAlkWKOHOlZuUtvJvg3k8p-1qwKpuGexhWXQdgKsWphBWbMzbindOIefIo4VTrOVMxWOdP_bLNId0E0CBLxSpRHX1u3EeAjUykUdifT2CP4bb6kbJf4pp0dRc_uPZGJLj7faPyq6UeQ.zTLJMNI8bjGh-KBy.FW0W0ihL2sj7pYin2iY1gavS4W-yPswjKmrb6-ROwHgEOscfeGGLmUihzoV6vy9KvTJ9ytnIPqh-K94UsShUJ0-KgsY4_eWyUwx4IYpYaJkPeUVd4ni_1eZMBy6-hPr3n39DES_kXfnv3MJOiZZj0I-GJXw99WBV7xhl7KZcFKyMXYnszyboV8Xi2iZqHglvEoYRjKLvOlEq2j4pJoMRVfBB8oIOZm6uyCaOnyuWuE_Lg1HeuNMnHddTm8gexDAfwj3WYHkJazsN1PZVhPZVImyKwCNM.TOYk3lw2SKYamQL7XiLXlg
    CardholderSearchRequest:
      title: CardholderSearchRequest
      type: object
      properties:
        cardNumber:
          type: string
          description: Full Card number
          example: "4000200030004000"
        ssnOrTaxid:
          type: string
          description: Full SSN or Tax ID of a cardholder. Pass exactly 9 digits for this field.
          example: "987001234"
        accNumber:
          type: string
          description: Account Number
          example: "123456789"
        phone:
          type: string
          description: 'CellPhone Number or home phone number or work phone number '
          example: "1495041"
        emailAddress:
          type: string
          description: email id
          example: alexsmith@email.com
        dateOfBirth:
          type: string
          description: Date of Birth
          example: 10/1/52
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        lastFourCardNumber:
          type: string
          description: The last four digits of the card number
          example: "4000"
        lastFourAccNumber:
          type: string
          description: The last four digits of the Account number
          example: "6789"
        lastName:
          type: string
          description: The last name of the customer
          example: Smith
        lastFourSsnOrTaxid:
          type: string
          description: The last four digits of the ssn/taxid number. This is currently supported for debit cards only
          example: "1234"
      description: In this operation, following are the exact match search criteria fields:cardNumber, accountNumber, ssnOrTaxid, emailAddress, lastName and phone. Atleast one of the above values is required in the request, so the api will search for the exact value in the system. Along with the exact match fields, there are other optional parameters which can be passed in combination with exact match fields, to further refine the search criteria. Passing one of the exact match search criteria is mandatory in request.
    CardholderSearchResponse:
      title: CardholderSearchResponse
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
      description: If there are any  null values in the response elements, the elements will not be displayed in the response.
    CardholderSearchResponseWarning:
      title: CardholderSearchResponseWarning
      type: object
      properties:
        cardholderCardsDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardholderCardsDetails'
        warningInfo:
          $ref: '#/components/schemas/Warning'
      description: If there are any  null values in the response elements, the elements will not be displayed in the response.
    CardholderCardsDetails:
      title: CardholderCardsDetails
      required:
      - cardholderCardsDetails
      - cards
      type: object
      properties:
        cardholderDetails:
          $ref: '#/components/schemas/CHCardholder'
        cards:
          type: array
          items:
            $ref: '#/components/schemas/CHCard'
    CHCardholder:
      type: object
      properties:
        cardholderName:
          type: string
          description: Cardholder name
          example: Alex Smith
    CHCard:
      type: object
      properties:
        cardNumber:
          type: string
          description: Card Number
          example: "4000200030004000"
        accountNumbers:
          type: array
          description: Account identifiers for a given Card.
          example: '[123456789,987654321]'
          items:
            type: string
        cardMemberNumber:
          type: string
          description: Member Number associated to the card. Valid values are from 0-9
          example: "1"
        cardStatus:
          type: string
          description: Card Status
          example: NORMAL
          enum:
          - BLOCK_FROM_AUTHORIZATION
          - NOT_ACTIVE
          - LOST_OR_STOLEN
          - FRAUD_DETECTED
          - NORMAL
          - OPEN
          - DIGITAL
          - ISSUED
          - RESTRICTED
          - CAPTURE
          - DEACTIVATED
        cardType:
          type: string
          description: Card Type, possible values DEBIT,CREDIT_GATEWAY or CREDIT.
          example: CREDIT
          enum:
          - CREDIT
          - DEBIT
          - CREDIT_GATEWAY
        association:
          type: string
          description: Type of association party. This applies only for Credit. This field will not be present for Debit cards.
          example: PRIMARY
          enum:
          - PRIMARY
          - SECONDARY
          - AUTHORIZED_USER
          - GUARANTOR_OR_CO-SIGNER
        postalCode:
          type: string
          description: ZipCode
          example: "12345"
        phone:
          type: string
          description: It could be CellPhone Number,Work phone number, home number
          example: "1495041"
        dateOfBirth:
          type: string
          description: date of birth
          example: 10/1/52
        emailAddress:
          type: string
          description: email id
          example: alexsmith@email.com
    Warning:
      type: object
      properties:
        message:
          type: string
          description: An explanation specific to this occurrence of the problem
        spanId:
          type: string
          description: Id generated  on each service
        traceId:
          type: string
          description: Id generated from a request on the first service and pass to other downstream services.
        warningDetails:
          type: array
          description: List of multiple errors that may cause/trigger the general error.
          items:
            $ref: '#/components/schemas/WarningDetail'
    WarningDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for error [artifact Id] - [code of the error(logic, action, etc)]
        detail:
          type: string
          description: Human details  of the error.
          example: Please refine your search criteria, Search results are >=250
        spanId:
          type: string
          description: Id generated given request on each service
        timestamp:
          type: string
          description: Date time of the error from a services.
    "4xxError":
      type: object
      properties:
        type:
          type: string
          description: An URI reference that identifies the problem type
          example: https://card.developer.fiserv.com/cards/error#invalid-request
        title:
          type: string
          description: Short summary of the problem.
          example: Invalid Request
        detail:
          type: string
          description: Specific explanation to the occurence of the problem.
          example: We had a problem getting your credit and debit card information.
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          example: /v1/cards/details
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
    inline_response_400:
      type: object
      properties:
        type:
          type: string
          description: A short  summary of the type of the problem system encourted.
          example: Validation Error
        title:
          type: string
          description: A short  summary of the problem system encourted.
          example: Request processing error
        message:
          type: string
          description: More detailed message on the problem system encoured.
          example: Invalid Card Number
        instance:
          type: string
          description: API host where the problem encoured.
          example: /api/v1/cardholders/search
        timestamp:
          type: string
          description: Date and time of the error from the services.
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 400
        code:
          type: string
          description: Code generated to better and quickly identify the error type and services who trigger it. [HTTP Method]-[artifact Id]-[code of the error(logic, action, etc)]
          example: 400-666-301 (400 is Http Status Code, 666 is Id of the services that throw the error and 301 could be Not enough credit.)
    inline_response_403:
      type: object
      properties:
        type:
          type: string
          description: A short  summary of the type of the problem system encourted.
          example: Validation Error
        title:
          type: string
          description: A short  summary of the problem system encourted.
          example: Request processing error
        message:
          type: string
          description: More detailed message on the problem system encoured.
          example: Invalid Card Number
        instance:
          type: string
          description: API host where the problem encoured.
          example: /api/v1/cardholders/search
        timestamp:
          type: string
          description: Date and time of the error from the services.
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 403
        code:
          type: string
          description: Code generated to better and quickly identify the error type and services who trigger it. [HTTP Method]-[artifact Id]-[code of the error(logic, action, etc)]
          example: 403-666-301 (403 is Http Status Code, 666 is Id of the services that throw the error and 301 could be Not enough credit.)
    inline_response_404:
      type: object
      properties:
        type:
          type: string
          description: A short  summary of the type of the problem system encourted.
          example: Resource does not exists
        title:
          type: string
          description: A short  summary of the problem system encourted.
          example: Resource Not found
        message:
          type: string
          description: More detailed message on the problem system encoured.
          example: No matching search results found or you do not have sufficient access rights to get search results matching your criteria.
        instance:
          type: string
          description: API host where the problem encoured.
          example: /api/v1/cardholders/search
        timestamp:
          type: string
          description: Date and time of the error from the services.
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 404
        code:
          type: string
          description: Code generated to better and quickly identify the error type and services who trigger it. [HTTP Method]-[artifact Id]-[code of the error(logic, action, etc)]
          example: 404-666-301 (404 is Http Status Code, 666 is Id of the services that throw the error and 301 could be Not enough credit.)
    inline_response_422:
      type: object
      properties:
        type:
          type: string
          description: A short  summary of the type of the problem system encourted.
          example: Validation Error
        title:
          type: string
          description: A short  summary of the problem system encourted.
          example: Request processing error
        message:
          type: string
          description: More detailed message on the problem system encoured.
          example: Invalid Card Number
        instance:
          type: string
          description: API host where the problem encoured.
          example: /api/v1/cardholders/search
        timestamp:
          type: string
          description: Date and time of the error from the services.
        status:
          type: number
          description: The HTTP status code generated by the origin server for this occurance of the problem.
          example: 422
        code:
          type: string
          description: Code generated to better and quickly identify the error type and services who trigger it. [HTTP Method]-[artifact Id]-[code of the error(logic, action, etc)]
          example: 422-666-301 (422 is Http Status Code, 666 is Id of the services that throw the error and 301 could be Not enough credit.)
  parameters:
    userIdParam:
      name: userId
      in: header
      description: User who is making this request
      required: false
      style: simple
      explode: false
      schema:
        type: string
      example: FDSCARD
    authorizationParam:
      name: Authorization
      in: header
      description: 'Retrieve an access token through the Access Token API. Access token is required in every request. Refer to documentation on access token  (https://card.developer.fiserv.com/apis/token).Tokens expire after 15 minutes. Provide the value as follows in the header. Authorization: Bearer <Access Token Value>'
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Bearer USlfM8dilzKZPcuGGP3BfVLd7Snk
    clientIdParam:
      name: x-fapi-financial-id
      in: header
      description: Required. In sandbox environment, provide example value below. In production environment, provide your unique assigned client id.
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 12345678
  headers:
    interactionId:
      description: unique transaction ID created for each request for tracking purposes
      style: simple
      explode: false
      schema:
        type: string
        example: 95ad42fb-afd1-2121-b794-3ed29342ks42
  securitySchemes:
    BearerAuth:
      type: http
      description: Enter 'Bearer ' followed by the access token.
      scheme: bearer
